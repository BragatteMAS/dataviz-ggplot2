{
  "hash": "501d1d48d09b0516046e2d4cf5437225",
  "result": {
    "markdown": "---\ntitle: \"Engaging and Beautiful Data Visualizations with ggplot2\"\nsubtitle: \"<span style='font-size:1.8em;'>Fundamentals & Workflows</span><br><span style='font-weight:400;font-size:1.3em;'>â€” Exercise Solutions â€”</span>\"\nauthor: \"<a href='https://www.cedricscherer.com' style='color:#28a87d;font-weight:600;'>CÃ©dric Scherer</a>&ensp;//&ensp;posit::conf&ensp;//&ensp;September 2023</span></span>\"\nformat:\n  revealjs:\n    theme: slides.scss\n    footer: '[CÃ©dric Scherer](https://cedricscherer.com) // posit::conf(2023)'\n    transition: fade\n    progress: true\n    multiplex: false\n    preview-links: true\n    scrollable: false\n    hide-inactive-cursor: true\n    highlight-style: printing\n    chalkboard:\n      theme: whiteboard\n      boardmarker-width: 4\n      buttons: true\n    pause: true\n    mainfont: Cabinet Grotesk\neditor: source\nknitr:\n  opts_chunk:\n    dev: \"ragg_png\"\n    retina: 3\n    dpi: 200\nexecute:\n  freeze: auto\n  cache: true\n  echo: true\n  fig-width: 10\n  fig-height: 6.2\n  fig-align: center\n---\n\n\n## Preparation\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(readr)\nlibrary(dplyr)\nlibrary(ggplot2)\n\n## data\nbikes <-\n  read_csv(\n    here::here(\"data\", \"london-bikes.csv\"),\n    col_types = \"Dcfffilllddddc\"\n  )\n\n## plot style\ntheme_set(theme_minimal(base_family = \"Asap SemiCondensed\", base_size = 18))\ntheme_update(\n  panel.grid.minor = element_blank()\n)\n```\n:::\n\n\n\n# Exercise 1\n\n\n## Exercise 1\n\n::: question\n-   **Discuss / investigate with your neighbor:**\n    -  What are the differences between `geom_line()` and `geom_path()`?\n    -  Why can you use `geom_smooth()` and `stat_smooth()` interchangeably?\n    -  What are the three ways to *remove a legend* from a ggplot?\n:::\n\n\n## geom_line() versus geom_path()\n\n\n::: {.cell hash='01-fundamentals-solutions_cache/revealjs/exercise-1-1-help-geom-line_f9df086bc0c7da4195392ee7e2a7b18b'}\n\n```{.r .cell-code}\n?geom_line\n```\n:::\n\n\n<br>\n\n#### Description\n\n> `geom_path()` connects the observations in the **order in which they appear in the data**. `geom_line()` connects them in **order of the variable on the x axis**.  \n\n\n## geom_line() versus geom_path()\n\n\n::: {.cell hash='01-fundamentals-solutions_cache/revealjs/exercise-1-1-data-filtered_fae60428f6e739edc2437f2e650e7ba0'}\n\n```{.r .cell-code}\nbikes_filtered <- \n  bikes |> \n  filter(year == 2015, month == 2, day_night == \"day\")\n```\n:::\n\n\n\n## geom_line() versus geom_path()\n\n::: {layout-ncol=\"2\"}\n\n\n::: {.cell hash='01-fundamentals-solutions_cache/revealjs/exercise-1-1-geom-line_e7d5c9ba10cf8df6e354eb8e5fea0b29'}\n\n```{.r .cell-code  code-line-numbers=\"3\"}\nggplot(bikes_filtered,\n       aes(x = humidity, y = temp)) +\n  geom_line() +\n  geom_point(aes(color = date), size = 4)\n```\n\n::: {.cell-output-display}\n![](01-fundamentals-solutions_files/figure-revealjs/exercise-1-1-geom-line-1.png){width=1500}\n:::\n:::\n\n::: {.cell hash='01-fundamentals-solutions_cache/revealjs/exercise-1-1-geom-path_fb82e0d7731eb1c6a5a8b53462645d45'}\n\n```{.r .cell-code  code-line-numbers=\"3\"}\nggplot(bikes_filtered,\n       aes(x = humidity, y = temp)) +\n  geom_path() +\n  geom_point(aes(color = date), size = 4)\n```\n\n::: {.cell-output-display}\n![](01-fundamentals-solutions_files/figure-revealjs/exercise-1-1-geom-path-1.png){width=1500}\n:::\n:::\n\n\n:::\n\n\n## geom_smooth() and stat_smooth()\n\n\n::: {.cell hash='01-fundamentals-solutions_cache/revealjs/exercise-1-1-help-geom-smooth_12c646afe1088c7ad1d086c4d2743c14'}\n\n```{.r .cell-code}\n?geom_smooth\n```\n:::\n\n\n<br>\n\n#### Description\n\n> `geom_smooth()` and `stat_smooth()` are effectively **aliases: they both use the same arguments**. Use `stat_smooth()` if you want to display the results with a non-standard geom.  \n\n\n--------------------------------------------------------------------------------\n\n<br><br><br><br>\n\n<code style='font-size:1.38em;font-weight:800;'>layer(data, mapping, geom, stat, position)</code>\n\n\n## layer()\n\n\n::: {.cell output-location='column' hash='01-fundamentals-solutions_cache/revealjs/exercise-1-1-layer_439dfbc4a4f0d6306ae7c1ce7f146a3c'}\n\n```{.r .cell-code}\nggplot() +\n  layer(\n    data = bikes, \n    mapping = aes(x = temp, y = count),\n    geom = \"point\", \n    stat = \"identity\", \n    position = \"identity\"\n  )\n```\n\n::: {.cell-output-display}\n![](01-fundamentals-solutions_files/figure-revealjs/exercise-1-1-layer-1.png){width=1000}\n:::\n:::\n\n\n\n## layer()\n\n\n::: {.cell output-location='column' hash='01-fundamentals-solutions_cache/revealjs/exercise-1-1-layer-ggplot_14ae0bace0f837740beb245c69c8707c'}\n\n```{.r .cell-code}\nggplot(\n    data = bikes, \n    mapping = aes(x = temp, y = count),\n  ) +\n  layer(\n    geom = \"point\", \n    stat = \"identity\", \n    position = \"identity\"\n  )\n```\n\n::: {.cell-output-display}\n![](01-fundamentals-solutions_files/figure-revealjs/exercise-1-1-layer-ggplot-1.png){width=1000}\n:::\n:::\n\n\n\n## geom_smooth() and stat_smooth()\n\n::: {layout-ncol=\"2\"}\n\n\n::: {.cell hash='01-fundamentals-solutions_cache/revealjs/exercise-1-1-geom-smooth-stat_7b37abbc23804af69255a436be29ccc6'}\n\n```{.r .cell-code  code-line-numbers=\"2\"}\ngeom_smooth(\n  stat = \"smooth\",\n  position = \"identity\"\n)\n```\n:::\n\n::: {.cell hash='01-fundamentals-solutions_cache/revealjs/exercise-1-1-stat-smooth-geom_e2a80a128b8d32cbe0a3b09e725e795e'}\n\n```{.r .cell-code  code-line-numbers=\"2\"}\nstat_smooth(\n  geom = \"smooth\",\n  position = \"identity\"\n)\n```\n:::\n\n\n:::\n\n\n## geom_smooth() and stat_smooth()\n\n::: {layout-ncol=\"2\"}\n\n\n::: {.cell hash='01-fundamentals-solutions_cache/revealjs/exercise-1-1-geom-smooth_7b42c53f2f84b69cad071fcf1625c927'}\n\n```{.r .cell-code  code-line-numbers=\"4\"}\nggplot(bikes,\n       aes(x = temp, y = count)) +\n  geom_point(alpha = .1) +\n  geom_smooth()\n```\n\n::: {.cell-output-display}\n![](01-fundamentals-solutions_files/figure-revealjs/exercise-1-1-geom-smooth-1.png){width=1500}\n:::\n:::\n\n::: {.cell hash='01-fundamentals-solutions_cache/revealjs/exercise-1-1-stat-smooth_e126fe82b333ee91305cc2275cc978cb'}\n\n```{.r .cell-code  code-line-numbers=\"4\"}\nggplot(bikes,\n       aes(x = temp, y = count)) +\n  geom_point(alpha = .1) +\n  stat_smooth()\n```\n\n::: {.cell-output-display}\n![](01-fundamentals-solutions_files/figure-revealjs/exercise-1-1-stat-smooth-1.png){width=1500}\n:::\n:::\n\n:::\n\n\n## \"Non-Standard Geom\"\n\n\n::: {.cell hash='01-fundamentals-solutions_cache/revealjs/exercise-1-1-stat-custom-geom-errorbar_d870b26990e86ba0bae40b9772b12d94'}\n\n```{.r .cell-code  code-line-numbers=\"4\"}\nggplot(bikes, aes(x = temp, y = count)) +\n  geom_point(alpha = .1) +\n  stat_smooth(geom = \"pointrange\")\n```\n\n::: {.cell-output-display}\n![](01-fundamentals-solutions_files/figure-revealjs/exercise-1-1-stat-custom-geom-errorbar-1.png){width=2400}\n:::\n:::\n\n\n\n## \"Non-Standard Geom\"\n\n\n::: {.cell hash='01-fundamentals-solutions_cache/revealjs/exercise-1-1-stat-custom-geom-col_4468ffbe410df30515206b42a09a5909'}\n\n```{.r .cell-code  code-line-numbers=\"4\"}\nggplot(bikes, aes(x = temp, y = count)) +\n  geom_point(alpha = .1) +\n  stat_smooth(geom = \"col\")\n```\n\n::: {.cell-output-display}\n![](01-fundamentals-solutions_files/figure-revealjs/exercise-1-1-stat-custom-geom-col-1.png){width=2400}\n:::\n:::\n\n\n\n## \"Non-Standard Geom\"\n\n\n::: {.cell hash='01-fundamentals-solutions_cache/revealjs/exercise-1-1-stat-custom-geom-text_4cd7986747ea861ad926b67c2e18c129'}\n\n```{.r .cell-code  code-line-numbers=\"4\"}\nggplot(bikes, aes(x = temp, y = count)) +\n  geom_point(alpha = .1) +\n  stat_smooth(geom = \"text\", aes(label = \"ðŸ¤“\"), size = 4)\n```\n\n::: {.cell-output-display}\n![](01-fundamentals-solutions_files/figure-revealjs/exercise-1-1-stat-custom-geom-text-1.png){width=2400}\n:::\n:::\n\n\n\n## geom_* versus stat_*\n\n\n::: {.cell hash='01-fundamentals-solutions_cache/revealjs/exercise-1-1-geom-bar_6ff8eda1c7184557b8fb44ef84b9f325'}\n\n```{.r .cell-code  code-line-numbers=\"2\"}\nggplot(bikes, aes(x = weather_type, fill = year)) + \n  geom_bar() # with `stat = \"count\", position = \"stack\"`\n```\n\n::: {.cell-output-display}\n![](01-fundamentals-solutions_files/figure-revealjs/exercise-1-1-geom-bar-1.png){width=2000}\n:::\n:::\n\n\n\n## geom_* versus stat_*\n\n\n::: {.cell hash='01-fundamentals-solutions_cache/revealjs/exercise-1-1-stat-count_67c95ea4a4fc2a70714571a1e08b20e8'}\n\n```{.r .cell-code  code-line-numbers=\"2\"}\nggplot(bikes, aes(x = weather_type, fill = year)) + \n  stat_count() # with `geom = \"bar\", position = \"stack\"`\n```\n\n::: {.cell-output-display}\n![](01-fundamentals-solutions_files/figure-revealjs/exercise-1-1-stat-count-1.png){width=2000}\n:::\n:::\n\n\n\n## Remove Legends\n\n\n::: {.cell hash='01-fundamentals-solutions_cache/revealjs/exercise-1-1-legends-default_7e738539fe465e8935fc916d7e4a4388'}\n\n```{.r .cell-code  code-line-numbers=\"1|2|3\"}\nggplot(filter(bikes, year == \"2016\"), aes(x = date, y = count)) +\n  geom_line(aes(color = day_night, linetype = day_night)) +\n  geom_point(aes(fill = day_night), shape = 21)\n```\n\n::: {.cell-output-display}\n![](01-fundamentals-solutions_files/figure-revealjs/exercise-1-1-legends-default-1.png){width=2000}\n:::\n:::\n\n\n\n## Remove Legends: Layer\n\n\n::: {.cell hash='01-fundamentals-solutions_cache/revealjs/exercise-1-1-legends-rm-geom_5d9eaf7ff5d20d4ca8cd0cfecdac1aa9'}\n\n```{.r .cell-code  code-line-numbers=\"2\"}\nggplot(filter(bikes, year == \"2016\"), aes(x = date, y = count)) +\n  geom_line(aes(color = day_night, linetype = day_night), show.legend = FALSE) +\n  geom_point(aes(fill = day_night), shape = 21)\n```\n\n::: {.cell-output-display}\n![](01-fundamentals-solutions_files/figure-revealjs/exercise-1-1-legends-rm-geom-1.png){width=2000}\n:::\n:::\n\n\n\n## Remove Legends: Aesthetic\n\n\n::: {.cell hash='01-fundamentals-solutions_cache/revealjs/exercise-1-1-legends-rm-scale_f573d165eb508555c8f67d8ef66945b2'}\n\n```{.r .cell-code  code-line-numbers=\"4\"}\nggplot(filter(bikes, year == \"2016\"), aes(x = date, y = count)) +\n  geom_line(aes(color = day_night, linetype = day_night)) +\n  geom_point(aes(fill = day_night), shape = 21) +\n  scale_color_discrete(guide = \"none\")\n```\n\n::: {.cell-output-display}\n![](01-fundamentals-solutions_files/figure-revealjs/exercise-1-1-legends-rm-scale-1.png){width=2000}\n:::\n:::\n\n\n\n## Remove Legends: Aesthetic\n\n\n::: {.cell hash='01-fundamentals-solutions_cache/revealjs/exercise-1-1-legends-rm-guide_e61300e577035618af7d74f4683277ce'}\n\n```{.r .cell-code  code-line-numbers=\"4\"}\nggplot(filter(bikes, year == \"2016\"), aes(x = date, y = count)) +\n  geom_line(aes(color = day_night, linetype = day_night)) +\n  geom_point(aes(fill = day_night), shape = 21) +\n  guides(color = \"none\", linetype = guide_none())\n```\n\n::: {.cell-output-display}\n![](01-fundamentals-solutions_files/figure-revealjs/exercise-1-1-legends-rm-guide-1.png){width=2000}\n:::\n:::\n\n\n\n## Remove Legends: All\n\n\n::: {.cell hash='01-fundamentals-solutions_cache/revealjs/exercise-1-1-legends-rm-theme_2e7f774abb296bf5261d20e5456106a6'}\n\n```{.r .cell-code  code-line-numbers=\"4\"}\nggplot(filter(bikes, year == \"2016\"), aes(x = date, y = count)) +\n  geom_line(aes(color = day_night, linetype = day_night)) +\n  geom_point(aes(fill = day_night), shape = 21) +\n  theme(legend.position = \"none\")\n```\n\n::: {.cell-output-display}\n![](01-fundamentals-solutions_files/figure-revealjs/exercise-1-1-legends-rm-theme-1.png){width=2000}\n:::\n:::\n\n\n\n# Exercise 2\n\n## Exercise 2\n\n::: question\n-   **Explore the TfL bike share data visually:**\n    -  Create a *time series* of counts per day and night.\n    -  Draw *box and whisker plots* of average temperatures per month.\n    -  Visualize bike counts per weather type and period as *bar chart*. \n-   **Combine the three plots with patchwork.**\n-   **Export the final graphic in a format of your choice.**\n:::\n\n\n## Time Series\n\n\n::: {.cell hash='01-fundamentals-solutions_cache/revealjs/exercise-1-2-timeseries-1-basic_30802a907ee1518a0fd086d21922dd3e'}\n\n```{.r .cell-code}\nggplot(bikes, aes(x = date, y = count)) +\n  geom_line(aes(color = day_night))\n```\n:::\n\n\n\n## Time Series\n\n\n::: {.cell hash='01-fundamentals-solutions_cache/revealjs/exercise-1-2-timeseries-1-basic_e5c0c3bcd9ef06f82b46709a511cc1b4'}\n::: {.cell-output-display}\n![](01-fundamentals-solutions_files/figure-revealjs/exercise-1-2-timeseries-1-basic-1.png){width=2000}\n:::\n:::\n\n\n\n## Time Series\n\n\n::: {.cell hash='01-fundamentals-solutions_cache/revealjs/exercise-1-2-timeseries-2-polished_689ee837d3a73f2661ec7bed4888c9cf'}\n\n```{.r .cell-code}\ng1 <- \n  ggplot(bikes, aes(x = date, y = count)) +\n  geom_line(aes(color = day_night)) +\n  scale_x_date(date_breaks = \"4 months\", date_labels = \"%m/'%y\") +\n  scale_y_continuous(labels = scales::label_comma()) +\n  scale_color_manual(values = c(day = \"#FFA200\", night = \"#757BC7\")) +\n  labs(x = NULL, y = \"Rented bikes\", color = NULL)\n\ng1\n```\n:::\n\n\n## Time Series\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](01-fundamentals-solutions_files/figure-revealjs/exercise-1-2-timeseries-2-polished-1.png){width=2000}\n:::\n:::\n\n\n\n## Box and Whisker Plots\n\n\n::: {.cell hash='01-fundamentals-solutions_cache/revealjs/exercise-1-2-boxplot-1-basic_fa5370bbccce1945772da76ae34f632d'}\n\n```{.r .cell-code}\nggplot(bikes, aes(x = month, y = temp)) +\n  geom_boxplot()\n```\n:::\n\n\n\n## Box and Whisker Plots\n\n\n::: {.cell hash='01-fundamentals-solutions_cache/revealjs/exercise-1-2-boxplot-1-basic_a8fbf274e831530992b41b66b7e51796'}\n::: {.cell-output-display}\n![](01-fundamentals-solutions_files/figure-revealjs/exercise-1-2-boxplot-1-basic-1.png){width=2000}\n:::\n:::\n\n\n\n## Box and Whisker Plots\n\n\n::: {.cell hash='01-fundamentals-solutions_cache/revealjs/exercise-1-2-boxplot-2-reordered_886c99d8387b89235cef6aac424210e8'}\n\n```{.r .cell-code}\nggplot(bikes, aes(x = forcats::fct_reorder(month, -temp), y = temp)) +\n  geom_boxplot()\n```\n:::\n\n\n\n## Box and Whisker Plots\n\n\n::: {.cell hash='01-fundamentals-solutions_cache/revealjs/exercise-1-2-boxplot-2-reordered_8ef26b5743ca761c11eb5b95ebd4a194'}\n::: {.cell-output-display}\n![](01-fundamentals-solutions_files/figure-revealjs/exercise-1-2-boxplot-2-reordered-1.png){width=2000}\n:::\n:::\n\n\n\n## Box and Whisker Plots\n\n\n::: {.cell hash='01-fundamentals-solutions_cache/revealjs/exercise-1-2-boxplot-3-polished_fe734e53c760ad2be678719650618212'}\n\n```{.r .cell-code}\ng2 <- \n  ggplot(bikes, aes(x = lubridate::month(date, label = TRUE), y = temp)) +\n  geom_boxplot() +\n  scale_y_continuous(labels = scales::label_number(suffix = \"Â°C\")) +\n  labs(x = NULL, y = \"Temperature\")\n\ng2\n```\n:::\n\n\n\n## Box and Whisker Plots\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](01-fundamentals-solutions_files/figure-revealjs/exercise-1-2-boxplot-3-polished-1.png){width=2000}\n:::\n:::\n\n\n\n## Bar Chart\n\n\n::: {.cell hash='01-fundamentals-solutions_cache/revealjs/exercise-1-2-barchart-1-geom_23080eb77a667038dba7055ee1dbbcae'}\n\n```{.r .cell-code}\nggplot(bikes, aes(x = weather_type, y = count, fill = day_night)) + \n  geom_col()\n```\n:::\n\n\n\n## Bar Chart\n\n\n::: {.cell hash='01-fundamentals-solutions_cache/revealjs/exercise-1-2-barchart-1-geom_7dc5b3bbf84f5c7b51b75d454e849349'}\n::: {.cell-output-display}\n![](01-fundamentals-solutions_files/figure-revealjs/exercise-1-2-barchart-1-geom-1.png){width=2000}\n:::\n:::\n\n\n\n## Bar Chart\n\n\n::: {.cell hash='01-fundamentals-solutions_cache/revealjs/exercise-1-2-barchart-2-stat_19d9d1f9a3c1ad23e0c366f6ce40eed2'}\n\n```{.r .cell-code}\nggplot(bikes, aes(x = weather_type, y = count, fill = day_night)) + \n  stat_summary(geom = \"col\")\n```\n:::\n\n\n\n## Bar Chart\n\n\n::: {.cell hash='01-fundamentals-solutions_cache/revealjs/exercise-1-2-barchart-2-stat_1ea20ab230b4b56e8fde04dd41b7b613'}\n::: {.cell-output-display}\n![](01-fundamentals-solutions_files/figure-revealjs/exercise-1-2-barchart-2-stat-1.png){width=2000}\n:::\n:::\n\n\n\n## Bar Chart\n\n\n::: {.cell hash='01-fundamentals-solutions_cache/revealjs/exercise-1-2-barchart-3-stat-fixed_554eaf71f57ceb9b02dc2418a4996382'}\n\n```{.r .cell-code}\nggplot(bikes, aes(x = weather_type, y = count, fill = day_night)) + \n  stat_summary(geom = \"col\", fun = \"sum\", position = \"stack\")\n```\n:::\n\n\n\n## Bar Chart\n\n\n::: {.cell hash='01-fundamentals-solutions_cache/revealjs/exercise-1-2-barchart-3-stat-fixed_16c173bc75dbf923c840751c7d7be542'}\n::: {.cell-output-display}\n![](01-fundamentals-solutions_files/figure-revealjs/exercise-1-2-barchart-3-stat-fixed-1.png){width=2000}\n:::\n:::\n\n\n\n## Bar Chart\n\n\n::: {.cell hash='01-fundamentals-solutions_cache/revealjs/exercise-1-2-barchart-data-pre-proc_1d80a2095668354049efcb21f1885df2'}\n\n```{.r .cell-code}\nbikes |>\n  group_by(weather_type, day_night) |>\n  summarize(count = sum(count)) |>\n  ggplot(aes(x = weather_type, y = count, fill = day_night)) + \n  geom_col()\n```\n:::\n\n\n\n## Bar Chart\n\n\n::: {.cell hash='01-fundamentals-solutions_cache/revealjs/exercise-1-2-barchart-data-pre-proc_66285e019de53ec2c224754416a9111a'}\n::: {.cell-output-display}\n![](01-fundamentals-solutions_files/figure-revealjs/exercise-1-2-barchart-data-pre-proc-1.png){width=2000}\n:::\n:::\n\n\n\n## Bar Chart\n\n\n::: {.cell hash='01-fundamentals-solutions_cache/revealjs/exercise-1-2-barchart-4-dodged_6b0b35adf395b3ae52c4d6c947b0bc78'}\n\n```{.r .cell-code}\nggplot(bikes, aes(x = weather_type, y = count, fill = day_night)) + \n  stat_summary(geom = \"col\", fun = \"sum\", position = \"dodge\")\n```\n:::\n\n\n\n## Bar Chart\n\n\n::: {.cell hash='01-fundamentals-solutions_cache/revealjs/exercise-1-2-barchart-4-dodged_f53b273bcad69c6892dc688065a542a8'}\n::: {.cell-output-display}\n![](01-fundamentals-solutions_files/figure-revealjs/exercise-1-2-barchart-4-dodged-1.png){width=2000}\n:::\n:::\n\n\n\n## Bar Chart\n\n\n::: {.cell hash='01-fundamentals-solutions_cache/revealjs/exercise-1-2-barchart-5-position-1_8c99470236c8efebe1d026e666190977'}\n\n```{.r .cell-code}\nggplot(bikes, aes(x = weather_type, y = count, fill = day_night)) + \n  stat_summary(\n    geom = \"col\", fun = \"sum\", \n    width = .7,\n    position = position_dodge(\n      width = .8, preserve = \"single\"\n    )\n  )\n```\n:::\n\n\n\n## Bar Chart\n\n\n::: {.cell hash='01-fundamentals-solutions_cache/revealjs/exercise-1-2-barchart-5-position-1_46e21eb4a5fbae5c769bb4c7eee540f7'}\n::: {.cell-output-display}\n![](01-fundamentals-solutions_files/figure-revealjs/exercise-1-2-barchart-5-position-1-1.png){width=2000}\n:::\n:::\n\n\n\n## Bar Chart\n\n\n::: {.cell hash='01-fundamentals-solutions_cache/revealjs/exercise-1-2-barchart-6-position-2_d05c7a1f4cb1e252c5b9d8784da167a7'}\n\n```{.r .cell-code}\nggplot(bikes, aes(x = weather_type, y = count, fill = day_night)) + \n  stat_summary(\n    geom = \"col\", fun = \"sum\", \n    width = .7,\n    position = position_dodge2(\n      padding = .2, preserve = \"single\"\n    )\n  )\n```\n:::\n\n\n\n## Bar Chart\n\n\n::: {.cell hash='01-fundamentals-solutions_cache/revealjs/exercise-1-2-barchart-6-position-2_10b594168becbe73576c3dc69175dc38'}\n::: {.cell-output-display}\n![](01-fundamentals-solutions_files/figure-revealjs/exercise-1-2-barchart-6-position-2-1.png){width=2000}\n:::\n:::\n\n\n\n## Bar Chart\n\n\n::: {.cell hash='01-fundamentals-solutions_cache/revealjs/exercise-1-2-barchart-7-polished_dc40fe812436d04f01b272c4aa868ac3'}\n\n```{.r .cell-code}\ng3 <- ggplot(bikes, aes(x = weather_type, y = count, fill = day_night)) + \n  stat_summary(\n    geom = \"col\", fun = \"sum\", \n    width = .7,\n    position = position_dodge2(\n      padding = .2, preserve = \"single\"\n    )\n  ) +\n  scale_y_continuous(labels = scales::label_comma(scale = 1/10^6, suffix = \"M\")) +\n  scale_fill_manual(\n    values = c(day = \"#FFA200\", night = \"#757bc7\")\n  ) +\n  labs(x = NULL, y = \"Rented bikes\", fill = NULL) +\n  theme(\n    panel.grid.major.x = element_blank()\n  )\n\ng3\n```\n:::\n\n\n\n## Bar Chart\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](01-fundamentals-solutions_files/figure-revealjs/exercise-1-2-barchart-7-polished-1.png){width=2000}\n:::\n:::\n\n\n\n## Combine Plots\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(patchwork)\ng2 + (g1 / g3) + plot_layout(guides = \"collect\", widths = c(.7, 1))\n```\n\n::: {.cell-output-display}\n![](01-fundamentals-solutions_files/figure-revealjs/exercise-1-2-combined-graphic-a-1.png){width=3000}\n:::\n:::\n\n\n\n## Combine Plots\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(patchwork)\n(g2 + g1) / g3 + plot_layout(guides = \"collect\")\n```\n\n::: {.cell-output-display}\n![](01-fundamentals-solutions_files/figure-revealjs/exercise-1-2-combined-graphic-b-1.png){width=3000}\n:::\n:::\n\n\n\n## Combine Plots\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(patchwork)\n(g2 + g1 + plot_layout(widths = c(.7, 1))) / g3 + plot_layout(guides = \"collect\")\n```\n\n::: {.cell-output-display}\n![](01-fundamentals-solutions_files/figure-revealjs/exercise-1-2-combined-graphic-c-1.png){width=3000}\n:::\n:::\n\n\n\n## Save Multipanel Plot\n\n\n::: {.cell hash='01-fundamentals-solutions_cache/revealjs/exercise-1-2-export-graphic-subdir_9785b149b0fd884a7f61282d9fd8679d'}\n\n:::\n\n::: {.cell hash='01-fundamentals-solutions_cache/revealjs/exercise-1-2-export-graphic_f311b57d402b0037b0d209e5fd322c7a'}\n\n```{.r .cell-code}\nggsave(\"bikes-panel.png\", width = 14, height = 9, dpi = 600, bg = \"white\")\n```\n:::\n\n\n\n--------------------------------------------------------------------------------\n\n![The final PNG graphic.](bikes-panel.png)\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}