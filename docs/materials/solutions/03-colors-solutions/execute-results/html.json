{
  "hash": "0881d91f775fb14d576ae7ba6015ca30",
  "result": {
    "markdown": "---\ntitle: \"Engaging and Beautiful Data Visualizations with ggplot2\"\nsubtitle: \"<span style='font-size:1.8em;'>Working with Colors</span><br><span style='font-weight:400;font-size:1.3em;'>— Exercise Solutions —</span>\"\nauthor: \"<a href='https://www.cedricscherer.com' style='color:#28a87d;font-weight:600;'>Cédric Scherer</a>&ensp;//&ensp;posit::conf&ensp;//&ensp;September 2023</span></span>\"\nformat:\n  revealjs:\n    theme: slides.scss\n    footer: '[Cédric Scherer](https://cedricscherer.com) // posit::conf(2023)'\n    transition: fade\n    progress: true\n    multiplex: false\n    preview-links: true\n    scrollable: false\n    hide-inactive-cursor: true\n    highlight-style: printing\n    chalkboard:\n      theme: whiteboard\n      boardmarker-width: 4\n      buttons: true\n    pause: true\n    mainfont: Cabinet Grotesk\neditor: source\nknitr:\n  opts_chunk:\n    dev: \"ragg_png\"\n    retina: 3\n    dpi: 200\nexecute:\n  freeze: auto\n  cache: true\n  echo: true\n  fig-width: 7.5\n  fig-height: 4.7\n  fig-align: center\n---\n\n\n# Exercise 1\n\n\n## Exercise 1\n\n::: question\n-   **Add colors to our bar chart from the last exercise:**\n   -   Encode the bars and direct labels by color for \"fair weather\" (clear, scattered clouds, broken clouds) and \"grey weather\" (rain, cloudy, snow)\n   -   Use the same colors to encode the respective text bits in the title (\"Fair weather preferred\") and subtitle (\"rainy, cloudy, or snowy days\").\n:::\n\n\n## Preparation\n\n\n::: {.cell hash='03-colors-solutions_cache/revealjs/preparation_522bc8d0a5bcd5c4f1c61d7c34f12b8a'}\n\n```{.r .cell-code}\nlibrary(readr)\nlibrary(dplyr)\nlibrary(ggplot2)\n\n## data\nbikes <-\n  read_csv(\n    here::here(\"data\", \"london-bikes.csv\"),\n    col_types = \"Dcfffilllddddc\"\n  )\n```\n:::\n\n\n\n## Previous Bar Chart\n\n\n::: {.cell hash='03-colors-solutions_cache/revealjs/exercise-3-1-bars-0_36324f6bd3a1c4a2bafe5a2e618019d3'}\n\n```{.r .cell-code}\nbikes |> \n  filter(year == \"2015\") |> \n  mutate(weather_type = forcats::fct_reorder(weather_type, count, .fun = sum)) |> \n  ggplot(aes(x = count, y = weather_type)) +\n  stat_summary(\n    geom = \"bar\", fun = sum, \n    color = \"grey20\", fill = \"beige\", width = .7\n  ) +\n  stat_summary(\n    geom = \"text\", fun = sum,\n    aes(\n      label = after_stat(paste0(\"  \", sprintf(\"%2.2f\", x / 10^6), \"M  \")),\n      hjust = after_stat(x) > .5*10^6\n    ),\n    family = \"Asap SemiCondensed\"\n  ) +\n  scale_x_continuous(\n    expand = c(0, 0), name = \"**Reported bike shares**, in millions\", \n    breaks = 0:4*10^6, labels = c(\"0\", paste0(1:4, \"M\"))\n  ) +\n  scale_y_discrete(labels = stringr::str_to_sentence, name = NULL) +\n  coord_cartesian(clip = \"off\") +\n  labs(\n    title = \"Fair weather preferred—even in London\",\n    subtitle = \"Less than 10% of TfL bikes shares have been reported on rainy, cloudy, or snowy days in 2015.\",\n    caption = \"**Data:** Transport for London / freemeteo.com\"\n  ) +\n  theme_minimal(base_size = 14, base_family = \"Asap SemiCondensed\") +\n  theme(\n    panel.grid.major.y = element_blank(),\n    panel.grid.minor = element_blank(),\n    axis.title.x = ggtext::element_markdown(hjust = 0, face = \"italic\"),\n    axis.text.y = element_text(color = \"black\", size = rel(1.2)),\n    plot.title = element_text(face = \"bold\"),\n    plot.subtitle = element_text(margin = margin(b = 20)),\n    plot.title.position = \"plot\",\n    plot.caption = ggtext::element_markdown(color = \"grey40\")\n  )\n```\n:::\n\n\n--------------------------------------------------------------------------------\n\n\n::: {.cell hash='03-colors-solutions_cache/revealjs/exercise-3-1-bars-0_811085a25a94d514d87be33d3ada1e27'}\n::: {.cell-output-display}\n![](03-colors-solutions_files/figure-revealjs/exercise-3-1-bars-0-1.png){width=1500}\n:::\n:::\n\n\n\n## Adjust Geom Colors\n\n\n::: {.cell hash='03-colors-solutions_cache/revealjs/exercise-3-1-bars-1-adjust-geoms_5b485077b4689d8717a7f3e4e7667dbf'}\n\n```{.r .cell-code  code-line-numbers=\"7,8|15|25\"}\nbikes |> \n  filter(year == \"2015\") |> \n  mutate(weather_type = forcats::fct_reorder(weather_type, count, .fun = sum)) |> \n  ggplot(aes(x = count, y = weather_type)) +\n  stat_summary(\n    fun = sum, geom = \"bar\", na.rm = TRUE,\n    aes(color = weather_type %in% c(\"rain\", \"cloudy\", \"snowfall\"),\n        fill = after_scale(prismatic::clr_lighten(color, .9))),\n    width = .7\n  ) +\n  stat_summary(\n    fun = sum, geom = \"text\", \n    aes(\n      label = after_stat(paste0(\"  \", sprintf(\"%2.2f\", x / 10^6), \"M  \")),\n      color = weather_type %in% c(\"rain\", \"cloudy\", \"snowfall\"),\n      hjust = after_stat(x) > .5*10^6\n    ),\n    family = \"Asap SemiCondensed\"\n  ) +\n  scale_x_continuous(\n    expand = c(0, 0), name = \"**Reported bike shares**, in millions\", \n    breaks = 0:4*10^6, labels = c(\"0\", paste0(1:4, \"M\"))\n  ) +\n  scale_y_discrete(labels = stringr::str_to_sentence, name = NULL) +\n  scale_color_manual(values = c(\"#E2A30A\", \"#007CB1\"), guide = \"none\") +\n  coord_cartesian(clip = \"off\") +\n  labs(\n    title = \"Fair weather preferred—even in London\",\n    subtitle = \"Less than 10% of TfL bikes shares have been reported on rainy, cloudy, or snowy days in 2015.\",\n    caption = \"**Data:** Transport for London / freemeteo.com\"\n  ) +\n  theme_minimal(base_size = 14, base_family = \"Asap SemiCondensed\") +\n  theme(\n    panel.grid.major.y = element_blank(),\n    panel.grid.minor = element_blank(),\n    axis.title.x = ggtext::element_markdown(hjust = 0, face = \"italic\"),\n    axis.text.y = element_text(color = \"black\", size = rel(1.2)),\n    plot.title = element_text(face = \"bold\"),\n    plot.subtitle = element_text(margin = margin(b = 20)),\n    plot.title.position = \"plot\",\n    plot.caption = ggtext::element_markdown(color = \"grey40\")\n  )\n```\n:::\n\n\n--------------------------------------------------------------------------------\n\n\n::: {.cell hash='03-colors-solutions_cache/revealjs/exercise-3-1-bars-1-adjust-geoms_48fdb69251f6946a1f95445506cb5798'}\n::: {.cell-output-display}\n![](03-colors-solutions_files/figure-revealjs/exercise-3-1-bars-1-adjust-geoms-1.png){width=1500}\n:::\n:::\n\n\n\n## Adjust Titles\n\n\n::: {.cell hash='03-colors-solutions_cache/revealjs/exercise-3-1-bars-2-adjust-titles_1ea655321eb23573be32eb925446246d'}\n\n```{.r .cell-code}\nbikes |> \n  filter(!is.na(weather_type), year == \"2015\") |> \n  mutate(weather_type = forcats::fct_reorder(weather_type, count, .fun = sum)) |> \n  ggplot(aes(x = count, y = weather_type)) +\n  stat_summary(\n    fun = sum, geom = \"bar\", na.rm = TRUE,\n    aes(color = weather_type %in% c(\"rain\", \"cloudy\", \"snowfall\"),\n        fill = after_scale(prismatic::clr_lighten(color, .9))),\n    width = .7\n  ) +\n  stat_summary(\n    fun = sum, geom = \"text\", \n    aes(\n      label = after_stat(paste0(\"  \", sprintf(\"%2.2f\", x / 10^6), \"M  \")),\n      color = weather_type %in% c(\"rain\", \"cloudy\", \"snowfall\"),\n      hjust = after_stat(x) > .5*10^6\n    ),\n    family = \"Asap SemiCondensed\"\n  ) +\n  scale_x_continuous(\n    expand = c(0, 0), name = \"**Reported bike shares**, in millions\", \n    breaks = 0:4*10^6, labels = c(\"0\", paste0(1:4, \"M\"))\n  ) +\n  scale_y_discrete(labels = stringr::str_to_sentence, name = NULL) +\n  scale_color_manual(values = c(\"#E2A30A\", \"#007CB1\"), guide = \"none\") +\n  coord_cartesian(clip = \"off\") +\n  labs(\n    title = \"<span style='color:#E2A30A;'>Fair weather preferred</span>—even in London\",\n    subtitle = \"Less than 10% of TfL bikes shares have been reported on <span style='color:#007CB1;'>rainy, cloudy, or snowy days</span> in 2015.\",\n    caption = \"**Data:** Transport for London / freemeteo.com\"\n  ) +\n  theme_minimal(base_size = 14, base_family = \"Asap SemiCondensed\") +\n  theme(\n    panel.grid.major.y = element_blank(),\n    panel.grid.minor = element_blank(),\n    axis.title.x = ggtext::element_markdown(hjust = 0, face = \"italic\"),\n    axis.text.y = element_text(color = \"black\", size = rel(1.2)),\n    plot.title = ggtext::element_markdown(face = \"bold\"),\n    plot.subtitle = ggtext::element_markdown(margin = margin(b = 20)),\n    plot.title.position = \"plot\",\n    plot.caption = ggtext::element_markdown(color = \"grey40\")\n  )\n```\n:::\n\n\n--------------------------------------------------------------------------------\n\n\n::: {.cell hash='03-colors-solutions_cache/revealjs/exercise-3-1-bars-2-adjust-titles_8357d3fff9a8a2445b466c9f8b962a4e'}\n::: {.cell-output-display}\n![](03-colors-solutions_files/figure-revealjs/exercise-3-1-bars-2-adjust-titles-1.png){width=1500}\n:::\n:::\n\n\n\n\n# Exercise 2\n\n\n## Exercise 2\n\n::: question\n-   **Create a plot of your choice with a sequential (non-default) color palette.**\n    -   Inspect the HCL spectrum. Adjust the palette if needed.\n    -   Test the palette with regard to colorblindness. Adjust the palette if needed.\n    -   Save and share the graphic.\n:::\n\n\n## Heatmap\n\n\n::: {.cell hash='03-colors-solutions_cache/revealjs/exercise-3-2-heatmap-0-basic_8ab621ef545ea8c030c0c50b51513347'}\n\n```{.r .cell-code  code-line-numbers=\"1,2,3,4|2|3|4|5|6|7|8\"}\nggplot(filter(bikes, year == \"2016\"), \n       aes(x = lubridate::wday(date, label = TRUE), \n           y = forcats::fct_rev(lubridate::month(date, label = TRUE)),\n           z = count)) +\n  stat_summary_2d(geom = \"tile\", fun = mean) +\n  facet_wrap(~ day_night) \n```\n:::\n\n\n--------------------------------------------------------------------------------\n\n\n::: {.cell hash='03-colors-solutions_cache/revealjs/exercise-3-2-heatmap-0-basic_6846a436e295351223c2ffa81fed4bec'}\n::: {.cell-output-display}\n![](03-colors-solutions_files/figure-revealjs/exercise-3-2-heatmap-0-basic-1.png){width=1500}\n:::\n:::\n\n\n\n## Heatmap\n\n\n::: {.cell hash='03-colors-solutions_cache/revealjs/exercise-3-2-heatmap-1-polished_87618be1003869b0c6b65d1c66618a8c'}\n\n```{.r .cell-code  code-line-numbers=\"7|8|9|10|11|12,13,14,15,16,17,18,19,20,21\"}\np <- \n  ggplot(filter(bikes, year == \"2016\"), \n         aes(x = lubridate::wday(date, label = TRUE), \n             y = forcats::fct_rev(lubridate::month(date, label = TRUE)),\n             z = count)) +\n  stat_summary_2d(geom = \"tile\", fun = mean, color = \"white\", linewidth = .7) +\n  facet_wrap(~ day_night, labeller = labeller(day_night = stringr::str_to_title)) +\n  coord_cartesian(expand = FALSE, clip = \"off\") +\n  labs(x = NULL, y = NULL, fill = \"Average TfL bike shares:\") +\n  guides(fill = guide_colorbar(title.position = \"top\", title.hjust = .5)) +\n  theme_minimal(base_size = 15, base_family = \"Spline Sans\") +\n  theme(\n    axis.text.y = element_text(hjust = 0),\n    strip.text = element_text(face = \"bold\", hjust = 0, size = rel(1.1)),\n    panel.spacing = unit(1.7, \"lines\"),\n    legend.position = \"bottom\",\n    legend.key.width = unit(6, \"lines\"),\n    legend.key.height = unit(.6, \"lines\"),\n    legend.title = element_text(size = rel(.9)),\n    legend.box.margin = margin(t = -10)\n  )\n\np\n```\n:::\n\n\n--------------------------------------------------------------------------------\n\n\n::: {.cell hash='03-colors-solutions_cache/revealjs/exercise-3-2-heatmap-1-polished_31a28b2bd01e263679926434153350bd'}\n::: {.cell-output-display}\n![](03-colors-solutions_files/figure-revealjs/exercise-3-2-heatmap-1-polished-1.png){width=1500}\n:::\n:::\n\n\n\n## Heatmap\n\n\n::: {.cell hash='03-colors-solutions_cache/revealjs/exercise-3-2-heatmap-2-colors_50c93d9da1435487ae04daa1c2db1ad1'}\n\n```{.r .cell-code  code-line-numbers=\"2,6|3|4,5|1\"}\np <- p +\n  rcartocolor::scale_fill_carto_c(\n    palette = \"BluYl\",\n    breaks = 0:7*5000,\n    labels = scales::label_comma()\n  )\n\np\n```\n:::\n\n\n--------------------------------------------------------------------------------\n\n\n::: {.cell hash='03-colors-solutions_cache/revealjs/exercise-3-2-heatmap-2-colors_7550abfe259d771315bbe0864c3c2026'}\n::: {.cell-output-display}\n![](03-colors-solutions_files/figure-revealjs/exercise-3-2-heatmap-2-colors-1.png){width=1500}\n:::\n:::\n\n\n\n## Emulate CVD\n\n\n::: {.cell layout-align=\"center\" hash='03-colors-solutions_cache/revealjs/exercise-3-2-heatmap-3-cvd_9a90c7c036704021a446f7d1d04890a4'}\n\n```{.r .cell-code}\ncolorblindr::cvd_grid(p)\n```\n\n::: {.cell-output-display}\n![](03-colors-solutions_files/figure-revealjs/exercise-3-2-heatmap-3-cvd-1.png){fig-align='center' width=3600}\n:::\n:::\n\n\n\n## Evaluate HCL Spectrum\n\n\n::: {.cell layout-align=\"center\" hash='03-colors-solutions_cache/revealjs/exercise-3-2-heatmap-3-hcl_1c868f33eb07701e9ddd2c7000c70b5e'}\n\n```{.r .cell-code}\ncolorspace::specplot(\n  rcartocolor::carto_pal(\n    n = 100, name = \"BluYl\"\n  )\n)\n```\n\n::: {.cell-output-display}\n![](03-colors-solutions_files/figure-revealjs/exercise-3-2-heatmap-3-hcl-1.png){fig-align='center' width=1400}\n:::\n:::\n\n\n\n## Export Graphic\n\n\n::: {.cell hash='03-colors-solutions_cache/revealjs/exercise-3-2-heatmap-4-export-graphic-subdir_fea281f440aa53d2f1f112d82d5968fb'}\n\n:::\n\n::: {.cell hash='03-colors-solutions_cache/revealjs/exercise-3-2-heatmap-4-export-graphic_fc8c35e917921edb174465599c767c22'}\n\n```{.r .cell-code}\nggsave(\"bikes-heatmap.png\", width = 7.5, height = 4.7, dpi = 600, bg = \"white\")\n```\n:::\n\n\n![The final PNG graphic.](bikes-heatmap.png)\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}