[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "",
    "text": "A posit::conf(2023) Workshop by C√©dric Scherer\nüìÜ ‚ÄÇSeptember 18, 2023\n‚è∞ ‚ÄÇ09:00‚Äì17:00 CDT\nüè® ‚ÄÇGrand Hall K"
  },
  {
    "objectID": "index.html#is-this-course-for-me",
    "href": "index.html#is-this-course-for-me",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Is this course for me?",
    "text": "Is this course for me?\nThis course will be appropriate for you if you:\n\nalready know how to create basic graphics with the ggplot2 package,\naim to improve the design of your ggplot outputs, and\nwant to learn how to create more complex charts that feature multiple layers, annotations, text styling, custom themes, and more."
  },
  {
    "objectID": "license.html",
    "href": "license.html",
    "title": "License",
    "section": "",
    "text": "This work is licensed under a Creative Commons Attribution 4.0 International License."
  },
  {
    "objectID": "materials/00-welcome.html#cedric-ggplot-tutorial-overview",
    "href": "materials/00-welcome.html#cedric-ggplot-tutorial-overview",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "",
    "text": "cedricscherer.com/2019/08/05/a-ggplot2-tutorial-for-beautiful-plotting-in-r"
  },
  {
    "objectID": "materials/00-welcome.html#cedric-ggplot-evol-gif",
    "href": "materials/00-welcome.html#cedric-ggplot-evol-gif",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "",
    "text": "cedricscherer.com/2019/05/17/the-evolution-of-a-ggplot"
  },
  {
    "objectID": "materials/00-welcome.html#conversation-starters",
    "href": "materials/00-welcome.html#conversation-starters",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Conversation Starters",
    "text": "Conversation Starters\n\nWhat‚Äôs your name?\nWhere do you feel home?\nWhen did you use R for the first time?\nWhat‚Äôs your favorite animal / plant / color / typeface?\nWhere did you spend your summer?\nWhom would you like to meet during the posit::conf?\nWhich R package are you looking forward to try?\nWhat are things you want to learn about ggplot2?"
  },
  {
    "objectID": "materials/00-welcome.html#update-announcements",
    "href": "materials/00-welcome.html#update-announcements",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "UPDATE Announcements",
    "text": "UPDATE Announcements\n\nWiFi\n\nUsername: TBA\nPassword: TBA\n\nCourse Materials\n\nWebpage: posit-conf-2023.github.io/dataviz-ggplot2\nPosit Cloud: posit.cloud/spaces/397253"
  },
  {
    "objectID": "materials/00-welcome.html#course-webpage",
    "href": "materials/00-welcome.html#course-webpage",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "",
    "text": "posit-conf-2023.github.io/dataviz-ggplot2"
  },
  {
    "objectID": "materials/00-welcome.html#posit-cloud",
    "href": "materials/00-welcome.html#posit-cloud",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "",
    "text": "posit.cloud/spaces/397253"
  },
  {
    "objectID": "materials/00-welcome.html#update-announcements-1",
    "href": "materials/00-welcome.html#update-announcements-1",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "UPDATE Announcements",
    "text": "UPDATE Announcements"
  },
  {
    "objectID": "materials/00-welcome.html#communication-strategy",
    "href": "materials/00-welcome.html#communication-strategy",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Communication Strategy",
    "text": "Communication Strategy\n\n\n\nGreen sticky note ‚Äî I am done with the exercise\nPink sticky note ‚Äî I need help or support\nYou can ask questions / comment at any time during the course.\nPlease avoid questions during the breaks to give us a chance to recover.\nWe will be using Discord as our main digital communication method.\nTeam up with your neighbors for exercises ‚Äî and lunch!\nWe will collect feedback twice during the day (more later)."
  },
  {
    "objectID": "materials/00-welcome.html#required-packages",
    "href": "materials/00-welcome.html#required-packages",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Required Packages",
    "text": "Required Packages\n\ninstall.packages(\"ggplot2\")\ninstall.packages(\"dplyr\")\ninstall.packages(\"readr\")\ninstall.packages(\"forcats\")\ninstall.packages(\"stringr\")\ninstall.packages(\"lubridate\")\ninstall.packages(\"purrr\")\n\n\n\ninstall.packages(\"here\")\ninstall.packages(\"scales\")\ninstall.packages(\"ragg\")\ninstall.packages(\"systemfonts\")\ninstall.packages(\"rcartocolor\")\ninstall.packages(\"scico\")\ninstall.packages(\"prismatic\")\ninstall.packages(\"patchwork\")\ninstall.packages(\"ggtext\")\ninstall.packages(\"ggforce\")\ninstall.packages(\"ggrepel\")\ninstall.packages(\"colorspace\")\ninstall.packages(\"gapminder\")\nremotes::install_github(\"clauswilke/colorblindr\")"
  },
  {
    "objectID": "materials/00-welcome.html#optional-packages",
    "href": "materials/00-welcome.html#optional-packages",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Optional Packages",
    "text": "Optional Packages\n\ninstall.packages(\"camcorder\")\ninstall.packages(\"viridis\")\ninstall.packages(\"RColorBrewer\")\ninstall.packages(\"MetBrewer\")\ninstall.packages(\"ggthemes\")\ninstall.packages(\"ggsci\")\ninstall.packages(\"hrbrthemes\")\ninstall.packages(\"tvthemes\")\ninstall.packages(\"ggannotate\")\nremotes::install_github(\"AllanCameron/geomtextpath\")"
  },
  {
    "objectID": "materials/00-welcome.html#required-typefaces",
    "href": "materials/00-welcome.html#required-typefaces",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Required Typefaces",
    "text": "Required Typefaces\nDownload and install the following typefaces:\n\nAsap: fonts.google.com/specimen/Asap\nSpline Sans: fonts.google.com/specimen/Spline+Sans\nSpline Sans Mono: fonts.google.com/specimen/Spline+Sans+Mono\nHepta Slab: fonts.google.com/specimen/Hepta+Slab\n\n\nAll files are also available viacedricscherer.com/files/positconf-dataviz-ggplot2-fonts.zip\n\n\n‚Üí Install the font files.\n\n\n‚Üí Restart Rstudio."
  },
  {
    "objectID": "materials/01-fundamentals.html#section",
    "href": "materials/01-fundamentals.html#section",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "",
    "text": "{ggplot2} package description\n\n\n\n{ggplot2} is a system for declaratively creating graphics,based on ‚ÄúThe Grammar of Graphics‚Äù (Wilkinson 2005).\n\nYou provide the data, tell {ggplot2} how to map variables to aesthetics,what graphical primitives to use, and it takes care of the details."
  },
  {
    "objectID": "materials/01-fundamentals.html#advantages-of-ggplot2",
    "href": "materials/01-fundamentals.html#advantages-of-ggplot2",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Advantages of {ggplot2}",
    "text": "Advantages of {ggplot2}\n\n\nconsistent underlying ‚Äúgrammar of graphics‚Äù (Wilkinson 2005)\n\nvery flexible, layered plot specification\n\ntheme system for polishing plot appearance\n\nlots of additional functionality thanks to extensions\n\nactive and helpful community"
  },
  {
    "objectID": "materials/01-fundamentals.html#the-components-of-a-ggplot",
    "href": "materials/01-fundamentals.html#the-components-of-a-ggplot",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "The Components of a ggplot",
    "text": "The Components of a ggplot\n\n\n\n\n\nComponent\n\n\nFunction\n\n\nExplanation\n\n\n\n\nData\n\n\nggplot(data)¬†¬†¬†¬†¬†¬†¬†¬†¬†\n\n\nThe raw data that you want to visualize.\n\n\n\n\nAesthetics¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†\n\n\naes()\n\n\nThe mapping between variables and visual properties\n\n\n\nGeometries\n\n\ngeom_*()\n\n\nThe geometric shapes representing the data."
  },
  {
    "objectID": "materials/01-fundamentals.html#the-components-of-a-ggplot-1",
    "href": "materials/01-fundamentals.html#the-components-of-a-ggplot-1",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "The Components of a ggplot",
    "text": "The Components of a ggplot\n\n\n\n\n\nComponent\n\n\nFunction\n\n\nExplanation\n\n\n\n\nData\n\n\nggplot(data)¬†¬†¬†¬†¬†¬†¬†¬†¬†\n\n\nThe raw data that you want to visualize.\n\n\n\n\nAesthetics¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†\n\n\naes()\n\n\nThe mapping between variables and visual properties.\n\n\n\nGeometries\n\n\ngeom_*()\n\n\nThe geometric shapes representing the data.\n\n\n\n\nStatistics\n\n\nstat_*()\n\n\nThe statistical transformations applied to the data.\n\n\n\n\nScales\n\n\nscale_*()\n\n\nThe representation of mapped aesthetic attributes.\n\n\n\n\nCoordinate System\n\n\ncoord_*()\n\n\nThe transformation to map data coordinates into the plot plane.\n\n\n\n\nFacets\n\n\nfacet_*()\n\n\nThe arrangement of the data into a grid of small multiples.\n\n\n\n\nVisual Themes\n\n\ntheme() | theme_*()\n\n\nThe overall visual defaults of non-data elements of the graphic."
  },
  {
    "objectID": "materials/01-fundamentals.html#the-data-set",
    "href": "materials/01-fundamentals.html#the-data-set",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "The Data Set",
    "text": "The Data Set\nBike sharing counts in London, UK, powered by TfL Open Data\n\n\ncovers the years 2015 and 2016\nincl.¬†weather data acquired from freemeteo.com\nprepared by Hristo Mavrodiev for Kaggle\nfurther modification by myself"
  },
  {
    "objectID": "materials/01-fundamentals.html#the-data-set-1",
    "href": "materials/01-fundamentals.html#the-data-set-1",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "The Data Set",
    "text": "The Data Set\n\nlibrary(readr)\nlibrary(ggplot2)\n\nbikes <-\n  read_csv(\n    here::here(\"data\", \"london-bikes.csv\"),\n    col_types = \"Dcfffilllddddc\"\n  )"
  },
  {
    "objectID": "materials/01-fundamentals.html#the-data-set-2",
    "href": "materials/01-fundamentals.html#the-data-set-2",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "The Data Set",
    "text": "The Data Set\n\nbikes\n\n# A tibble: 1,454 √ó 14\n   date       day_night year  month season count is_workday is_weekend is_holiday  temp temp_feel humidity wind_speed weather_type    \n   <date>     <chr>     <fct> <fct> <fct>  <int> <lgl>      <lgl>      <lgl>      <dbl>     <dbl>    <dbl>      <dbl> <chr>           \n 1 2015-01-04 day       2015  1     3       6830 FALSE      TRUE       FALSE       2.17     -0.75     95.2      10.4  broken clouds   \n 2 2015-01-04 night     2015  1     3       2404 FALSE      TRUE       FALSE       2.79      2.04     93.4       4.58 clear           \n 3 2015-01-05 day       2015  1     3      14763 TRUE       FALSE      FALSE       8.96      7.71     81.1       8.67 broken clouds   \n 4 2015-01-05 night     2015  1     3       5609 TRUE       FALSE      FALSE       7.12      5.71     79.5       9.04 cloudy          \n 5 2015-01-06 day       2015  1     3      14501 TRUE       FALSE      FALSE       9         6.46     80.2      19.2  broken clouds   \n 6 2015-01-06 night     2015  1     3       6112 TRUE       FALSE      FALSE       6.71      4.21     77.6      12.8  clear           \n 7 2015-01-07 day       2015  1     3      16358 TRUE       FALSE      FALSE       8.17      5.08     75.2      21.2  scattered clouds\n 8 2015-01-07 night     2015  1     3       4706 TRUE       FALSE      FALSE       6.68      3.86     81.3      18.1  clear           \n 9 2015-01-08 day       2015  1     3       9971 TRUE       FALSE      FALSE       9.46      7.12     79.4      18.8  scattered clouds\n10 2015-01-08 night     2015  1     3       5630 TRUE       FALSE      FALSE      10.0       8.46     79.2      22.2  clear           \n# ‚Ñπ 1,444 more rows"
  },
  {
    "objectID": "materials/01-fundamentals.html#the-data-set-3",
    "href": "materials/01-fundamentals.html#the-data-set-3",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "The Data Set",
    "text": "The Data Set\n\n\n\n\n\nVariable\nDescription\nClass\n\n\n\n\ndate\nDate encoded as `YYYY-MM-DD`\ndate\n\n\nday_night\n`day` (6:00am‚Äì5:59pm) or `night` (6:00pm‚Äì5:59am)\ncharacter\n\n\nyear\n`2015` or `2016`\nfactor\n\n\nmonth\n`1` (January) to `12` (December)\nfactor\n\n\nseason\n`0` (spring), `1` (summer), `2` (autumn), or `3` (winter)\nfactor\n\n\ncount\nSum of reported bikes rented\ninteger\n\n\nis_workday\n`TRUE` being Monday to Friday and no bank holiday\nlogical\n\n\nis_weekend\n`TRUE` being Saturday or Sunday\nlogical\n\n\nis_holiday\n`TRUE` being a bank holiday in the UK\nlogical\n\n\ntemp\nAverage air temperature (¬∞C)\ndouble\n\n\ntemp_feel\nAverage feels like temperature (¬∞C)\ndouble\n\n\nhumidity\nAverage air humidity (%)\ndouble\n\n\nwind_speed\nAverage wind speed (km/h)\ndouble\n\n\nweather_type\nMost common weather type\ncharacter"
  },
  {
    "objectID": "materials/01-fundamentals.html#a-default-ggplot",
    "href": "materials/01-fundamentals.html#a-default-ggplot",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "A Default ggplot",
    "text": "A Default ggplot\n\n# scatter plot of plot bikes$count versus bikes$temp_feel\nggplot(data = bikes) +              # initial call + data\n  aes(x = temp_feel, y = count) +   # aesthetics\n  geom_point()                      # geometric layer"
  },
  {
    "objectID": "materials/01-fundamentals.html#a-default-ggplot-1",
    "href": "materials/01-fundamentals.html#a-default-ggplot-1",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "A Default ggplot",
    "text": "A Default ggplot\n\n# scatter plot of plot bikes$count versus bikes$temp_feel\nggplot(bikes, aes(x = temp_feel, y = count)) +\n  geom_point()"
  },
  {
    "objectID": "materials/01-fundamentals.html#combine-layers",
    "href": "materials/01-fundamentals.html#combine-layers",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Combine Layers",
    "text": "Combine Layers\n\nggplot(bikes, aes(x = temp_feel, y = count)) +\n  geom_point() + \n  # add a GAM smoothing\n  stat_smooth() # also: geom_smooth()"
  },
  {
    "objectID": "materials/01-fundamentals.html#mapping-aesthetics",
    "href": "materials/01-fundamentals.html#mapping-aesthetics",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Mapping Aesthetics",
    "text": "Mapping Aesthetics\n\nggplot(bikes, aes(x = temp_feel, y = count, color = day_night)) + \n  geom_point() + \n  stat_smooth()"
  },
  {
    "objectID": "materials/01-fundamentals.html#mapping-aesthetics-1",
    "href": "materials/01-fundamentals.html#mapping-aesthetics-1",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Mapping Aesthetics",
    "text": "Mapping Aesthetics\n\nggplot(bikes, aes(x = temp_feel, y = count)) + \n  # color mapping only applied to points\n  geom_point(aes(color = day_night)) + \n  # invisible grouping to create two trend lines\n  stat_smooth(aes(group = day_night))"
  },
  {
    "objectID": "materials/01-fundamentals.html#setting-properties",
    "href": "materials/01-fundamentals.html#setting-properties",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Setting Properties",
    "text": "Setting Properties\n\nggplot(bikes, aes(x = temp_feel, y = count)) + \n  geom_point(\n    aes(color = day_night), \n    # setting larger points with 50% opacity\n    alpha = .5, size = 1.5\n  ) + \n  stat_smooth(\n    aes(group = day_night), \n    # use linear fitting + draw black smoothing lines\n    method = \"lm\", color = \"black\"\n  )"
  },
  {
    "objectID": "materials/01-fundamentals.html#split-into-facets",
    "href": "materials/01-fundamentals.html#split-into-facets",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Split into Facets",
    "text": "Split into Facets\n\nggplot(bikes, aes(x = temp_feel, y = count)) + \n  geom_point(\n    aes(color = day_night), \n    alpha = .5, size = 1.5\n  ) + \n  stat_smooth(\n    method = \"lm\", color = \"black\"\n  ) +\n  # small multiples\n  facet_wrap(facets = vars(day_night)) # also: ~ day_night"
  },
  {
    "objectID": "materials/01-fundamentals.html#split-into-facets-1",
    "href": "materials/01-fundamentals.html#split-into-facets-1",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Split into Facets",
    "text": "Split into Facets\n\nggplot(bikes, aes(x = temp_feel, y = count)) + \n  geom_point(\n    aes(color = season), \n    alpha = .5, size = 1.5\n  ) + \n  stat_smooth(\n    method = \"lm\", color = \"black\"\n  ) +\n  # small multiples\n  facet_grid(\n    rows = vars(day_night), cols = vars(year) # also: day_night ~ year\n  )"
  },
  {
    "objectID": "materials/01-fundamentals.html#free-facets-axes",
    "href": "materials/01-fundamentals.html#free-facets-axes",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Free Facets Axes",
    "text": "Free Facets Axes\n\nggplot(bikes, aes(x = temp_feel, y = count)) + \n  geom_point(\n    aes(color = season), \n    alpha = .5, size = 1.5\n  ) + \n  stat_smooth(\n    method = \"lm\", color = \"black\"\n  ) +\n  facet_grid(\n    day_night ~ year, \n    # free y axis range\n    scales = \"free_y\", \n    # scale heights proportionally\n    space = \"free_y\"\n  )"
  },
  {
    "objectID": "materials/01-fundamentals.html#store-ggplot",
    "href": "materials/01-fundamentals.html#store-ggplot",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Store ggplot",
    "text": "Store ggplot\n\ng1 <- \n  ggplot(bikes, aes(x = temp_feel, y = count)) + \n  geom_point(\n    aes(color = season), \n    alpha = .5, size = 1.5\n  ) + \n  stat_smooth(\n    method = \"lm\", color = \"black\"\n  ) +\n  facet_grid(\n    day_night ~ year, \n    scales = \"free_y\", \n    space = \"free_y\"\n  )"
  },
  {
    "objectID": "materials/01-fundamentals.html#change-the-axis-scaling",
    "href": "materials/01-fundamentals.html#change-the-axis-scaling",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Change the Axis Scaling",
    "text": "Change the Axis Scaling\n\ng1 +\n  # x axis\n  scale_x_continuous(\n    # add ¬∞C symbol\n    labels = function(x) paste0(x, \"¬∞C\"), \n    # use 5¬∞C spacing\n    breaks = -1:6*5  # also: seq(-5, 30, by = 5)\n  )"
  },
  {
    "objectID": "materials/01-fundamentals.html#change-the-axis-scaling-1",
    "href": "materials/01-fundamentals.html#change-the-axis-scaling-1",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Change the Axis Scaling",
    "text": "Change the Axis Scaling\n\ng2 <- g1 +\n  # x axis\n  scale_x_continuous(\n    # add ¬∞C symbol\n    labels = function(x) paste0(x, \"¬∞C\"), \n    # use 5¬∞C spacing\n    breaks = -1:6*5  # also: seq(-5, 30, by = 5)\n  ) +\n  # y axis\n  scale_y_continuous(\n    # add a thousand separator\n    labels = scales::label_comma(), \n    # use consistent spacing across rows\n    breaks = 0:5*10000\n  )"
  },
  {
    "objectID": "materials/01-fundamentals.html#use-a-custom-color-palette",
    "href": "materials/01-fundamentals.html#use-a-custom-color-palette",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Use a Custom Color Palette",
    "text": "Use a Custom Color Palette\n\ng2 +\n  # use a custom color palette for season colors\n  scale_color_manual(\n    values = c(\"#6681FE\", \"#1EC98D\", \"#F7B01B\", \"#A26E7C\")\n  )"
  },
  {
    "objectID": "materials/01-fundamentals.html#use-a-custom-color-palette-1",
    "href": "materials/01-fundamentals.html#use-a-custom-color-palette-1",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Use a Custom Color Palette",
    "text": "Use a Custom Color Palette\n\n# use a named vector for explicit matching\ncolors <- c(\n  `0` = \"#1EC98D\",\n  `1` = \"#F7B01B\",\n  `2` = \"#A26E7C\",\n  `3` = \"#6681FE\"\n)\n\ng2 +\n  scale_color_manual(\n    values = colors\n  )"
  },
  {
    "objectID": "materials/01-fundamentals.html#adjust-labels-and-titles",
    "href": "materials/01-fundamentals.html#adjust-labels-and-titles",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Adjust Labels and Titles",
    "text": "Adjust Labels and Titles\n\n# use a named vector for explicit matching\ncolors <- c(\n  `0` = \"#1EC98D\",\n  `1` = \"#F7B01B\",\n  `2` = \"#A26E7C\",\n  `3` = \"#6681FE\"\n)\n\ng2 +\n  scale_color_manual(\n    values = colors,\n    # overwrite legend keys\n    labels = c(\"Winter\", \"Spring\", \"Summer\", \"Autumn\")\n  )"
  },
  {
    "objectID": "materials/01-fundamentals.html#adjust-labels-and-titles-1",
    "href": "materials/01-fundamentals.html#adjust-labels-and-titles-1",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Adjust Labels and Titles",
    "text": "Adjust Labels and Titles\n\ng3 <- g2 +\n  scale_color_manual(\n    values = colors,\n    labels = c(\"Winter\", \"Spring\", \"Summer\", \"Autumn\")\n  ) +\n  labs(\n    # overwrite axis and legend titles\n    x = \"Average feels-like temperature\", y = NULL, color = NULL,\n    # add plot title and caption\n    title = \"Trends of Reported Bike Rents versus Feels-Like Temperature in London\",\n    caption = \"Data: TfL (Transport for London), Jan 2015‚ÄìDec 2016\"\n  )"
  },
  {
    "objectID": "materials/01-fundamentals.html#apply-a-complete-theme",
    "href": "materials/01-fundamentals.html#apply-a-complete-theme",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Apply a Complete Theme",
    "text": "Apply a Complete Theme\n\ng3 +\n  # add theme with a custom font + larger element sizes\n  theme_light(\n    base_size = 15, base_family = \"Spline Sans\"\n  )"
  },
  {
    "objectID": "materials/01-fundamentals.html#apply-a-complete-theme-1",
    "href": "materials/01-fundamentals.html#apply-a-complete-theme-1",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Apply a Complete Theme",
    "text": "Apply a Complete Theme\n\ng4 <- g3 +\n  theme_light(base_size = 15, base_family = \"Spline Sans\") +\n  # theme adjustments\n  theme(\n    plot.title.position = \"plot\", # left-align title \n    plot.caption.position = \"plot\", # right-align caption\n    legend.position = \"top\", # place legend above plot\n    plot.title = element_text(face = \"bold\", size = rel(1.4)), # larger, bold title\n    axis.text = element_text(family = \"Spline Sans Mono\"), # monospaced font for axes\n    axis.title.x = element_text( # left-aligned, grey x axis label\n      hjust = 0, color = \"grey20\", margin = margin(t = 12)\n    ),\n    legend.text = element_text(size = rel(1)), # larger legend labels\n    strip.text = element_text(face = \"bold\", size = rel(1.15)), # larger, bold facet labels\n    panel.grid.major.x = element_blank(), # no vertical major lines\n    panel.grid.minor = element_blank(), # no minor grid lines\n    panel.spacing.x = unit(20, \"pt\"), # increase white space between panels\n    panel.spacing.y = unit(10, \"pt\"), # increase white space between panels\n    plot.margin = margin(rep(15, 4)) # adjust white space around plot\n  )"
  },
  {
    "objectID": "materials/01-fundamentals.html#adjust-legend",
    "href": "materials/01-fundamentals.html#adjust-legend",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Adjust Legend",
    "text": "Adjust Legend\n\ng4 +\n  # adjust symbol size in legend\n  guides(\n    color = guide_legend(override.aes = list(size = 4))\n  )"
  },
  {
    "objectID": "materials/01-fundamentals.html#adjust-legend-1",
    "href": "materials/01-fundamentals.html#adjust-legend-1",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Adjust Legend",
    "text": "Adjust Legend\n\ng4 +\n  scale_color_manual(\n    values = colors,\n    labels = c(\"Winter\", \"Spring\", \"Summer\", \"Autumn\"),\n    # adjust symbol size in legend size\n    guide = guide_legend(override.aes = list(size = 4))\n  )"
  },
  {
    "objectID": "materials/01-fundamentals.html#full-code",
    "href": "materials/01-fundamentals.html#full-code",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Full Code",
    "text": "Full Code\n\n# create named color vector\ncolors <- c(\n  `0` = \"#1EC98D\",\n  `1` = \"#F7B01B\",\n  `2` = \"#A26E7C\",\n  `3` = \"#6681FE\"\n)\n\n# scatter plot of plot bikes$count versus bikes$temp_feel\nggplot(bikes, aes(x = temp_feel, y = count)) + \n  # add points\n  geom_point(\n    # color mapping only applied to points\n    aes(color = season), \n    # setting larger points with 50% opacity\n    alpha = .5, size = 1.5\n  ) + \n  # add a smoothing\n  stat_smooth(  # also: geom_smooth()\n    # use linear fitting + draw black smoothing lines\n    method = \"lm\", color = \"black\"\n  ) +\n  # small multiples\n  facet_grid(\n    day_night ~ year,  # also: vars(day_night), vars(year)\n    # free y axis range\n    scales = \"free_y\", \n    # scale heights proportionally \n    space = \"free_y\"\n  ) +\n  # x axis\n  scale_x_continuous(\n    # add ¬∞C symbol\n    labels = function(x) paste0(x, \"¬∞C\"), \n    # use 5¬∞C spacing\n    breaks = -1:6*5  # also: seq(-5, 30, by = 5)\n  ) +\n  # y axis\n  scale_y_continuous(\n    # add a thousand separator\n    labels = scales::label_comma(), \n    # use consistent spacing across rows\n    breaks = 0:5*10000\n  ) +\n  # colors\n  scale_color_manual(\n    # use a custom color palette\n    values = colors,\n    # overwrite legend keys\n    labels = c(\"Winter\", \"Spring\", \"Summer\", \"Autumn\"),\n    # adjust symbol size in legend size\n    guide = guide_legend(override.aes = list(size = 4))\n  ) +\n  labs(\n    # overwrite axis and legend titles\n    x = \"Average feels-like temperature\", y = NULL, color = NULL,\n    # add plot title and caption\n    title = \"Trends of Reported Bike Rents versus Feels-Like Temperature in London\",\n    caption = \"Data: TfL (Transport for London), Jan 2015‚ÄìDec 2016\"\n  ) +\n  # add theme with a custom font + larger element sizes\n  theme_light(\n    base_size = 15, base_family = \"Spline Sans\"\n  ) +\n  # theme adjustments\n  theme(\n    plot.title.position = \"plot\", # left-align title \n    plot.caption.position = \"plot\", # right-align caption\n    legend.position = \"top\", # place legend above plot\n    plot.title = element_text(face = \"bold\", size = rel(1.4)), # larger, bold title\n    axis.text = element_text(family = \"Spline Sans Mono\"), # monospaced font for axes\n    axis.title.x = element_text( # left-aligned, grey x axis label\n      hjust = 0, color = \"grey20\", margin = margin(t = 12)\n    ),\n    legend.text = element_text(size = rel(1)), # larger legend labels\n    strip.text = element_text(face = \"bold\", size = rel(1.15)), # larger, bold facet labels\n    panel.grid.major.x = element_blank(), # no vertical major lines\n    panel.grid.minor = element_blank(), # no minor grid lines\n    panel.spacing.x = unit(20, \"pt\"), # increase white space between panels\n    panel.spacing.y = unit(10, \"pt\"), # increase white space between panels\n    plot.margin = margin(rep(15, 4)) # adjust white space around plot\n  )"
  },
  {
    "objectID": "materials/01-fundamentals.html#save-the-graphic",
    "href": "materials/01-fundamentals.html#save-the-graphic",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Save the Graphic",
    "text": "Save the Graphic\n\n\nggsave(filename = \"my_plot.png\", plot = g)\n\n\n\nggsave(\"my_plot.png\")\n\n\n\n\n\nggsave(\"my_plot.png\", width = 6, height = 5, dpi = 600)"
  },
  {
    "objectID": "materials/01-fundamentals.html#plot-resolution",
    "href": "materials/01-fundamentals.html#plot-resolution",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Plot Resolution",
    "text": "Plot Resolution"
  },
  {
    "objectID": "materials/01-fundamentals.html#plot-resolution-1",
    "href": "materials/01-fundamentals.html#plot-resolution-1",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Plot Resolution",
    "text": "Plot Resolution"
  },
  {
    "objectID": "materials/01-fundamentals.html#save-the-graphic-1",
    "href": "materials/01-fundamentals.html#save-the-graphic-1",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Save the Graphic",
    "text": "Save the Graphic\n\n\nggsave(filename = \"my_plot.png\", plot = g)\n\n\nggsave(\"my_plot.png\")\n\n\n\nggsave(\"my_plot.png\", width = 6, height = 5, dpi = 600)\n\n\n\nggsave(\"my_plot.png\", width = 6*2.54, height = 5*2.54, unit = \"cm\", dpi = 600)\n\n\n\n\n\nggsave(\"my_plot.png\", device = agg_png)\n\n\n\n\nggsave(\"my_plot.pdf\", device = cairo_pdf)"
  },
  {
    "objectID": "materials/01-fundamentals.html#the-ragg-package",
    "href": "materials/01-fundamentals.html#the-ragg-package",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "The {ragg} Package",
    "text": "The {ragg} Package\nprovides drop-in replacements for the default raster graphic devices\n\n\nfaster\ndirect access to all system fonts\nadvanced text rendering\n\nincluding support for right-to-left text, emojis, and font fallback\n\nhigh quality anti-aliasing\nhigh quality rotated text\nsupports 16-bit output\nsystem independent rendering"
  },
  {
    "objectID": "materials/01-fundamentals.html#the-ragg-package-1",
    "href": "materials/01-fundamentals.html#the-ragg-package-1",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "The {ragg} Package",
    "text": "The {ragg} Package\n\n\nSource: tidyverse.org/blog/2021/02/modern-text-features"
  },
  {
    "objectID": "materials/01-fundamentals.html#the-ragg-package-2",
    "href": "materials/01-fundamentals.html#the-ragg-package-2",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "The {ragg} Package",
    "text": "The {ragg} Package\n\n\nSource: tidyverse.org/blog/2021/02/modern-text-features"
  },
  {
    "objectID": "materials/01-fundamentals.html#the-ragg-package-3",
    "href": "materials/01-fundamentals.html#the-ragg-package-3",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "The {ragg} Package",
    "text": "The {ragg} Package\n\n\nSource: tidyverse.org/blog/2021/02/modern-text-features"
  },
  {
    "objectID": "materials/01-fundamentals.html#the-ragg-package-4",
    "href": "materials/01-fundamentals.html#the-ragg-package-4",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "The {ragg} Package",
    "text": "The {ragg} Package\n\n\nSource: tidyverse.org/blog/2021/02/modern-text-features"
  },
  {
    "objectID": "materials/01-fundamentals.html#the-ragg-package-5",
    "href": "materials/01-fundamentals.html#the-ragg-package-5",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "The {ragg} Package",
    "text": "The {ragg} Package\n\n\nuse {ragg} when saving ggplots by passing agg device function: ggsave(device = agg_png)) (used by default if installed)\nuse {ragg} in the Rstudio Plots pane be setting the backend to AGG: \nuse {ragg} when knitting Rmarkdown files by setting dev=\"ragg_png\" in the code chunk options."
  },
  {
    "objectID": "materials/01-fundamentals.html#save-the-graphic-2",
    "href": "materials/01-fundamentals.html#save-the-graphic-2",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Save the Graphic",
    "text": "Save the Graphic\n\n\nggsave(filename = \"my_plot.png\", plot = g)\n\n\nggsave(\"my_plot.png\")\n\n\n\nggsave(\"my_plot.png\", width = 6, height = 5, dpi = 600)\n\n\nggsave(\"my_plot.png\", width = 6*2.54, height = 5*2.54, unit = \"cm\", dpi = 600)\n\n\n\nggsave(\"my_plot.png\", device = agg_png)\n\n\nggsave(\"my_plot.pdf\", device = cairo_pdf)\n\n\n\nggsave(\"my_plot.svg\")"
  },
  {
    "objectID": "materials/01-fundamentals.html#how-to-work-with-aspect-ratios",
    "href": "materials/01-fundamentals.html#how-to-work-with-aspect-ratios",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "How to Work with Aspect Ratios",
    "text": "How to Work with Aspect Ratios\n\n\ndon‚Äôt rely on the Rstudio viewer pane!\nonce you have a ‚Äúit‚Äôs getting close‚Äù prototype, settle on a plot size\nApproach 1: save the file and inspect it‚Äîgo back to your IDE‚Äîrepeat\n\ntedious and time-consuming‚Ä¶\n\nApproach 2: use a qmd or rmd with inline output and chunk settings\n\nset fig-width / fig.width and fig-height / fig.heightper chunk or globally"
  },
  {
    "objectID": "materials/01-fundamentals.html#setting-plot-sizes-in-quarto-and-rmarkdown",
    "href": "materials/01-fundamentals.html#setting-plot-sizes-in-quarto-and-rmarkdown",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Setting Plot Sizes in Quarto and Rmarkdown",
    "text": "Setting Plot Sizes in Quarto and Rmarkdown"
  },
  {
    "objectID": "materials/01-fundamentals.html#setting-plot-sizes-in-quarto-and-rmarkdown-1",
    "href": "materials/01-fundamentals.html#setting-plot-sizes-in-quarto-and-rmarkdown-1",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Setting Plot Sizes in Quarto and Rmarkdown",
    "text": "Setting Plot Sizes in Quarto and Rmarkdown"
  },
  {
    "objectID": "materials/01-fundamentals.html#how-to-work-with-aspect-ratios-1",
    "href": "materials/01-fundamentals.html#how-to-work-with-aspect-ratios-1",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "How to Work with Aspect Ratios",
    "text": "How to Work with Aspect Ratios\n\ndon‚Äôt rely on the Rstudio viewer pane!\nonce you have a ‚Äúit‚Äôs getting close‚Äù prototype, settle on a plot size\nApproach 1: save the file and inspect it‚Äîgo back to your IDE‚Äîrepeat\n\ntedious and time-consuming‚Ä¶\n\nApproach 2: use a qmd or rmd with inline output and chunk settings\n\nset fig-width / fig.width and fig-height / fig.heightper chunk or globally\n\nApproach 3: use our {camcorder} package\n\nsaves output from all ggplot() calls and displays it in the viewer pane"
  },
  {
    "objectID": "materials/01-fundamentals.html#setting-plot-sizes-via-camcorder",
    "href": "materials/01-fundamentals.html#setting-plot-sizes-via-camcorder",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Setting Plot Sizes via {camcorder}",
    "text": "Setting Plot Sizes via {camcorder}"
  },
  {
    "objectID": "materials/01-fundamentals.html#setting-plot-sizes-via-camcorder-1",
    "href": "materials/01-fundamentals.html#setting-plot-sizes-via-camcorder-1",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Setting Plot Sizes via {camcorder}",
    "text": "Setting Plot Sizes via {camcorder}"
  },
  {
    "objectID": "materials/01-fundamentals.html#setting-plot-sizes-via-camcorder-2",
    "href": "materials/01-fundamentals.html#setting-plot-sizes-via-camcorder-2",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Setting Plot Sizes via {camcorder}",
    "text": "Setting Plot Sizes via {camcorder}\n\ncamcorder::gg_record(\n  dir = here::here(\"temp\"),  # path for plot files\n  device = \"png\",            # device to use\n  width = 10,                # figure width\n  height = 5,                # figure height\n  dpi = 600                  # plot resolution\n)\n\ng <- ggplot(bikes, aes(x = temp, y = count, color = day_night)) +\n  geom_point(alpha = .3, size = 2) +\n  scale_color_manual(values = c(day = \"#FFA200\", night = \"#757BC7\")) +\n  theme_minimal(base_size = 14, base_family = \"Asap SemiCondensed\") +\n  theme(panel.grid.minor = element_blank())\n\ng"
  },
  {
    "objectID": "materials/01-fundamentals.html#setting-plot-sizes-via-camcorder-3",
    "href": "materials/01-fundamentals.html#setting-plot-sizes-via-camcorder-3",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Setting Plot Sizes via {camcorder}",
    "text": "Setting Plot Sizes via {camcorder}\n\ncamcorder::gg_record(\n  dir = here::here(\"temp\"),  # path for plot files\n  device = \"png\",            # device to use\n  width = 10,                # figure width\n  height = 5,                # figure height\n  dpi = 600                  # plot resolution\n)\n\ng <- ggplot(bikes, aes(x = temp, y = count, color = day_night)) +\n  geom_point(alpha = .3, size = 2) +\n  scale_color_manual(values = c(day = \"#FFA200\", night = \"#757BC7\")) +\n  theme_minimal(base_size = 14, base_family = \"Asap SemiCondensed\") +\n  theme(panel.grid.minor = element_blank())\n\ng\n\ncamcorder::gg_resize_film(width = 20) # update figure width\n\ng"
  },
  {
    "objectID": "materials/01-fundamentals.html#like-a-pro-set-theme-globally",
    "href": "materials/01-fundamentals.html#like-a-pro-set-theme-globally",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Like a Pro: Set Theme Globally",
    "text": "Like a Pro: Set Theme Globally\n\ntheme_set(theme_minimal(base_size = 14, base_family = \"Asap SemiCondensed\"))\ntheme_update(panel.grid.minor = element_blank())"
  },
  {
    "objectID": "materials/01-fundamentals.html#conditional-components",
    "href": "materials/01-fundamentals.html#conditional-components",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Conditional Components",
    "text": "Conditional Components\n\nsmooth <- TRUE\n\nggplot(bikes, aes(x = temp, y = humidity)) +\n  { if(smooth) geom_smooth(color = \"red\") } +\n  geom_point(alpha = .5)"
  },
  {
    "objectID": "materials/01-fundamentals.html#conditional-components-1",
    "href": "materials/01-fundamentals.html#conditional-components-1",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Conditional Components",
    "text": "Conditional Components\n\nsmooth <- TRUE\n\nggplot(bikes, aes(x = temp, y = humidity)) +\n  { if(smooth) geom_smooth(color = \"red\") } +\n  geom_point(alpha = .5)"
  },
  {
    "objectID": "materials/01-fundamentals.html#conditional-components-2",
    "href": "materials/01-fundamentals.html#conditional-components-2",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Conditional Components",
    "text": "Conditional Components\n\nsmooth <- FALSE\n\nggplot(bikes, aes(x = temp, y = humidity)) +\n  { if(smooth) geom_smooth(color = \"red\") } +\n  geom_point(alpha = .5)"
  },
  {
    "objectID": "materials/01-fundamentals.html#wrapper-functions-for-plots",
    "href": "materials/01-fundamentals.html#wrapper-functions-for-plots",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Wrapper Functions for Plots",
    "text": "Wrapper Functions for Plots\n\ndraw_scatter <- function(smooth = TRUE) {\n  ggplot(bikes, aes(x = temp, y = humidity)) +\n    { if(smooth) geom_smooth(color = \"red\") } +\n    geom_point(alpha = .5)\n}"
  },
  {
    "objectID": "materials/01-fundamentals.html#wrapper-functions-for-plots-1",
    "href": "materials/01-fundamentals.html#wrapper-functions-for-plots-1",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Wrapper Functions for Plots",
    "text": "Wrapper Functions for Plots\n\n\ndraw_scatter()"
  },
  {
    "objectID": "materials/01-fundamentals.html#wrapper-functions-for-plots-2",
    "href": "materials/01-fundamentals.html#wrapper-functions-for-plots-2",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Wrapper Functions for Plots",
    "text": "Wrapper Functions for Plots\n\n\ndraw_scatter(smooth = FALSE)"
  },
  {
    "objectID": "materials/01-fundamentals.html#components-as-functions",
    "href": "materials/01-fundamentals.html#components-as-functions",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Components as Functions",
    "text": "Components as Functions\n\ngeom_scatterfit <- function(pointsize = 1, pointalpha = 1, \n                            method = \"lm\", linecolor = \"red\", ...) {\n  list(\n    geom_point(size = pointsize, alpha = pointalpha, ...),\n    geom_smooth(method = method, color = linecolor, ...)\n  )\n}"
  },
  {
    "objectID": "materials/01-fundamentals.html#components-as-functions-1",
    "href": "materials/01-fundamentals.html#components-as-functions-1",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Components as Functions",
    "text": "Components as Functions\n\n\nggplot(bikes,\n       aes(x = humidity, y = count)) +\n  geom_scatterfit()"
  },
  {
    "objectID": "materials/01-fundamentals.html#components-as-functions-2",
    "href": "materials/01-fundamentals.html#components-as-functions-2",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Components as Functions",
    "text": "Components as Functions\n\n\nggplot(bikes,\n       aes(x = humidity, y = count)) +\n  geom_scatterfit(\n    color = \"#28A87D\", \n    size = 3\n  )"
  },
  {
    "objectID": "materials/01-fundamentals.html#components-as-functions-3",
    "href": "materials/01-fundamentals.html#components-as-functions-3",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Components as Functions",
    "text": "Components as Functions\n\n\nggplot(diamonds, \n       aes(x = carat, y = price)) +\n  geom_scatterfit(\n    pointsize = .5, \n    pointalpha = .1,\n    method = \"gam\",\n    linecolor = \"#EFAC00\"\n  )"
  },
  {
    "objectID": "materials/01-fundamentals.html#components-as-functions-4",
    "href": "materials/01-fundamentals.html#components-as-functions-4",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Components as Functions",
    "text": "Components as Functions\n\nscales_log <- function(sides = \"xy\") {\n  list(\n    if(stringr::str_detect(sides, \"x\")) {\n      scale_x_log10(\n        breaks = c(10^(1:100)), labels = scales::label_log()\n      )\n    },\n    if(stringr::str_detect(sides, \"y\")) {\n      scale_y_log10(\n        breaks = c(10^(1:100)), labels = scales::label_log()\n      )\n    }\n  )\n}"
  },
  {
    "objectID": "materials/01-fundamentals.html#components-as-functions-5",
    "href": "materials/01-fundamentals.html#components-as-functions-5",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Components as Functions",
    "text": "Components as Functions\n\n\nggplot(diamonds, \n       aes(x = carat, y = price)) +\n  geom_scatterfit(\n    pointsize = .5, \n    pointalpha = .1,\n    method = \"gam\",\n    linecolor = \"#EFAC00\"\n  ) +\n  scales_log(sides = \"y\")"
  },
  {
    "objectID": "materials/01-fundamentals.html#iterative-graphics",
    "href": "materials/01-fundamentals.html#iterative-graphics",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Iterative Graphics",
    "text": "Iterative Graphics\n\ntrends_monthly <- function(grp = \"January\") {\n  bikes |> \n    dplyr::mutate(month = lubridate::month(date, label = TRUE, abbr = FALSE)) |> \n    dplyr::filter(month %in% grp) |> \n    ggplot(aes(x = temp, y = count, color = day_night)) +\n    geom_point(alpha = .2, show.legend = FALSE) +\n    geom_smooth(se = FALSE) +\n    scale_color_manual(values = c(\"#FFA200\", \"#757bc7\")) +\n    labs(title = grp, x = \"Temperature\", y = \"Bike shares\", color = NULL)\n}"
  },
  {
    "objectID": "materials/01-fundamentals.html#iterative-graphics-1",
    "href": "materials/01-fundamentals.html#iterative-graphics-1",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Iterative Graphics",
    "text": "Iterative Graphics\n\n\ntrends_monthly(\"July\")"
  },
  {
    "objectID": "materials/01-fundamentals.html#iterative-graphics-2",
    "href": "materials/01-fundamentals.html#iterative-graphics-2",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Iterative Graphics",
    "text": "Iterative Graphics\n\ntrends_monthly <- function(grp = \"January\") {\n  bikes |> \n    dplyr::mutate(month = lubridate::month(date, label = TRUE, abbr = FALSE)) |> \n    dplyr::filter(month %in% grp) |> \n    ggplot(aes(x = temp, y = count, color = day_night)) +\n    geom_point(alpha = .2, show.legend = FALSE) +\n    geom_smooth(se = FALSE) +\n    # keep axis ranges consistent\n    scale_x_continuous(limits = range(bikes$temp)) +\n    scale_y_continuous(limits = range(bikes$count)) +\n    scale_color_manual(values = c(\"#FFA200\", \"#757bc7\")) +\n    labs(title = grp, x = \"Temperature\", y = \"Bike shares\", color = NULL)\n}"
  },
  {
    "objectID": "materials/01-fundamentals.html#iterative-graphics-3",
    "href": "materials/01-fundamentals.html#iterative-graphics-3",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Iterative Graphics",
    "text": "Iterative Graphics\n\n\ntrends_monthly(\"July\")"
  },
  {
    "objectID": "materials/01-fundamentals.html#iterative-graphics-4",
    "href": "materials/01-fundamentals.html#iterative-graphics-4",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Iterative Graphics",
    "text": "Iterative Graphics\n\nplots <- purrr::map(month.name[1:12], trends_monthly) ## also: ~ trends_monthly(.x)"
  },
  {
    "objectID": "materials/01-fundamentals.html#iterative-graphics-5",
    "href": "materials/01-fundamentals.html#iterative-graphics-5",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Iterative Graphics",
    "text": "Iterative Graphics\n\nplots <- purrr::map(month.name[1:12], trends_monthly) ## also: ~ trends_monthly(.x)\nplots[[9]]"
  },
  {
    "objectID": "materials/01-fundamentals.html#iterative-graphics-6",
    "href": "materials/01-fundamentals.html#iterative-graphics-6",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Iterative Graphics",
    "text": "Iterative Graphics\n\nplots <- purrr::map(month.name[1:12], trends_monthly) ## also: ~ trends_monthly(.x)\npatchwork::wrap_plots(plots)"
  },
  {
    "objectID": "materials/01-fundamentals.html#iterative-graphics-7",
    "href": "materials/01-fundamentals.html#iterative-graphics-7",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Iterative Graphics",
    "text": "Iterative Graphics\n\nplot_density <- function(data, var, grp = \"\") {\n  ggplot(data, aes(x = !!sym(var))) +\n    geom_density(aes(fill = !!sym(grp)), position = \"identity\",\n                 color = \"grey30\", alpha = .3) +\n    coord_cartesian(expand = FALSE, clip = \"off\") +\n    scale_y_continuous(labels = scales::label_number()) +\n    scale_fill_brewer(palette = \"Dark2\", name = NULL) +\n    theme(legend.position = \"top\")\n}"
  },
  {
    "objectID": "materials/01-fundamentals.html#iterative-graphics-8",
    "href": "materials/01-fundamentals.html#iterative-graphics-8",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Iterative Graphics",
    "text": "Iterative Graphics\n\n\nplot_density(\n  bikes, \"count\"\n)"
  },
  {
    "objectID": "materials/01-fundamentals.html#iterative-graphics-9",
    "href": "materials/01-fundamentals.html#iterative-graphics-9",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Iterative Graphics",
    "text": "Iterative Graphics\n\nplots <- purrr::map(\n  c(\"count\", \"temp\", \"humidity\", \"wind_speed\"), \n  ~ plot_density(data = bikes, var = .x, grp = \"day_night\")\n)\npatchwork::wrap_plots(plots, nrow = 1)"
  },
  {
    "objectID": "materials/01-fundamentals.html#iterative-graphics-10",
    "href": "materials/01-fundamentals.html#iterative-graphics-10",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Iterative Graphics",
    "text": "Iterative Graphics\n\nplots <- purrr::map(\n  names(dplyr::select(midwest, where(is.numeric))),\n  ~plot_density(data = midwest, var = .x)\n)\npatchwork::wrap_plots(plots)"
  },
  {
    "objectID": "materials/01-fundamentals.html#combine-plots-with-patchwork",
    "href": "materials/01-fundamentals.html#combine-plots-with-patchwork",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Combine Plots with {patchwork}",
    "text": "Combine Plots with {patchwork}\n\nlibrary(patchwork)\n\np1 <- plot_density(data = bikes, var = \"count\", grp = \"day_night\")\n\np2 <- plot_density(data = bikes, var = \"humidity\", grp = \"day_night\")\n\np3 <- ggplot(bikes, aes(x = humidity, y = count)) + geom_scatterfit(pointalpha = .3)"
  },
  {
    "objectID": "materials/01-fundamentals.html#combine-plots-with-patchwork-1",
    "href": "materials/01-fundamentals.html#combine-plots-with-patchwork-1",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Combine Plots with {patchwork}",
    "text": "Combine Plots with {patchwork}\n\n(p1 + p2) / p3"
  },
  {
    "objectID": "materials/01-fundamentals.html#combine-plots-with-patchwork-2",
    "href": "materials/01-fundamentals.html#combine-plots-with-patchwork-2",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Combine Plots with {patchwork}",
    "text": "Combine Plots with {patchwork}\n\n(p1 + p2) / p3 + plot_layout(heights = c(1, 2))"
  },
  {
    "objectID": "materials/01-fundamentals.html#combine-plots-with-patchwork-3",
    "href": "materials/01-fundamentals.html#combine-plots-with-patchwork-3",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Combine Plots with {patchwork}",
    "text": "Combine Plots with {patchwork}\n\n(p1 + p2) / p3 + plot_layout(heights = c(1, 2), guides = \"collect\")"
  },
  {
    "objectID": "materials/01-fundamentals.html#combine-plots-with-patchwork-4",
    "href": "materials/01-fundamentals.html#combine-plots-with-patchwork-4",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Combine Plots with {patchwork}",
    "text": "Combine Plots with {patchwork}\n\n(p1 + p2) / p3 + plot_layout(heights = c(1, 2), guides = \"collect\") +\n  plot_annotation(theme = theme(legend.justification = \"top\"))"
  },
  {
    "objectID": "materials/01-fundamentals.html#combine-plots-with-patchwork-5",
    "href": "materials/01-fundamentals.html#combine-plots-with-patchwork-5",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Combine Plots with {patchwork}",
    "text": "Combine Plots with {patchwork}\n\n(p1 + p2) / p3 + plot_layout(heights = c(1, 2), guides = \"collect\") +\n  plot_annotation(tag_levels = \"A\", tag_suffix = \".\", theme = theme(legend.justification = \"top\"))"
  },
  {
    "objectID": "materials/01-fundamentals.html#layers",
    "href": "materials/01-fundamentals.html#layers",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Layers",
    "text": "Layers\n\n{geofacet} ‚Äî tile grid maps\n{ggalluvial} ‚Äî alluvial plots\n{ggalt} ‚Äî dumbbell, horizon, and lollipop charts, splines, ‚Ä¶\n{ggbeeswarm} ‚Äî beeswarm plots and variants\n{ggbraid} ‚Äî ribbons for alternating groups\n{ggbump} ‚Äî parallel sets, pie charts, geometries, splines, voronoi, ‚Ä¶\n{ggdensity} ‚Äî improved density plots\n{ggdist} ‚Äî uncertainty visualizations\n{ggforce} ‚Äî several interesting layers (and more)\n{ggpattern} ‚Äî pattern fills for layers"
  },
  {
    "objectID": "materials/01-fundamentals.html#layers-continued",
    "href": "materials/01-fundamentals.html#layers-continued",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Layers (continued)",
    "text": "Layers (continued)\n\n{ggpointdensity} ‚Äî density gradients for scatter plots\n{ggraph} ‚Äî networks, graphs & trees\n{ggridges} ‚Äî ridgeline plots\n{ggsankey} ‚Äî sankey diagrams\n{ggsignif} ‚Äî significance levels\n{ggstar} ‚Äî more point shapes\n{ggstream} ‚Äî stream graphs\n{ggupset} ‚Äî upset graphs\n{treemapify} ‚Äî treemaps"
  },
  {
    "objectID": "materials/01-fundamentals.html#utilities",
    "href": "materials/01-fundamentals.html#utilities",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Utilities",
    "text": "Utilities\n\n{cowplot} ‚Äî combine ggplots\n{ggannotate} ‚Äî point-n-click annotations\n{ggblend} ‚Äî blend, compose, adjust layers\n{ggfittext} ‚Äî scale text according to space\n{ggfx} ‚Äî shaders and filters for layers\n{ggh4x} ‚Äî facets, positions, and more\n{ggtext} ‚Äî text rendering for theme elements + text layers\n{lemon} ‚Äî axis lines (and a few layers)\n{patchwork} ‚Äî combine ggplots\n{scales} ‚Äî control scales"
  },
  {
    "objectID": "materials/01-fundamentals.html#themes",
    "href": "materials/01-fundamentals.html#themes",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Themes",
    "text": "Themes\n\n{ggdark}\n{ggsci} (also color scales)\n{ggtech} (also color scales)\n{ggthemes} (also color scales)\n{ggthemr}\n{hrbrthemes} (also color scales)\n{tvthemes} (also color scales)"
  },
  {
    "objectID": "materials/01-fundamentals.html#color-palettes",
    "href": "materials/01-fundamentals.html#color-palettes",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Color Palettes",
    "text": "Color Palettes\n\n{colorspace}\n{jcolors}\n{MetBrewer}\n{nord}\n{rcartocolor}\n{RColorBrewer}\n{scico}\n{unikn}\n{viridis}\n{wesanderson}"
  },
  {
    "objectID": "materials/01-fundamentals.html#interactive-charts",
    "href": "materials/01-fundamentals.html#interactive-charts",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Interactive Charts",
    "text": "Interactive Charts\n\n{ggiraph}\n{plotly}\n{echarts4r}*\n{highcharter}*\n{charter}*\n{streamgraph}*\n{tmap}*\n{leaflet}*\n{globe4r}*\n{grapher}*\n\n* not using ggplot2"
  },
  {
    "objectID": "materials/01-fundamentals.html#recap",
    "href": "materials/01-fundamentals.html#recap",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Recap",
    "text": "Recap\n\n\na basic ggplot is build by specifying three components:data, aesthetics and a layer (usually a geom_* or stat_*)\naesthetic mappings define how variables map to visual properties\nthe default appearance of all other components can be modified via scale_*, coord_*, facet_* and theme_* / theme\nuse the devices cairo (pdf) and agg (png, jpg, tiff) when saving plots\nfind a suitable plot size by setting figure chunk options in qmd/rmd files or with the help of the {camcorder} package\ndefine conditional components, custom layers and functions to generate plots more efficiently and to iterate over multiple inputs\ncombine multiple plot outputs with {patchwork}"
  },
  {
    "objectID": "materials/01-fundamentals.html#exercise-1",
    "href": "materials/01-fundamentals.html#exercise-1",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Exercise 1",
    "text": "Exercise 1\n\n\nDiscuss / investigate with your neighbor:\n\nWhat are the differences between geom_line() and geom_path()?\nWhy can you use geom_smooth() and stat_smooth() interchangeably?\nWhat are the three ways to remove a legend from a ggplot?"
  },
  {
    "objectID": "materials/01-fundamentals.html#exercise-2",
    "href": "materials/01-fundamentals.html#exercise-2",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Exercise 2",
    "text": "Exercise 2\n\n\nExplore the TfL bike share data visually:\n\nCreate a time series of counts per day and night.\nDraw box and whisker plots of average temperatures per month.\nVisualize bike counts per weather type and period as bar chart.\n\nCombine the three plots with {patchwork}.\nExport the final graphic in a format of your choice."
  },
  {
    "objectID": "materials/01-fundamentals.html#section-1",
    "href": "materials/01-fundamentals.html#section-1",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "",
    "text": "C√©dric Scherer // posit::conf(2023)"
  },
  {
    "objectID": "materials/02-text.html#setup",
    "href": "materials/02-text.html#setup",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Setup",
    "text": "Setup\n\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(stringr)\n\nbikes <- readr::read_csv(\n  here::here(\"data\", \"london-bikes-custom.csv\"), \n  col_types = \"Dcfffilllddddc\"\n)\n\ntheme_set(theme_light(base_size = 14, base_family = \"Asap SemiCondensed\"))\n\ntheme_update(\n  panel.grid.minor = element_blank(),\n  plot.title = element_text(face = \"bold\"),\n  plot.title.position = \"plot\"\n)"
  },
  {
    "objectID": "materials/02-text.html#working-with-labels",
    "href": "materials/02-text.html#working-with-labels",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Working with Labels",
    "text": "Working with Labels\n\n\ng <- ggplot(\n    bikes,\n    aes(x = temp, y = count,\n        color = season)\n  ) +\n  geom_point(\n    alpha = .5\n  ) +\n  labs(\n    x = \"Temperature (¬∞C)\",\n    y = \"Reported bike shares\",\n    title = \"TfL bike sharing trends\",\n    subtitle = \"Reported bike rents versus air temperature in London\",\n    caption = \"Data: TfL\",\n    color = \"Season:\",\n    tag = \"1.\"\n  )\n\ng"
  },
  {
    "objectID": "materials/02-text.html#customize-labels-via-theme",
    "href": "materials/02-text.html#customize-labels-via-theme",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Customize Labels via theme()",
    "text": "Customize Labels via theme()\n\n\ng + theme(\n  plot.title = element_text(face = \"bold\"),\n  plot.title.position = \"plot\"\n)"
  },
  {
    "objectID": "materials/02-text.html#customize-labels-via-theme-1",
    "href": "materials/02-text.html#customize-labels-via-theme-1",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Customize Labels via theme()",
    "text": "Customize Labels via theme()\n\n\ng + theme(\n  plot.title = element_text(face = \"bold\"),\n  plot.title.position = \"plot\",\n  axis.text = element_text(\n    color = \"#28a87d\"\n  )\n)"
  },
  {
    "objectID": "materials/02-text.html#customize-labels-via-theme-2",
    "href": "materials/02-text.html#customize-labels-via-theme-2",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Customize Labels via theme()",
    "text": "Customize Labels via theme()\n\n\ng + theme(\n  plot.title = element_text(face = \"bold\"),\n  plot.title.position = \"plot\",\n  axis.text = element_text(\n    color = \"#28a87d\",\n    family = \"Spline Sans Mono\",\n    face = \"italic\",\n    lineheight = 1.3, # no effect here\n    angle = 45,\n    hjust = 1,\n    vjust = 0,\n    margin = margin(10, 0, 20, 0)\n  )\n)"
  },
  {
    "objectID": "materials/02-text.html#customize-labels-via-theme-3",
    "href": "materials/02-text.html#customize-labels-via-theme-3",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Customize Labels via theme()",
    "text": "Customize Labels via theme()\n\n\ng + theme(\n  plot.title = element_text(face = \"bold\"),\n  plot.title.position = \"plot\",\n  axis.text = element_text(\n    color = \"#28a87d\",\n    family = \"Spline Sans Mono\",\n    face = \"italic\",\n    lineheight = 1.3, # no effect here\n    angle = 45,\n    hjust = 1, # no effect here\n    vjust = 0, # no effect here\n    margin = margin(10, 0, 20, 0) # no effect here\n  )\n)"
  },
  {
    "objectID": "materials/02-text.html#customize-labels-via-theme-4",
    "href": "materials/02-text.html#customize-labels-via-theme-4",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Customize Labels via theme()",
    "text": "Customize Labels via theme()\n\n\ng + theme(\n  plot.title = element_text(face = \"bold\"),\n  plot.title.position = \"plot\",\n  axis.text = element_text(\n    color = \"#28a87d\",\n    family = \"Spline Sans Mono\",\n    face = \"italic\",\n    lineheight = 1.3, # no effect here\n    angle = 45,\n    hjust = 1, # no effect here\n    vjust = 0, # no effect here\n    margin = margin(10, 0, 20, 0) # no effect here\n  ),\n  axis.text.x = element_text(\n    hjust = 1,\n    vjust = 0,\n    margin = margin(10, 0, 20, 0) # trbl\n  )\n)"
  },
  {
    "objectID": "materials/02-text.html#customize-labels-via-theme-5",
    "href": "materials/02-text.html#customize-labels-via-theme-5",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Customize Labels via theme()",
    "text": "Customize Labels via theme()\n\n\ng + theme(\n  plot.title = element_text(face = \"bold\"),\n  plot.title.position = \"plot\",\n  axis.text = element_text(\n    color = \"#28a87d\",\n    family = \"Spline Sans Mono\",\n    face = \"italic\",\n    lineheight = 1.3, # no effect here\n    angle = 45,\n    hjust = 1, # no effect here\n    vjust = 0, # no effect here\n    margin = margin(10, 0, 20, 0) # no effect here\n  ),\n  plot.tag = element_text(\n    margin = margin(0, 12, -8, 0) # trbl\n  )\n)"
  },
  {
    "objectID": "materials/02-text.html#customize-labels-via-theme-6",
    "href": "materials/02-text.html#customize-labels-via-theme-6",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Customize Labels via theme()",
    "text": "Customize Labels via theme()\n\n\ng + theme(\n  plot.title = element_text(face = \"bold\"),\n  plot.title.position = \"plot\",\n  axis.text = element_text(\n    color = \"#28a87d\",\n    family = \"Spline Sans Mono\",\n    face = \"italic\",\n    hjust = 1,\n    vjust = 0,\n    angle = 45,\n    lineheight = 1.3, # no effect here\n    margin = margin(10, 0, 20, 0), # no effect here\n    debug = TRUE\n  ),\n  plot.tag = element_text(\n    margin = margin(0, 12, -8, 0), # trbl\n    debug = TRUE\n  )\n)"
  },
  {
    "objectID": "materials/02-text.html#format-labels-via-scale_",
    "href": "materials/02-text.html#format-labels-via-scale_",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Format Labels via scale_*",
    "text": "Format Labels via scale_*\n\n\ng <- g + labs(tag = NULL, title = NULL, \n              subtitle = NULL)\n\ng +\n  scale_y_continuous(\n    breaks = 0:4*15000\n  )"
  },
  {
    "objectID": "materials/02-text.html#format-labels-via-scale_-1",
    "href": "materials/02-text.html#format-labels-via-scale_-1",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Format Labels via scale_*",
    "text": "Format Labels via scale_*\n\n\ng +\n  scale_y_continuous(\n    breaks = scales::breaks_pretty(n = 10)\n  )"
  },
  {
    "objectID": "materials/02-text.html#format-labels-via-scale_-2",
    "href": "materials/02-text.html#format-labels-via-scale_-2",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Format Labels via scale_*",
    "text": "Format Labels via scale_*\n\n\ng +\n  scale_y_continuous(\n    breaks = 0:4*15000,\n    labels = scales::comma_format()\n  )"
  },
  {
    "objectID": "materials/02-text.html#format-labels-via-scale_-3",
    "href": "materials/02-text.html#format-labels-via-scale_-3",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Format Labels via scale_*",
    "text": "Format Labels via scale_*\n\n\ng +\n  scale_y_continuous(\n    breaks = 0:4*15000,\n    labels = scales::comma_format(\n      suffix = \" bikes\"\n    ),\n    name = NULL\n  )"
  },
  {
    "objectID": "materials/02-text.html#format-labels-via-scale_-4",
    "href": "materials/02-text.html#format-labels-via-scale_-4",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Format Labels via scale_*",
    "text": "Format Labels via scale_*\n\n\ng +\n  scale_y_continuous(\n    breaks = 0:4*15000,\n    labels = scales::comma_format(\n      scale = .001\n    ),\n    name = \"Reported bike shares in thousands\"\n  )"
  },
  {
    "objectID": "materials/02-text.html#format-labels-via-scale_-5",
    "href": "materials/02-text.html#format-labels-via-scale_-5",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Format Labels via scale_*",
    "text": "Format Labels via scale_*\n\n\ng +\n  scale_y_continuous(\n    breaks = 0:4*15000,\n    labels = function(y) y / 1000,\n    name = \"Reported bike shares in thousands\"\n  )"
  },
  {
    "objectID": "materials/02-text.html#format-labels-via-scale_-6",
    "href": "materials/02-text.html#format-labels-via-scale_-6",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Format Labels via scale_*",
    "text": "Format Labels via scale_*\n\n\ng +\n  scale_x_continuous(\n    labels = function(y) paste0(y, \"¬∞C\"),\n    name = \"Temperature\"\n  )"
  },
  {
    "objectID": "materials/02-text.html#format-labels-via-scale_-7",
    "href": "materials/02-text.html#format-labels-via-scale_-7",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Format Labels via scale_*",
    "text": "Format Labels via scale_*\n\n\ng +\n  scale_color_discrete(\n    name = NULL,\n    labels = str_to_title\n  )"
  },
  {
    "objectID": "materials/02-text.html#style-labels-of-dual-axis-plots",
    "href": "materials/02-text.html#style-labels-of-dual-axis-plots",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Style Labels of Dual Axis Plots",
    "text": "Style Labels of Dual Axis Plots\n\nsec <- \n  bikes |> \n  group_by(\n    month = lubridate::month(date, label = TRUE)\n  ) |> \n  summarize(n = sum(count), temp = mean(temp)) |> \n  ggplot(aes(x = month)) +\n  geom_col(aes(y = n), fill = \"grey70\") +\n  geom_point(aes(y = temp * 10^5), color = \"firebrick\") +\n  geom_line(aes(y = temp * 10^5, group = 1), color = \"firebrick\")"
  },
  {
    "objectID": "materials/02-text.html#style-labels-of-dual-axis-plots-1",
    "href": "materials/02-text.html#style-labels-of-dual-axis-plots-1",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Style Labels of Dual Axis Plots",
    "text": "Style Labels of Dual Axis Plots\n\nsec +\n  scale_y_continuous(\n    labels = scales::label_comma(scale = 1/10^6, suffix = \"M\"),\n    name = \"Rented bikes\",\n    sec.axis = sec_axis(\n      trans = ~ . / 10^5,\n      name = \"Average daily temperature\",\n      labels = scales::label_comma(suffix = \"¬∞C\")\n    )\n  )"
  },
  {
    "objectID": "materials/02-text.html#style-labels-of-dual-axis-plots-2",
    "href": "materials/02-text.html#style-labels-of-dual-axis-plots-2",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Style Labels of Dual Axis Plots",
    "text": "Style Labels of Dual Axis Plots\n\nsec +\n  scale_y_continuous(\n    labels = scales::label_comma(scale = 1/10^6, suffix = \"M\"),\n    name = \"Rented bikes\",\n    sec.axis = sec_axis(\n      trans = ~ . / 30000,\n      name = \"Average daily temperature\",\n      labels = scales::label_comma(suffix = \"¬∞C\")\n    )\n  ) +\n  theme(\n    axis.title.y.left = element_text(color = \"grey60\", face = \"bold\"),\n    axis.title.y.right = element_text(color = \"firebrick\", face = \"bold\",\n                                      margin = margin(l = 10, r = 0))\n  )"
  },
  {
    "objectID": "materials/02-text.html#styling-labels-with-ggtext-1",
    "href": "materials/02-text.html#styling-labels-with-ggtext-1",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Styling Labels with {ggtext}",
    "text": "Styling Labels with {ggtext}\n\n\ng +\n  ggtitle(\"**TfL bike sharing trends by _season_**\")"
  },
  {
    "objectID": "materials/02-text.html#styling-labels-with-ggtext-2",
    "href": "materials/02-text.html#styling-labels-with-ggtext-2",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Styling Labels with {ggtext}",
    "text": "Styling Labels with {ggtext}\n\n\ng +\n  ggtitle(\"**TfL bike sharing trends by _season_**\") +\n  theme(\n    plot.title = ggtext::element_markdown()\n  )"
  },
  {
    "objectID": "materials/02-text.html#styling-labels-with-ggtext-3",
    "href": "materials/02-text.html#styling-labels-with-ggtext-3",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Styling Labels with {ggtext}",
    "text": "Styling Labels with {ggtext}\n\n\ng +\n  ggtitle(\"<b style='font-family:Times;font-size:25pt'>TfL</b> bike sharing trends by <i style='color:#28A87D;'>season</i>\") +\n  theme(\n    plot.title = ggtext::element_markdown()\n  )\n\n\n\n\n\n\n<b style='font-family:Times;font-size:25pt;'>TfL</b> bike sharing trends by <i style='color:#28A87;'>season</i>"
  },
  {
    "objectID": "materials/02-text.html#styling-labels-with-ggtext-4",
    "href": "materials/02-text.html#styling-labels-with-ggtext-4",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Styling Labels with {ggtext}",
    "text": "Styling Labels with {ggtext}\n\n\ng +\n  ggtext::geom_richtext(\n    aes(x = 18, y = 48500,\n        label = \"What happened on these<br>two <b style='color:#F7B01B;'>summer days</b>?\"),\n    stat = \"unique\"\n  ) +\n  scale_color_manual(\n    values = c(\"#6681FE\", \"#1EC98D\", \"#F7B01B\", \"#A26E7C\")\n  )\n\n\n\n\n\n\nWhat happened on these<br>two <b style='color:#F7B01B;'>summer days</b>?"
  },
  {
    "objectID": "materials/02-text.html#styling-labels-with-ggtext-5",
    "href": "materials/02-text.html#styling-labels-with-ggtext-5",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Styling Labels with {ggtext}",
    "text": "Styling Labels with {ggtext}\n\n\ng +\n  ggtext::geom_richtext(\n    aes(x = 18, y = 48500,\n        label = \"What happened on these<br>two <b style='color:#F7B01B;'>summer days</b>?\"),\n    stat = \"unique\", \n    color = \"grey20\",\n    family = \"Asap SemiCondensed\",\n    fill = NA, \n    label.color = NA\n  ) +\n  scale_color_manual(\n    values = c(\"#6681FE\", \"#1EC98D\", \"#F7B01B\", \"#A26E7C\")\n  )\n\n\n\n\n\n\nWhat happened on these<br>two <b style='color:#F7B01B;'>summer days</b>?"
  },
  {
    "objectID": "materials/02-text.html#styling-labels-with-ggtext-6",
    "href": "materials/02-text.html#styling-labels-with-ggtext-6",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Styling Labels with {ggtext}",
    "text": "Styling Labels with {ggtext}\n\nfriends <- readr::read_csv(\n  here::here(\"data\", \"friends-mentions-partners.csv\")\n)\n\nfriends\n\n# A tibble: 725 √ó 6\n      id season episode key               partners          mentions\n   <dbl>  <dbl>   <dbl> <chr>             <chr>                <dbl>\n 1     1      1       1 Ross & Rachel     Ross & Rachel            4\n 2     1      1       1 Rachel & Joey     Rachel & Joey            1\n 3     2      1       2 Ross & Rachel     Ross & Rachel            1\n 4     2      1       2 Ross              Ross & Carol             2\n 5     2      1       2 Rachel & Joey     Rachel & Joey            1\n 6     2      1       2 Rachel            Rachel & Barry           3\n 7     2      1       2 Monica & Chandler Monica & Chandler        1\n 8     5      1       5 Ross & Rachel     Ross & Rachel            3\n 9     5      1       5 Ross              Ross & Carol             1\n10     5      1       5 Chandler          Chandler & Janice        2\n# ‚Ñπ 715 more rows"
  },
  {
    "objectID": "materials/02-text.html#styling-labels-with-ggtext-7",
    "href": "materials/02-text.html#styling-labels-with-ggtext-7",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Styling Labels with {ggtext}",
    "text": "Styling Labels with {ggtext}\n\nmatch_colors <-\n  tibble(\n    key = c(\"Chandler\", \"Joey\", \"Monica\", \"Monica & Chandler\", \n            \"Phoebe\", \"Rachel\", \"Rachel & Joey\", \"Ross\", \"Ross & Rachel\"),\n    color = c(\"#48508c\", \"#55331d\", \"#a64d64\", \"#774f78\", \n              \"#5b7233\", \"#ba2a22\", \"#882f20\", \"#f6ab18\", \"#d86b1d\")\n  )\n\nmatch_colors\n\n# A tibble: 9 √ó 2\n  key               color  \n  <chr>             <chr>  \n1 Chandler          #48508c\n2 Joey              #55331d\n3 Monica            #a64d64\n4 Monica & Chandler #774f78\n5 Phoebe            #5b7233\n6 Rachel            #ba2a22\n7 Rachel & Joey     #882f20\n8 Ross              #f6ab18\n9 Ross & Rachel     #d86b1d"
  },
  {
    "objectID": "materials/02-text.html#styling-labels-with-ggtext-8",
    "href": "materials/02-text.html#styling-labels-with-ggtext-8",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Styling Labels with {ggtext}",
    "text": "Styling Labels with {ggtext}\n\nfriends |> \n  mutate(key = if_else(\n    !partners %in% c(\"Ross & Rachel\", \"Rachel & Joey\", \"Monica & Chandler\"),\n    word(partners, 1), partners\n  )) |> \n  left_join(\n    match_colors\n  )\n\n# A tibble: 725 √ó 7\n      id season episode key               partners          mentions color  \n   <dbl>  <dbl>   <dbl> <chr>             <chr>                <dbl> <chr>  \n 1     1      1       1 Ross & Rachel     Ross & Rachel            4 #d86b1d\n 2     1      1       1 Rachel & Joey     Rachel & Joey            1 #882f20\n 3     2      1       2 Ross & Rachel     Ross & Rachel            1 #d86b1d\n 4     2      1       2 Ross              Ross & Carol             2 #f6ab18\n 5     2      1       2 Rachel & Joey     Rachel & Joey            1 #882f20\n 6     2      1       2 Rachel            Rachel & Barry           3 #ba2a22\n 7     2      1       2 Monica & Chandler Monica & Chandler        1 #774f78\n 8     5      1       5 Ross & Rachel     Ross & Rachel            3 #d86b1d\n 9     5      1       5 Ross              Ross & Carol             1 #f6ab18\n10     5      1       5 Chandler          Chandler & Janice        2 #48508c\n# ‚Ñπ 715 more rows"
  },
  {
    "objectID": "materials/02-text.html#styling-labels-with-ggtext-9",
    "href": "materials/02-text.html#styling-labels-with-ggtext-9",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Styling Labels with {ggtext}",
    "text": "Styling Labels with {ggtext}\n\nfriends_render <- friends |> \n  mutate(key = if_else(\n    !partners %in% c(\"Ross & Rachel\", \"Rachel & Joey\", \"Monica & Chandler\"),\n    word(partners, 1), partners\n  )) |> \n  left_join(\n    match_colors\n  ) |> \n  mutate(\n    partners = if_else(\n      key %in% c(\"Ross & Rachel\", \"Rachel & Joey\", \"Monica & Chandler\"),\n      paste0(\"<b style='color:\", color, \"'>\", partners, \"</b>\"),\n      str_replace(partners, key, paste0(\"<b style='color:\", color, \"'>\", key, \"</b>\"))\n    )\n  )"
  },
  {
    "objectID": "materials/02-text.html#styling-labels-with-ggtext-10",
    "href": "materials/02-text.html#styling-labels-with-ggtext-10",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Styling Labels with {ggtext}",
    "text": "Styling Labels with {ggtext}\n\nfriends_render |> select(key, color, partners) |> unique()\n\n# A tibble: 25 √ó 3\n   key               color   partners                                      \n   <chr>             <chr>   <glue>                                        \n 1 Ross & Rachel     #d86b1d <b style='color:#d86b1d'>Ross & Rachel</b>    \n 2 Rachel & Joey     #882f20 <b style='color:#882f20'>Rachel & Joey</b>    \n 3 Ross              #f6ab18 <b style='color:#f6ab18'>Ross</b> & Carol     \n 4 Rachel            #ba2a22 <b style='color:#ba2a22'>Rachel</b> & Barry   \n 5 Monica & Chandler #774f78 <b style='color:#774f78'>Monica & Chandler</b>\n 6 Chandler          #48508c <b style='color:#48508c'>Chandler</b> & Janice\n 7 Rachel            #ba2a22 <b style='color:#ba2a22'>Rachel</b> & Paolo   \n 8 Phoebe            #5b7233 <b style='color:#5b7233'>Phoebe</b> & David   \n 9 Rachel            #ba2a22 <b style='color:#ba2a22'>Rachel</b> & Tag     \n10 Ross              #f6ab18 <b style='color:#f6ab18'>Ross</b> & Julie     \n# ‚Ñπ 15 more rows"
  },
  {
    "objectID": "materials/02-text.html#styling-labels-with-ggtext-11",
    "href": "materials/02-text.html#styling-labels-with-ggtext-11",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Styling Labels with {ggtext}",
    "text": "Styling Labels with {ggtext}\n\nggplot(friends_render,\n       aes(x = id, y = partners)) + \n  theme(axis.text.y = ggtext::element_markdown(hjust = 0))"
  },
  {
    "objectID": "materials/02-text.html#styling-labels-with-ggtext-12",
    "href": "materials/02-text.html#styling-labels-with-ggtext-12",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Styling Labels with {ggtext}",
    "text": "Styling Labels with {ggtext}\n\nggplot(friends_render,\n  aes(x = id, y = partners)) + \n  geom_point(aes(size = mentions, color = color), alpha = .3) +\n  scale_color_identity() +\n  scale_size_area(max_size = 5, guide = \"none\") +\n  coord_cartesian(expand = FALSE, clip = \"off\") +\n  labs(x = \"Episodes\", y = NULL) +\n  theme_minimal(base_family = \"Asap SemiCondensed\") +\n  theme(\n    axis.text.y = ggtext::element_markdown(hjust = 0),\n    axis.text.x = element_blank(),\n    panel.grid.major.x = element_blank(),\n    panel.grid.minor = element_blank()\n  )"
  },
  {
    "objectID": "materials/02-text.html#facet-labellers-1",
    "href": "materials/02-text.html#facet-labellers-1",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Facet Labellers",
    "text": "Facet Labellers\n\n\ng +\n  facet_wrap(\n    ~ day_night,\n    labeller = label_both\n  )"
  },
  {
    "objectID": "materials/02-text.html#facet-labellers-2",
    "href": "materials/02-text.html#facet-labellers-2",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Facet Labellers",
    "text": "Facet Labellers\n\n\ng +\n  facet_wrap(\n    ~ is_workday + day_night,\n    labeller = label_both\n  )"
  },
  {
    "objectID": "materials/02-text.html#facet-labellers-3",
    "href": "materials/02-text.html#facet-labellers-3",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Facet Labellers",
    "text": "Facet Labellers\n\n\ng +\n  facet_wrap(\n    ~ is_workday + day_night,\n    labeller = labeller(\n      day_night = str_to_title\n    )\n  )"
  },
  {
    "objectID": "materials/02-text.html#facet-labellers-4",
    "href": "materials/02-text.html#facet-labellers-4",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Facet Labellers",
    "text": "Facet Labellers\n\n\ncodes <- c(\n  `TRUE` = \"Workday\",\n  `FALSE` = \"Weekend or Holiday\"\n)\n\ng +\n  facet_wrap(\n    ~ is_workday + day_night,\n    labeller = labeller(\n      day_night = str_to_title,\n      is_workday = codes\n    )\n  )"
  },
  {
    "objectID": "materials/02-text.html#facet-labellers-5",
    "href": "materials/02-text.html#facet-labellers-5",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Facet Labellers",
    "text": "Facet Labellers\n\n\ncodes <- c(\n  `TRUE` = \"Workday\",\n  `FALSE` = \"Weekend or Holiday\"\n)\n\ng +\n  facet_wrap(\n    ~ is_workday + day_night,\n    labeller = labeller(\n      .default = str_to_title,\n      is_workday = codes\n    )\n  )"
  },
  {
    "objectID": "materials/02-text.html#facet-labeller",
    "href": "materials/02-text.html#facet-labeller",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Facet Labeller",
    "text": "Facet Labeller\n\n\ng +\n  facet_grid(\n    day_night ~ is_workday,\n    labeller = labeller(\n      day_night = str_to_title,\n      is_workday = codes\n    )\n  ) +\n  theme(\n    legend.position = \"top\"\n  )"
  },
  {
    "objectID": "materials/02-text.html#handling-long-labels-1",
    "href": "materials/02-text.html#handling-long-labels-1",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Handling Long Labels",
    "text": "Handling Long Labels\n\n\nggplot(\n    filter(bikes, !is.na(weather_type)),\n    aes(x = weather_type,\n        y = count)\n  ) +\n  geom_boxplot()"
  },
  {
    "objectID": "materials/02-text.html#handling-long-labels-with-stringr",
    "href": "materials/02-text.html#handling-long-labels-with-stringr",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Handling Long Labels with {stringr}",
    "text": "Handling Long Labels with {stringr}\n\n\nggplot(\n    filter(bikes, !is.na(weather_type)),\n    aes(x = weather_type,\n        y = count)\n  ) +\n  geom_boxplot() +\n  scale_x_discrete(\n    guide = guide_axis(\n      n.dodge = 2\n    )\n  )"
  },
  {
    "objectID": "materials/02-text.html#handling-long-labels-with-stringr-1",
    "href": "materials/02-text.html#handling-long-labels-with-stringr-1",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Handling Long Labels with {stringr}",
    "text": "Handling Long Labels with {stringr}\n\n\nggplot(\n    filter(bikes, !is.na(weather_type)),\n    aes(x = str_wrap(weather_type, 6),\n        y = count)\n  ) +\n  geom_boxplot()"
  },
  {
    "objectID": "materials/02-text.html#handling-long-titles",
    "href": "materials/02-text.html#handling-long-titles",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Handling Long Titles",
    "text": "Handling Long Titles\n\n\ng + \n  ggtitle(\"TfL bike sharing trends in 2015 and 2016 by season for day and night periods\") +\n  theme(\n    plot.title = element_text(size = 20),\n    plot.title.position = \"plot\"\n  )"
  },
  {
    "objectID": "materials/02-text.html#handling-long-titles-with",
    "href": "materials/02-text.html#handling-long-titles-with",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Handling Long Titles with ",
    "text": "Handling Long Titles with \n\n\ng + \n  ggtitle(\"TfL bike sharing trends in 2015 and 2016\\nby season for day and night periods\") +\n  theme(\n    plot.title = element_text(size = 20),\n    plot.title.position = \"plot\"\n  )\n\n\n\n\n\n\nTfL bike sharing trends in 2015 and 2016\\nby season for day and night periods"
  },
  {
    "objectID": "materials/02-text.html#handling-long-titles-with-ggtext",
    "href": "materials/02-text.html#handling-long-titles-with-ggtext",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Handling Long Titles with {ggtext}",
    "text": "Handling Long Titles with {ggtext}\n\n\ng +\n  ggtitle(\"TfL bike sharing trends in 2015 and 2016 by season for day and night periods\") +\n  theme(\n    plot.title =\n      ggtext::element_textbox_simple(size = 20),\n    plot.title.position = \"plot\"\n  )"
  },
  {
    "objectID": "materials/02-text.html#handling-long-titles-with-ggtext-1",
    "href": "materials/02-text.html#handling-long-titles-with-ggtext-1",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Handling Long Titles with {ggtext}",
    "text": "Handling Long Titles with {ggtext}\n\n\ng +\n  ggtitle(\"TfL bike sharing trends in 2015 and 2016 by season for day and night periods\") +\n  theme(\n    plot.title = ggtext::element_textbox_simple(\n      margin = margin(t = 12, b = 12),\n      lineheight = .9\n    ),\n    plot.title.position = \"plot\"\n  )"
  },
  {
    "objectID": "materials/02-text.html#handling-long-titles-with-ggtext-2",
    "href": "materials/02-text.html#handling-long-titles-with-ggtext-2",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Handling Long Titles with {ggtext}",
    "text": "Handling Long Titles with {ggtext}\n\n\ng +\n  ggtitle(\"TfL bike sharing trends in 2015 and 2016 by season for day and night periods\") +\n  theme(\n    plot.title = ggtext::element_textbox_simple(\n      margin = margin(t = 12, b = 12),\n      fill = \"grey90\",\n      lineheight = .9\n    ),\n    plot.title.position = \"plot\"\n  )"
  },
  {
    "objectID": "materials/02-text.html#handling-long-titles-with-ggtext-3",
    "href": "materials/02-text.html#handling-long-titles-with-ggtext-3",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Handling Long Titles with {ggtext}",
    "text": "Handling Long Titles with {ggtext}\n\n\ng +\n  ggtitle(\"TfL bike sharing trends in 2015 and 2016 by season for day and night periods\") +\n  theme(\n    plot.title = ggtext::element_textbox_simple(\n      margin = margin(t = 12, b = 12),\n      padding = margin(rep(12, 4)),\n      fill = \"grey90\",\n      box.color = \"grey40\",\n      r = unit(9, \"pt\"),\n      halign = .5,\n      face = \"bold\",\n      lineheight = .9\n    ),\n    plot.title.position = \"plot\"\n  )"
  },
  {
    "objectID": "materials/02-text.html#add-single-text-annotations",
    "href": "materials/02-text.html#add-single-text-annotations",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Add Single Text Annotations",
    "text": "Add Single Text Annotations\n\n\nga <- \n  ggplot(bikes, \n         aes(x = temp, y = count)) +\n  geom_point(\n    aes(color = count > 40000),\n    size = 2\n  ) +\n  scale_color_manual(\n    values = c(\"grey\", \"firebrick\"),\n    guide = \"none\"\n  )\n\nga"
  },
  {
    "objectID": "materials/02-text.html#add-single-text-annotations-1",
    "href": "materials/02-text.html#add-single-text-annotations-1",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Add Single Text Annotations",
    "text": "Add Single Text Annotations\n\n\nga +\n  annotate(\n    geom = \"text\",\n    x = 18,\n    y = 48000,\n    label = \"What happened here?\"\n  )"
  },
  {
    "objectID": "materials/02-text.html#style-text-annotations",
    "href": "materials/02-text.html#style-text-annotations",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Style Text Annotations",
    "text": "Style Text Annotations\n\n\nga +\n  annotate(\n    geom = \"text\",\n    x = 18,\n    y = 48000,\n    label = \"What happened here?\",\n    color = \"firebrick\",\n    size = 6,\n    family = \"Asap SemiCondensed\",\n    fontface = \"bold\",\n    lineheight =  .8\n  )"
  },
  {
    "objectID": "materials/02-text.html#add-multiple-text-annotations",
    "href": "materials/02-text.html#add-multiple-text-annotations",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Add Multiple Text Annotations",
    "text": "Add Multiple Text Annotations\n\n\nga +\n  annotate(\n    geom = \"text\",\n    x = c(18, max(bikes$temp)),\n    y = c(48000, 1000),\n    label = c(\"What happened here?\", \"Powered by TfL\"),\n    color = c(\"firebrick\", \"black\"),\n    size = c(6, 3),\n    family = c(\"Asap SemiCondensed\", \"Hepta Slab\"),\n    fontface = c(\"bold\", \"plain\"),\n    hjust = c(.5, 1)\n  )"
  },
  {
    "objectID": "materials/02-text.html#pointnclick-annotations",
    "href": "materials/02-text.html#pointnclick-annotations",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "‚ÄúPoint‚Äôn‚ÄôClick‚Äù Annotations",
    "text": "‚ÄúPoint‚Äôn‚ÄôClick‚Äù Annotations\n\nggannotate::ggannotate(g)"
  },
  {
    "objectID": "materials/02-text.html#add-boxes",
    "href": "materials/02-text.html#add-boxes",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Add Boxes",
    "text": "Add Boxes\n\n\nga + \n  annotate(\n    geom = \"text\",\n    x = 19.5,\n    y = 42000,\n    label = \"What happened here?\",\n    family = \"Asap SemiCondensed\",\n    size = 6,\n    vjust = 1.3\n  ) +\n  annotate(\n    geom = \"rect\",\n    xmin = 17, \n    xmax = 22,\n    ymin = 42000, \n    ymax = 54000,\n    color = \"firebrick\", \n    fill = NA\n  )"
  },
  {
    "objectID": "materials/02-text.html#add-lines",
    "href": "materials/02-text.html#add-lines",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Add Lines",
    "text": "Add Lines\n\n\nga +\n  annotate(\n    geom = \"text\",\n    x = 10,\n    y = 38000,\n    label = \"The\\nhighest\\ncount\",\n    family = \"Asap SemiCondensed\",\n    size = 6,\n    lineheight =  .8\n  ) +\n  annotate(\n    geom = \"segment\",\n    x = 13, \n    xend = 18.2,\n    y = 38000, \n    yend = 51870\n  )"
  },
  {
    "objectID": "materials/02-text.html#add-lines-1",
    "href": "materials/02-text.html#add-lines-1",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Add Lines",
    "text": "Add Lines\n\n\nga +\n  annotate(\n    geom = \"text\",\n    x = 10,\n    y = 38000,\n    label = \"The\\nhighest\\ncount\",\n    family = \"Asap SemiCondensed\",\n    size = 6,\n    lineheight =  .8\n  ) +\n  annotate(\n    geom = \"curve\",\n    x = 13, \n    xend = 18.2,\n    y = 38000, \n    yend = 51870\n  )"
  },
  {
    "objectID": "materials/02-text.html#add-arrows",
    "href": "materials/02-text.html#add-arrows",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Add Arrows",
    "text": "Add Arrows\n\n\nga +\n  annotate(\n    geom = \"text\",\n    x = 10,\n    y = 38000,\n    label = \"The\\nhighest\\ncount\",\n    family = \"Asap SemiCondensed\",\n    size = 6,\n    lineheight =  .8\n  ) +\n  annotate(\n    geom = \"curve\",\n    x = 13, \n    xend = 18.2,\n    y = 38000, \n    yend = 51870,\n    curvature = .25,\n    arrow = arrow()\n  )"
  },
  {
    "objectID": "materials/02-text.html#add-arrows-1",
    "href": "materials/02-text.html#add-arrows-1",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Add Arrows",
    "text": "Add Arrows\n\n\nga +\n  annotate(\n    geom = \"text\",\n    x = 10,\n    y = 38000,\n    label = \"The\\nhighest\\ncount\",\n    family = \"Asap SemiCondensed\",\n    size = 6,\n    lineheight =  .8\n  ) +\n  annotate(\n    geom = \"curve\",\n    x = 13, \n    xend = 18.2,\n    y = 38000, \n    yend = 51870,\n    curvature = .25,\n    arrow = arrow(\n      length = unit(10, \"pt\"),\n      type = \"closed\",\n      ends = \"both\"\n    )\n  )"
  },
  {
    "objectID": "materials/02-text.html#add-arrows-2",
    "href": "materials/02-text.html#add-arrows-2",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Add Arrows",
    "text": "Add Arrows\n\n\nga +\n  annotate(\n    geom = \"text\",\n    x = 10,\n    y = 38000,\n    label = \"The\\nhighest\\ncount\",\n    family = \"Asap SemiCondensed\",\n    size = 6,\n    lineheight =  .8\n  ) +\n  annotate(\n    geom = \"curve\",\n    x = 13, \n    xend = 18.2,\n    y = 38000, \n    yend = 51870,\n    curvature = .8,\n    angle = 130,\n    arrow = arrow(\n      length = unit(10, \"pt\"),\n      type = \"closed\"\n    )\n  )"
  },
  {
    "objectID": "materials/02-text.html#highlight-hot-days",
    "href": "materials/02-text.html#highlight-hot-days",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Highlight Hot Days",
    "text": "Highlight Hot Days\n\n\ngh <- \n  ggplot(\n    data = filter(bikes, temp >= 27),\n    aes(x = date, y = temp)\n  ) +\n  geom_point(\n    data = bikes,\n    color = \"grey65\", alpha = .3\n  ) +\n  geom_point(size = 2.5)\n\ngh"
  },
  {
    "objectID": "materials/02-text.html#annotations-with-geom_text",
    "href": "materials/02-text.html#annotations-with-geom_text",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Annotations with geom_text()",
    "text": "Annotations with geom_text()\n\n\ngh +\n  geom_text(\n    aes(label = format(date, \"%m/%d\")),\n    nudge_x = 10,\n    hjust = 0\n  )"
  },
  {
    "objectID": "materials/02-text.html#annotations-with-geom_label",
    "href": "materials/02-text.html#annotations-with-geom_label",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Annotations with geom_label()",
    "text": "Annotations with geom_label()\n\n\ngh +\n  geom_label(\n    aes(label = format(date, \"%m/%d\")),\n    nudge_x = .3,\n    hjust = 0\n  )"
  },
  {
    "objectID": "materials/02-text.html#annotations-with-ggrepel",
    "href": "materials/02-text.html#annotations-with-ggrepel",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Annotations with {ggrepel}",
    "text": "Annotations with {ggrepel}\n\n\ngh +\n  ggrepel::geom_text_repel(\n    aes(label = format(date, \"%m/%d\"))\n  )"
  },
  {
    "objectID": "materials/02-text.html#annotations-with-ggrepel-1",
    "href": "materials/02-text.html#annotations-with-ggrepel-1",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Annotations with {ggrepel}",
    "text": "Annotations with {ggrepel}\n\n\ngh + \n  ggrepel::geom_text_repel(\n    aes(label = format(date, \"%m/%d\")),\n    family = \"Spline Sans Mono\",\n    size = 4.5,\n    fontface = \"bold\"\n  )"
  },
  {
    "objectID": "materials/02-text.html#annotations-with-ggrepel-2",
    "href": "materials/02-text.html#annotations-with-ggrepel-2",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Annotations with {ggrepel}",
    "text": "Annotations with {ggrepel}\n\n\ngh +\n  ggrepel::geom_text_repel(\n    aes(label = format(date, \"%m/%d\")),\n    family = \"Spline Sans Mono\",\n    # space between points + labels\n    box.padding = .8,\n    # always draw segments\n    min.segment.length = 0\n  )"
  },
  {
    "objectID": "materials/02-text.html#annotations-with-ggrepel-3",
    "href": "materials/02-text.html#annotations-with-ggrepel-3",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Annotations with {ggrepel}",
    "text": "Annotations with {ggrepel}\n\n\ngh +\n  ggrepel::geom_text_repel(\n    aes(label = format(date, \"%y/%m/%d\")),\n    family = \"Spline Sans Mono\",\n    # force to the right\n    xlim = c(NA, as.Date(\"2015-06-01\")), \n    hjust = 1\n  )"
  },
  {
    "objectID": "materials/02-text.html#annotations-with-ggrepel-4",
    "href": "materials/02-text.html#annotations-with-ggrepel-4",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Annotations with {ggrepel}",
    "text": "Annotations with {ggrepel}\n\n\ngh +\n  ggrepel::geom_text_repel(\n    aes(label = format(date, \"%y/%m/%d\")),\n    family = \"Spline Sans Mono\",\n    xlim = c(NA, as.Date(\"2015-06-01\")),\n    # style segment\n    segment.curvature = .01,\n    arrow = arrow(length = unit(.02, \"npc\"), type = \"closed\")\n  )"
  },
  {
    "objectID": "materials/02-text.html#annotations-with-ggrepel-5",
    "href": "materials/02-text.html#annotations-with-ggrepel-5",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Annotations with {ggrepel}",
    "text": "Annotations with {ggrepel}\n\n\ngh +\n  ggrepel::geom_text_repel(\n    aes(label = format(date, \"%y/%m/%d\")),\n    family = \"Spline Sans Mono\",\n    xlim = c(NA, as.Date(\"2015-06-01\")),\n    # style segment\n    segment.curvature = .001,\n    segment.inflect = TRUE\n  )"
  },
  {
    "objectID": "materials/02-text.html#annotations-with-ggforce",
    "href": "materials/02-text.html#annotations-with-ggforce",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Annotations with {ggforce}",
    "text": "Annotations with {ggforce}\n\n\ng +\n  ggforce::geom_mark_rect(\n    aes(label = \"Outliers?\",\n        filter = count > 40000)\n  )"
  },
  {
    "objectID": "materials/02-text.html#annotations-with-ggforce-1",
    "href": "materials/02-text.html#annotations-with-ggforce-1",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Annotations with {ggforce}",
    "text": "Annotations with {ggforce}\n\n\ng +\n  ggforce::geom_mark_rect(\n    aes(label = \"Outliers?\",\n        filter = count > 40000),\n    color = \"black\",\n    family = \"Asap SemiCondensed\"\n  )"
  },
  {
    "objectID": "materials/02-text.html#annotations-with-ggforce-2",
    "href": "materials/02-text.html#annotations-with-ggforce-2",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Annotations with {ggforce}",
    "text": "Annotations with {ggforce}\n\n\ng +\n  ggforce::geom_mark_rect(\n    aes(label = \"Outliers?\",\n        filter = count > 40000),\n    description = \"What happened on\\nthese two days?\",\n    color = \"black\",\n    label.family = \"Asap SemiCondensed\"\n  )"
  },
  {
    "objectID": "materials/02-text.html#annotations-with-ggforce-3",
    "href": "materials/02-text.html#annotations-with-ggforce-3",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Annotations with {ggforce}",
    "text": "Annotations with {ggforce}\n\n\ng +\n  ggforce::geom_mark_rect(\n    aes(label = \"Outliers?\",\n        filter = count > 40000),\n    description = \"What happened on\\nthese two days?\",\n    color = \"black\",\n    label.family = \"Asap SemiCondensed\",\n    expand = unit(8, \"pt\"),\n    radius = unit(12, \"pt\"),\n    con.cap = unit(0, \"pt\"),\n    label.buffer = unit(15, \"pt\"),\n    con.type = \"straight\",\n    label.fill = \"transparent\"\n  )"
  },
  {
    "objectID": "materials/02-text.html#annotations-with-ggforce-4",
    "href": "materials/02-text.html#annotations-with-ggforce-4",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Annotations with {ggforce}",
    "text": "Annotations with {ggforce}\n\n\ng +\n  ggforce::geom_mark_circle(\n    aes(label = \"Outliers?\",\n        filter = count > 40000),\n    description = \"What happened on\\nthese two days?\",\n    color = \"black\",\n    label.family = \"Asap SemiCondensed\",\n    expand = unit(8, \"pt\"),\n    con.cap = unit(0, \"pt\"),\n    label.buffer = unit(15, \"pt\"),\n    con.type = \"straight\",\n    label.fill = \"transparent\"\n  )"
  },
  {
    "objectID": "materials/02-text.html#annotations-with-ggforce-5",
    "href": "materials/02-text.html#annotations-with-ggforce-5",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Annotations with {ggforce}",
    "text": "Annotations with {ggforce}\n\n\ng +\n  ggforce::geom_mark_hull(\n    aes(label = \"Outliers?\",\n        filter = count > 40000),\n    description = \"What happened on\\nthese two days?\",\n    color = \"black\",\n    label.family = \"Asap SemiCondensed\",\n    expand = unit(8, \"pt\"),\n    con.cap = unit(0, \"pt\"),\n    label.buffer = unit(15, \"pt\"),\n    con.type = \"straight\",\n    label.fill = \"transparent\"\n  )"
  },
  {
    "objectID": "materials/02-text.html#annotations-with-geomtextpath",
    "href": "materials/02-text.html#annotations-with-geomtextpath",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Annotations with {geomtextpath}",
    "text": "Annotations with {geomtextpath}\n\n\nbikes |>\n  filter(year == \"2016\") |>\n  group_by(month, day_night) |> \n  summarize(count = sum(count)) |> \n  ggplot(aes(x = month, y = count, \n             color = day_night,\n             group = day_night)) +\n  geom_line(linewidth = 1) +\n  coord_cartesian(expand = FALSE) +\n  scale_y_continuous(\n    labels = scales::label_comma(\n      scale = 1/10^3, suffix = \"K\"\n    ),\n    limits = c(0, 850000)\n  ) +\n  scale_color_manual(\n    values = c(\"#FFA200\", \"#757BC7\"),\n    name = NULL\n  )"
  },
  {
    "objectID": "materials/02-text.html#annotations-with-geomtextpath-1",
    "href": "materials/02-text.html#annotations-with-geomtextpath-1",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Annotations with {geomtextpath}",
    "text": "Annotations with {geomtextpath}\n\n\nbikes |>\n  filter(year == \"2016\") |>\n  group_by(month, day_night) |> \n  summarize(count = sum(count)) |> \n  ggplot(aes(x = month, y = count, \n             color = day_night,\n             group = day_night)) +\n  geomtextpath::geom_textline(\n    aes(label = day_night),\n    linewidth = 1,\n    vjust = -.5, \n    family = \"Asap SemiCondensed\",\n    fontface = \"bold\"\n  ) +\n  coord_cartesian(expand = FALSE) +\n  scale_y_continuous(\n    labels = scales::label_comma(\n      scale = 1/10^3, suffix = \"K\"\n    ),\n    limits = c(0, 850000)\n  ) +\n  scale_color_manual(\n    values = c(\"#FFA200\", \"#757BC7\"),\n    guide = \"none\"\n  )"
  },
  {
    "objectID": "materials/02-text.html#annotations-with-geomtextpath-2",
    "href": "materials/02-text.html#annotations-with-geomtextpath-2",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Annotations with {geomtextpath}",
    "text": "Annotations with {geomtextpath}\n\n\nbikes |>\n  filter(year == \"2016\") |>\n  group_by(month, day_night) |> \n  summarize(count = sum(count)) |> \n  mutate(day_night = if_else(\n    day_night == \"day\", \n    \"Day period (6am-6pm)\", \n    \"Night period (6pm-6am)\"\n  )) |> \n  ggplot(aes(x = month, y = count, \n             color = day_night,\n             group = day_night)) +\n  geomtextpath::geom_textline(\n    aes(label = day_night),\n    linewidth = 1,\n    vjust = -.5, \n    hjust = .05,\n    family = \"Asap SemiCondensed\",\n    fontface = \"bold\"\n  ) +\n  coord_cartesian(expand = FALSE) +\n  scale_y_continuous(\n    labels = scales::label_comma(\n      scale = 1/10^3, suffix = \"K\"\n    ),\n    limits = c(0, 850000)\n  ) +\n  scale_color_manual(\n    values = c(\"#FFA200\", \"#757BC7\"),\n    guide = \"none\"\n  )"
  },
  {
    "objectID": "materials/02-text.html#line-chart-with-stat_summary",
    "href": "materials/02-text.html#line-chart-with-stat_summary",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Line Chart with stat_summary()",
    "text": "Line Chart with stat_summary()\n\n\nbikes |>\n  filter(year == \"2016\") |>\n  ggplot(aes(x = month, y = count, \n             color = day_night,\n             group = day_night)) +\n  stat_summary(\n    geom = \"line\", fun = sum,\n    linewidth = 1\n  ) +\n  coord_cartesian(expand = FALSE) +\n  scale_y_continuous(\n    labels = scales::label_comma(\n      scale = 1/10^3, suffix = \"K\"\n    ),\n    limits = c(0, 850000)\n  ) +\n  scale_color_manual(\n    values = c(\"#FFA200\", \"#757BC7\"),\n    name = NULL\n  )"
  },
  {
    "objectID": "materials/02-text.html#line-chart-with-stat_summary-1",
    "href": "materials/02-text.html#line-chart-with-stat_summary-1",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Line Chart with stat_summary()",
    "text": "Line Chart with stat_summary()\n\n\nbikes |>\n  filter(year == \"2016\") |>\n  ggplot(aes(x = month, y = count, \n             color = day_night,\n             group = day_night)) +\n  stat_summary(\n    geom = \"line\", fun = sum,\n    linewidth = 1\n  ) +\n  geomtextpath::geom_textline(\n    aes(label = day_night), \n    stat = \"summary\" # fails\n  ) +\n  coord_cartesian(expand = FALSE) +\n  scale_y_continuous(\n    labels = scales::label_comma(\n      scale = 1/10^3, suffix = \"K\"\n    ),\n    limits = c(0, 850000)\n  ) +\n  scale_color_manual(\n    values = c(\"#FFA200\", \"#757BC7\"),\n    name = NULL\n  )"
  },
  {
    "objectID": "materials/02-text.html#recap",
    "href": "materials/02-text.html#recap",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Recap",
    "text": "Recap\n\n\n\nstyle labels such as title, axis and legend texts with theme()\nformat data-related labels with the labels argument of scale_*()\nadjust strip text with the facet_*(labeller) functionality\nadd data-related annotations with geom_text|label()\n‚Ä¶ and data-unrelated annotations with annotate()\n{ggtext} allows to render labels with markdown and basic html\n{ggtext} also allows to add dynamic linebreaks and images\n{ggrepel} ensures clever placement of annotations\nggforce::geom_mark_*() provide a set of advanced annotations"
  },
  {
    "objectID": "materials/02-text.html#exercise-1",
    "href": "materials/02-text.html#exercise-1",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Exercise 1",
    "text": "Exercise 1\n\n\nTake a look at the following visualization.\n\nFor each group of text labels, note how one would add and modify them.\nDiscuss how to automate the placement of the labels in- and outside of the bars."
  },
  {
    "objectID": "materials/02-text.html#exercise-2",
    "href": "materials/02-text.html#exercise-2",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Exercise 2",
    "text": "Exercise 2\n\n\nCreate a function that plots the famous Gapminder chart, highlighting one of the continents.\n\nExtend the code in 02-text-exercises.qmd to annotate a continent your choice of with {ggforce}.\nTurn the code into a function with the utility to annotate any continent.\nOptional: Create a second function to highlight a country."
  },
  {
    "objectID": "materials/02-text.html#section",
    "href": "materials/02-text.html#section",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "",
    "text": "C√©dric Scherer // posit::conf(2023)"
  },
  {
    "objectID": "materials/03-colors.html#setup",
    "href": "materials/03-colors.html#setup",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Setup",
    "text": "Setup\n\nlibrary(ggplot2)\nlibrary(dplyr)\n\nbikes <- readr::read_csv(\n  here::here(\"data\", \"london-bikes-custom.csv\"), \n  col_types = \"Dcfffilllddddc\"\n)\n\ntheme_set(theme_light(base_size = 14, base_family = \"Asap SemiCondensed\"))\n\ntheme_update(\n  panel.grid.minor = element_blank(),\n  plot.title = element_text(face = \"bold\"),\n  plot.title.position = \"plot\"\n)"
  },
  {
    "objectID": "materials/03-colors.html#default-color-palettes-categorical",
    "href": "materials/03-colors.html#default-color-palettes-categorical",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Default Color Palettes: Categorical",
    "text": "Default Color Palettes: Categorical\n\n\nggplot(bikes, \n       aes(x = day_night, y = count, \n           fill = season)) +\n  geom_boxplot()"
  },
  {
    "objectID": "materials/03-colors.html#default-color-palettes-sequential",
    "href": "materials/03-colors.html#default-color-palettes-sequential",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Default Color Palettes: Sequential",
    "text": "Default Color Palettes: Sequential\n\n\nggplot(filter(bikes, is_weekend == TRUE),\n       aes(x = temp_feel, y = count, \n           color = humidity)) +\n  geom_point(alpha = .7)"
  },
  {
    "objectID": "materials/03-colors.html#the-viridis-color-palettes",
    "href": "materials/03-colors.html#the-viridis-color-palettes",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "The Viridis Color Palettes",
    "text": "The Viridis Color Palettes\n\nNu√±ez, Anderton & Renslow (2018), PloS One 13:e0199239. DOI: 10.1371/journal.pone.0199239"
  },
  {
    "objectID": "materials/03-colors.html#the-viridis-color-palettes-1",
    "href": "materials/03-colors.html#the-viridis-color-palettes-1",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "The Viridis Color Palettes",
    "text": "The Viridis Color Palettes\n\nPalette comparison of commonly used sequential color palettes in R from the {viridis} vignette"
  },
  {
    "objectID": "materials/03-colors.html#the-viridis-color-palettes-2",
    "href": "materials/03-colors.html#the-viridis-color-palettes-2",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "The Viridis Color Palettes",
    "text": "The Viridis Color Palettes\n\nPalette comparison, as seen by a person with Deuteranopia, from the {viridis} vignette"
  },
  {
    "objectID": "materials/03-colors.html#pre-defined-color-palettes-viridis",
    "href": "materials/03-colors.html#pre-defined-color-palettes-viridis",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Pre-Defined Color Palettes: Viridis",
    "text": "Pre-Defined Color Palettes: Viridis\n\n\nggplot(bikes, \n       aes(x = day_night, y = count, \n           fill = season)) +\n  geom_boxplot() +\n  scale_fill_viridis_d()"
  },
  {
    "objectID": "materials/03-colors.html#pre-defined-color-palettes-viridis-1",
    "href": "materials/03-colors.html#pre-defined-color-palettes-viridis-1",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Pre-Defined Color Palettes: Viridis",
    "text": "Pre-Defined Color Palettes: Viridis\n\n\nggplot(bikes, \n       aes(x = day_night, y = count, \n           fill = season)) +\n  geom_boxplot() +\n  scale_fill_viridis_d(\n    begin = .3,\n    end = .9\n  )"
  },
  {
    "objectID": "materials/03-colors.html#pre-defined-color-palettes-viridis-2",
    "href": "materials/03-colors.html#pre-defined-color-palettes-viridis-2",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Pre-Defined Color Palettes: Viridis",
    "text": "Pre-Defined Color Palettes: Viridis\n\n\nggplot(filter(bikes, is_weekend == TRUE),\n       aes(x = temp, y = count, \n           color = humidity)) +\n  geom_point(alpha = .7) +\n  scale_color_viridis_c()"
  },
  {
    "objectID": "materials/03-colors.html#pre-defined-color-palettes-viridis-3",
    "href": "materials/03-colors.html#pre-defined-color-palettes-viridis-3",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Pre-Defined Color Palettes: Viridis",
    "text": "Pre-Defined Color Palettes: Viridis\n\n\nggplot(filter(bikes, is_weekend == TRUE),\n       aes(x = temp, y = count, \n           color = humidity)) +\n  geom_point(alpha = .7) +\n  scale_color_viridis_c(\n    option = \"cividis\"\n  )"
  },
  {
    "objectID": "materials/03-colors.html#pre-defined-color-palettes-viridis-4",
    "href": "materials/03-colors.html#pre-defined-color-palettes-viridis-4",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Pre-Defined Color Palettes: Viridis",
    "text": "Pre-Defined Color Palettes: Viridis\n\n\nggplot(filter(bikes, is_weekend == TRUE),\n       aes(x = temp, y = count, \n           color = humidity)) +\n  geom_point(alpha = .7) +\n  scale_color_viridis_c(\n    option = \"cividis\",\n    end = .95,\n    direction = -1\n  )"
  },
  {
    "objectID": "materials/03-colors.html#pre-defined-color-palettes-colorbrewer",
    "href": "materials/03-colors.html#pre-defined-color-palettes-colorbrewer",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Pre-Defined Color Palettes: ColorBrewer",
    "text": "Pre-Defined Color Palettes: ColorBrewer\n\nThe ColorBrewer project: colorbrewer2.org"
  },
  {
    "objectID": "materials/03-colors.html#pre-defined-color-palettes-colorbrewer-1",
    "href": "materials/03-colors.html#pre-defined-color-palettes-colorbrewer-1",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Pre-Defined Color Palettes: ColorBrewer",
    "text": "Pre-Defined Color Palettes: ColorBrewer\n\n\nggplot(bikes, \n       aes(x = day_night, y = count, \n           fill = season)) +\n  geom_boxplot() +\n  scale_fill_brewer()"
  },
  {
    "objectID": "materials/03-colors.html#pre-defined-color-palettes-colorbrewer-2",
    "href": "materials/03-colors.html#pre-defined-color-palettes-colorbrewer-2",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Pre-Defined Color Palettes: ColorBrewer",
    "text": "Pre-Defined Color Palettes: ColorBrewer\n\n\nggplot(filter(bikes, is_weekend == TRUE),\n       aes(x = temp, y = count, \n           color = humidity)) +\n  geom_point(alpha = .7) +\n  scale_color_distiller()"
  },
  {
    "objectID": "materials/03-colors.html#pre-defined-color-palettes-colorbrewer-3",
    "href": "materials/03-colors.html#pre-defined-color-palettes-colorbrewer-3",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Pre-Defined Color Palettes: ColorBrewer",
    "text": "Pre-Defined Color Palettes: ColorBrewer\n\nRColorBrewer::display.brewer.all()"
  },
  {
    "objectID": "materials/03-colors.html#pre-defined-color-palettes-colorbrewer-4",
    "href": "materials/03-colors.html#pre-defined-color-palettes-colorbrewer-4",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Pre-Defined Color Palettes: ColorBrewer",
    "text": "Pre-Defined Color Palettes: ColorBrewer\n\nRColorBrewer::display.brewer.all(colorblindFriendly = TRUE)"
  },
  {
    "objectID": "materials/03-colors.html#pre-defined-color-palettes-colorbrewer-5",
    "href": "materials/03-colors.html#pre-defined-color-palettes-colorbrewer-5",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Pre-Defined Color Palettes: ColorBrewer",
    "text": "Pre-Defined Color Palettes: ColorBrewer\n\n\nggplot(bikes, \n       aes(x = day_night, y = count, \n           fill = season)) +\n  geom_boxplot() +\n  scale_fill_brewer(\n    palette = \"Set1\"\n  )"
  },
  {
    "objectID": "materials/03-colors.html#pre-defined-color-palettes-colorbrewer-6",
    "href": "materials/03-colors.html#pre-defined-color-palettes-colorbrewer-6",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Pre-Defined Color Palettes: ColorBrewer",
    "text": "Pre-Defined Color Palettes: ColorBrewer\n\n\nggplot(filter(bikes, is_weekend == TRUE),\n       aes(x = temp, y = count, \n           color = humidity)) +\n  geom_point(alpha = .7) +\n  scale_color_distiller(\n    palette = \"YlOrRd\",\n    direction = 1\n  )"
  },
  {
    "objectID": "materials/03-colors.html#rcartocolor",
    "href": "materials/03-colors.html#rcartocolor",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "{rcartocolor}",
    "text": "{rcartocolor}\n\n\nggplot(bikes, \n       aes(x = day_night, y = count, \n           fill = season)) +\n  geom_boxplot() +\n  rcartocolor::scale_fill_carto_d()"
  },
  {
    "objectID": "materials/03-colors.html#rcartocolor-1",
    "href": "materials/03-colors.html#rcartocolor-1",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "{rcartocolor}",
    "text": "{rcartocolor}\n\nrcartocolor::display_carto_all()"
  },
  {
    "objectID": "materials/03-colors.html#rcartocolor-2",
    "href": "materials/03-colors.html#rcartocolor-2",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "{rcartocolor}",
    "text": "{rcartocolor}\n\nrcartocolor::display_carto_all(colorblind_friendly = TRUE)"
  },
  {
    "objectID": "materials/03-colors.html#rcartocolor-3",
    "href": "materials/03-colors.html#rcartocolor-3",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "{rcartocolor}",
    "text": "{rcartocolor}\n\n\nggplot(bikes, \n       aes(x = day_night, y = count, \n           fill = season)) +\n  geom_boxplot() +\n  rcartocolor::scale_fill_carto_d(\n    palette = \"Safe\"\n  )"
  },
  {
    "objectID": "materials/03-colors.html#scico",
    "href": "materials/03-colors.html#scico",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "{scico}",
    "text": "{scico}\n\n\nggplot(filter(bikes, is_weekend == TRUE),\n       aes(x = temp, y = count, \n           color = humidity)) +\n  geom_point(alpha = .7) +\n  scico::scale_color_scico()"
  },
  {
    "objectID": "materials/03-colors.html#scico-1",
    "href": "materials/03-colors.html#scico-1",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "{scico}",
    "text": "{scico}\n\nscico::scico_palette_show()"
  },
  {
    "objectID": "materials/03-colors.html#scico-2",
    "href": "materials/03-colors.html#scico-2",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "{scico}",
    "text": "{scico}\n\n\nggplot(filter(bikes, is_weekend == TRUE),\n       aes(x = temp, y = count, \n           color = humidity)) +\n  geom_point(alpha = .7) +\n  scico::scale_color_scico(\n    palette = \"brocO\",\n    direction = -1\n  )"
  },
  {
    "objectID": "materials/03-colors.html#ggsci-and-ggthemes",
    "href": "materials/03-colors.html#ggsci-and-ggthemes",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "{ggsci} and {ggthemes}",
    "text": "{ggsci} and {ggthemes}\n\n\n\nggplot(bikes, \n       aes(x = day_night, y = count, \n           fill = season)) +\n  geom_boxplot() +\n  ggsci::scale_fill_npg()\n\n\n\n\n\nggplot(bikes, \n       aes(x = day_night, y = count, \n           fill = season)) +\n  geom_boxplot() +\n  ggthemes::scale_fill_gdocs()"
  },
  {
    "objectID": "materials/03-colors.html#metbrewer",
    "href": "materials/03-colors.html#metbrewer",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "{MetBrewer}",
    "text": "{MetBrewer}\n\n\nggplot(bikes, \n       aes(x = day_night, y = count, \n           fill = season)) +\n  geom_boxplot() +\n  MetBrewer::scale_fill_met_d(\n    name = \"Klimt\"\n  )"
  },
  {
    "objectID": "materials/03-colors.html#metbrewer-1",
    "href": "materials/03-colors.html#metbrewer-1",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "{MetBrewer}",
    "text": "{MetBrewer}\n\nMetBrewer::display_all()"
  },
  {
    "objectID": "materials/03-colors.html#metbrewer-2",
    "href": "materials/03-colors.html#metbrewer-2",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "{MetBrewer}",
    "text": "{MetBrewer}\n\nMetBrewer::display_all(colorblind_only = TRUE)"
  },
  {
    "objectID": "materials/03-colors.html#metbrewer-3",
    "href": "materials/03-colors.html#metbrewer-3",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "{MetBrewer}",
    "text": "{MetBrewer}\n\n\nggplot(filter(bikes, is_weekend == TRUE),\n       aes(x = temp, y = count, \n           color = humidity)) +\n  geom_point(alpha = .7) +\n  MetBrewer::scale_color_met_c(\n    name = \"Hiroshige\" \n  )"
  },
  {
    "objectID": "materials/03-colors.html#evaluate-hcl-spectrum",
    "href": "materials/03-colors.html#evaluate-hcl-spectrum",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Evaluate HCL Spectrum",
    "text": "Evaluate HCL Spectrum\nMore on how to evaluate color palettes: HCLwizard and colorspace.\n\n\n\ncolorspace::specplot(\n  colorspace::diverging_hcl(\n    n = 100, palette = \"Blue-Red\"\n  )\n)\n\n\n\n\n\n\ncolorspace::specplot(\n  MetBrewer::met.brewer(\n     n = 100, name = \"Hiroshige\"\n  )\n)"
  },
  {
    "objectID": "materials/03-colors.html#evaluate-hcl-spectrum-1",
    "href": "materials/03-colors.html#evaluate-hcl-spectrum-1",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Evaluate HCL Spectrum",
    "text": "Evaluate HCL Spectrum\nMore on how to evaluate color palettes: HCLwizard and colorspace.\n\n\n\ncolorspace::specplot(\n  MetBrewer::met.brewer(\n     n = 100, name = \"Cassatt2\"\n  )\n)\n\n\n\n\n\n\ncolorspace::specplot(\n  MetBrewer::met.brewer(\n     n = 100, name = \"Veronese\"\n  )\n)"
  },
  {
    "objectID": "materials/03-colors.html#evaluate-hcl-spectrum-2",
    "href": "materials/03-colors.html#evaluate-hcl-spectrum-2",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Evaluate HCL Spectrum",
    "text": "Evaluate HCL Spectrum\nMore on how to evaluate color palettes: HCLwizard and colorspace.\n\n\n\ncolorspace::specplot(\n  viridis::viridis(\n    n = 100, direction = -1\n  )\n)\n\n\n\n\n\n\ncolorspace::specplot(\n  MetBrewer::met.brewer(\n     n = 100, name = \"Hokusai3\"\n  )\n)"
  },
  {
    "objectID": "materials/03-colors.html#evaluate-hcl-spectrum-3",
    "href": "materials/03-colors.html#evaluate-hcl-spectrum-3",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Evaluate HCL Spectrum",
    "text": "Evaluate HCL Spectrum\nMore on how to evaluate color palettes: HCLwizard and colorspace.\n\n\n\ncolorspace::specplot(\n  rainbow(\n    n = 100\n  )\n)\n\n\n\n\n\n\ncolorspace::specplot(\n  viridis::turbo(\n     n = 100, direction = -1\n  )\n)"
  },
  {
    "objectID": "materials/03-colors.html#customize-existing-palettes",
    "href": "materials/03-colors.html#customize-existing-palettes",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Customize Existing Palettes",
    "text": "Customize Existing Palettes\n\n\nggplot(bikes, \n       aes(x = day_night, y = count, \n           fill = season)) +\n  geom_boxplot() +\n  rcartocolor::scale_fill_carto_d(\n    palette = \"Vivid\" \n  )"
  },
  {
    "objectID": "materials/03-colors.html#customize-existing-palettes-1",
    "href": "materials/03-colors.html#customize-existing-palettes-1",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Customize Existing Palettes",
    "text": "Customize Existing Palettes\n\n\nggplot(bikes, \n       aes(x = day_night, y = count, \n           fill = season)) +\n  geom_boxplot() +\n  scale_fill_manual(\n    values = rcartocolor::carto_pal(\n      name = \"Vivid\", n = 4\n    )\n  )"
  },
  {
    "objectID": "materials/03-colors.html#customize-existing-palettes-2",
    "href": "materials/03-colors.html#customize-existing-palettes-2",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Customize Existing Palettes",
    "text": "Customize Existing Palettes\n\n\nggplot(bikes, \n       aes(x = day_night, y = count, \n           fill = season)) +\n  geom_boxplot() +\n  scale_fill_manual(\n    values = rcartocolor::carto_pal(\n      name = \"Vivid\", n = 5\n    )[1:4]\n  )"
  },
  {
    "objectID": "materials/03-colors.html#customize-existing-palettes-3",
    "href": "materials/03-colors.html#customize-existing-palettes-3",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Customize Existing Palettes",
    "text": "Customize Existing Palettes\n\n\nggplot(bikes, \n       aes(x = day_night, y = count, \n           fill = season)) +\n  geom_boxplot() +\n  scale_fill_manual(\n    values = rcartocolor::carto_pal(\n      name = \"Vivid\", n = 7\n    )[c(2, 6, 1, 3)]\n  )"
  },
  {
    "objectID": "materials/03-colors.html#customize-existing-palettes-4",
    "href": "materials/03-colors.html#customize-existing-palettes-4",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Customize Existing Palettes",
    "text": "Customize Existing Palettes\n\n\ncarto_custom <- \n  rcartocolor::carto_pal(\n    name = \"Vivid\", n = 7\n  )[c(2, 6, 1, 3)]\n\nggplot(bikes, \n       aes(x = day_night, y = count, \n           fill = season)) +\n  geom_boxplot() +\n  scale_fill_manual(\n    values = carto_custom\n  )"
  },
  {
    "objectID": "materials/03-colors.html#customize-existing-palettes-5",
    "href": "materials/03-colors.html#customize-existing-palettes-5",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Customize Existing Palettes",
    "text": "Customize Existing Palettes\n\n\nlibrary(prismatic)\n\ncarto_light <- clr_lighten(\n  carto_custom, .7\n)\n\nggplot(bikes, \n       aes(x = day_night, y = count, \n           fill = season)) +\n  geom_boxplot() +\n  scale_fill_manual(\n    values = carto_light\n  )"
  },
  {
    "objectID": "materials/03-colors.html#customize-existing-palettes-6",
    "href": "materials/03-colors.html#customize-existing-palettes-6",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Customize Existing Palettes",
    "text": "Customize Existing Palettes\n\n\nggplot(bikes, \n       aes(x = day_night, y = count)) +\n  geom_boxplot(\n    aes(fill = season,\n        fill = after_scale(\n          clr_lighten(fill, .7)\n    ))\n  ) +\n  scale_fill_manual(\n    values = carto_custom\n  )"
  },
  {
    "objectID": "materials/03-colors.html#customize-existing-palettes-7",
    "href": "materials/03-colors.html#customize-existing-palettes-7",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Customize Existing Palettes",
    "text": "Customize Existing Palettes\n\n\nggplot(bikes, \n       aes(x = day_night, y = count)) +\n  geom_boxplot(\n    aes(fill = stage(\n      season, \n      after_scale = clr_lighten(fill, .7)\n    ))\n  ) +\n  scale_fill_manual(\n    values = carto_custom\n  )"
  },
  {
    "objectID": "materials/03-colors.html#customize-existing-palettes-8",
    "href": "materials/03-colors.html#customize-existing-palettes-8",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Customize Existing Palettes",
    "text": "Customize Existing Palettes\n\n\nggplot(bikes, \n       aes(x = day_night, y = count)) +\n  geom_boxplot(\n    aes(color = season,\n        fill = after_scale(\n          clr_lighten(color, .7)\n    ))\n  ) +\n  scale_color_manual(\n    values = carto_custom\n  )"
  },
  {
    "objectID": "materials/03-colors.html#customize-existing-palettes-9",
    "href": "materials/03-colors.html#customize-existing-palettes-9",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Customize Existing Palettes",
    "text": "Customize Existing Palettes\n\n\nggplot(bikes,\n       aes(x = day_night, y = count)) +\n  geom_boxplot(\n    aes(color = season,\n        fill = after_scale(\n          clr_lighten(color, .7)\n    )),\n    outlier.shape = NA\n  ) +\n  geom_jitter(\n    aes(color = season,\n        color = after_scale(\n          clr_darken(color, .4)\n    )), \n    position = position_jitterdodge(\n      dodge.width = .75, \n      jitter.width = .2\n    ),\n    alpha = .3, size = .6\n  ) +\n  scale_color_manual(\n    values = carto_custom\n  ) +\n  theme(legend.position = \"top\")"
  },
  {
    "objectID": "materials/03-colors.html#create-sequential-palettes",
    "href": "materials/03-colors.html#create-sequential-palettes",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Create Sequential Palettes",
    "text": "Create Sequential Palettes\n\n\nggplot(filter(bikes, is_weekend == TRUE),\n       aes(x = temp_feel, y = count, \n           color = humidity)) +\n  geom_point(alpha = .7) +\n  scale_color_gradient(\n    low = \"#1D785A\",\n    high = \"#FFCE52\"\n  )"
  },
  {
    "objectID": "materials/03-colors.html#create-diverging-palettes",
    "href": "materials/03-colors.html#create-diverging-palettes",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Create Diverging Palettes",
    "text": "Create Diverging Palettes\n\n\nggplot(filter(bikes, is_weekend == TRUE),\n       aes(x = temp_feel, y = count, \n           color = humidity)) +\n  geom_point(alpha = .7) +\n  scale_color_gradient2(\n    low = \"#663399\",\n    high = \"#993334\",\n    mid = \"grey85\"\n  )"
  },
  {
    "objectID": "materials/03-colors.html#create-diverging-palettes-1",
    "href": "materials/03-colors.html#create-diverging-palettes-1",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Create Diverging Palettes",
    "text": "Create Diverging Palettes\n\n\nggplot(filter(bikes, is_weekend == TRUE),\n       aes(x = temp_feel, y = count, \n           color = humidity)) +\n  geom_point(alpha = .7) +\n  scale_color_gradient2(\n    low = \"#663399\",\n    high = \"#993334\",\n    mid = \"grey85\",\n    midpoint = mean(bikes$humidity)    \n  )"
  },
  {
    "objectID": "materials/03-colors.html#create-diverging-palettes-2",
    "href": "materials/03-colors.html#create-diverging-palettes-2",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Create Diverging Palettes",
    "text": "Create Diverging Palettes\n\n\nggplot(filter(bikes, is_weekend == TRUE),\n       aes(x = temp_feel, y = count, \n           color = temp)) +\n  geom_point(alpha = .7) +\n  scale_color_gradient2(\n    low = \"#663399\",\n    high = \"#993334\",\n    mid = \"grey85\",\n    midpoint = 10,\n    limits = c(-10, 30)\n  )"
  },
  {
    "objectID": "materials/03-colors.html#evaluate-hcl-spectrum-4",
    "href": "materials/03-colors.html#evaluate-hcl-spectrum-4",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Evaluate HCL Spectrum",
    "text": "Evaluate HCL Spectrum\nMore on how to evaluate color palettes: HCLwizard and colorspace.\n\n\n\ncolorspace::specplot(\n  colorRampPalette(\n    c(\"#1D785A\", \"#FFCE52\")\n  )(100)\n)\n\n\n\n\n\ncolorspace::specplot(\n  colorRampPalette(\n    c(\"#663399\", \"grey85\", \"#993334\")\n  )(100)\n)"
  },
  {
    "objectID": "materials/03-colors.html#create-any-palette",
    "href": "materials/03-colors.html#create-any-palette",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Create Any Palette",
    "text": "Create Any Palette\n\n\nggplot(filter(bikes, is_weekend == TRUE),\n       aes(x = temp_feel, y = count, \n           color = humidity)) +\n  geom_point(alpha = .7) +\n  scale_color_gradientn(\n    colors = carto_custom  \n  )"
  },
  {
    "objectID": "materials/03-colors.html#create-any-palette-1",
    "href": "materials/03-colors.html#create-any-palette-1",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Create Any Palette",
    "text": "Create Any Palette\n\npal_c <- \n  colorRampPalette(\n    c(\"#663399\", \"grey85\", \"#993334\")\n  )(5)\n\nplot(color(pal_c))"
  },
  {
    "objectID": "materials/03-colors.html#create-any-palette-2",
    "href": "materials/03-colors.html#create-any-palette-2",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Create Any Palette",
    "text": "Create Any Palette\n\n\nggplot(filter(bikes, is_weekend == TRUE), \n       aes(x = temp_feel, y = count, \n           color = humidity)) +\n  geom_point(alpha = .7) +\n  scale_color_gradientn(\n    colors = pal_c,\n    values = c(0, .05, .2, .8, .95, 1)\n  )"
  },
  {
    "objectID": "materials/03-colors.html#build-custom-color-scales",
    "href": "materials/03-colors.html#build-custom-color-scales",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Build Custom Color Scales",
    "text": "Build Custom Color Scales\n\ndubois_colors <- function(...) {\n  \n  # define colors\n  dubois_cols <- c(\n    `black`    = \"#000000\",\n    `purple`   = \"#582f6c\",\n    `violet`   = \"#94679C\",\n    `pink`     = \"#ef849f\",\n    `softred`  = \"#f4b7a7\",\n    `iceblue`  = \"#bccbf3\",\n    `palegrey` = \"#e4e4e4\"\n  )\n\n  # if no colors are specified, return all\n  cols <- c(...)\n  if (is.null(cols))  return (dubois_cols)\n\n  # if colors are specified, return those\n  dubois_cols[cols]\n}"
  },
  {
    "objectID": "materials/03-colors.html#build-custom-color-scales-1",
    "href": "materials/03-colors.html#build-custom-color-scales-1",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Build Custom Color Scales",
    "text": "Build Custom Color Scales\n\nplot(color(dubois_colors()))"
  },
  {
    "objectID": "materials/03-colors.html#build-custom-color-scales-2",
    "href": "materials/03-colors.html#build-custom-color-scales-2",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Build Custom Color Scales",
    "text": "Build Custom Color Scales\n\nplot(color(dubois_colors(\"black\", \"violet\", \"softred\", \"iceblue\", \"palegrey\")))"
  },
  {
    "objectID": "materials/03-colors.html#build-custom-color-scales-categorical",
    "href": "materials/03-colors.html#build-custom-color-scales-categorical",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Build Custom Color Scales: Categorical",
    "text": "Build Custom Color Scales: Categorical\n\ndubois_pal_d <- function(palette = \"default\", reverse = FALSE) {\n  \n  # nested function to return colors via `dubois_pal_d()(n)`\n  function(n) {\n    \n    # check if number of colors is sufficient\n    if(n > 5) stop('Palettes only contain 5 colors')\n  \n    # check arguments\n    if (!palette %in% c(\"default\", \"dark\", \"light\")) stop('palette should be \"default\", \"dark\" or \"light\".')\n    if (!is.logical(reverse) & !is.numeric(reverse)) stop('reverse should be logical or numeric')\n\n    # define palette styles\n    if (palette == \"default\") { pal <- dubois_colors(\"black\", \"violet\", \"softred\", \"iceblue\", \"palegrey\")[1:n] }\n    if (palette == \"dark\") { pal <- dubois_colors(1:5)[1:n] }\n    if (palette == \"light\") { pal <- dubois_colors(3:7)[1:n] }\n    \n    # return unnamed vector of color codes\n    pal <- unname(pal)\n\n    # check reverse argument\n    if (reverse) rev(pal) else pal\n  }\n}"
  },
  {
    "objectID": "materials/03-colors.html#build-custom-color-scales-categorical-1",
    "href": "materials/03-colors.html#build-custom-color-scales-categorical-1",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Build Custom Color Scales: Categorical",
    "text": "Build Custom Color Scales: Categorical\n\nplot(color(dubois_pal_d()(5)))"
  },
  {
    "objectID": "materials/03-colors.html#build-custom-color-scales-categorical-2",
    "href": "materials/03-colors.html#build-custom-color-scales-categorical-2",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Build Custom Color Scales: Categorical",
    "text": "Build Custom Color Scales: Categorical\n\nplot(color(dubois_pal_d(palette = \"dark\", reverse = TRUE)(5)))"
  },
  {
    "objectID": "materials/03-colors.html#build-custom-color-scales-categorical-3",
    "href": "materials/03-colors.html#build-custom-color-scales-categorical-3",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Build Custom Color Scales: Categorical",
    "text": "Build Custom Color Scales: Categorical\n\nscale_color_dubois_d <- function(palette = \"default\", reverse = FALSE, ...) {\n  \n  # check arguments\n  if (!palette %in% c(\"default\", \"dark\", \"light\")) stop('palette should be \"default\", \"dark\" or \"light\".')\n  if (!is.logical(reverse) & !is.numeric(reverse)) stop('reverse should be logical or numeric')\n\n  # retrieve color set\n  pal <- dubois_pal_d(palette = palette, reverse = reverse)\n\n  # apply to discrete scale\n  ggplot2::discrete_scale(\"colour\", paste0(\"dubois_\", palette), palette = pal, ...)\n}"
  },
  {
    "objectID": "materials/03-colors.html#build-custom-color-scales-categorical-4",
    "href": "materials/03-colors.html#build-custom-color-scales-categorical-4",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Build Custom Color Scales: Categorical",
    "text": "Build Custom Color Scales: Categorical\n\nscale_color_dubois_d <- function(palette = \"default\", reverse = FALSE, ...) {\n  \n  # check arguments\n  if (!palette %in% c(\"default\", \"dark\", \"light\")) stop('palette should be \"default\", \"dark\" or \"light\".')\n  if (!is.logical(reverse) & !is.numeric(reverse)) stop('reverse should be logical or numeric')\n\n  # retrieve color set\n  pal <- dubois_pal_d(palette = palette, reverse = reverse)\n\n  # apply to discrete scale\n  ggplot2::discrete_scale(\"colour\", paste0(\"dubois_\", palette), palette = pal, ...)\n}\n\nscale_fill_dubois_d <- function(palette = \"default\", reverse = FALSE, ...) {\n  \n  if (!palette %in% c(\"default\", \"dark\", \"light\")) stop('palette should be \"default\", \"dark\" or \"light\".')\n  if (!is.logical(reverse) & !is.numeric(reverse)) stop('reverse should be logical or numeric')\n\n  pal <- dubois_pal_d(palette = palette, reverse = reverse)\n\n  ggplot2::discrete_scale(\"fill\", paste0(\"dubois_\", palette), palette = pal, ...)\n}"
  },
  {
    "objectID": "materials/03-colors.html#use-your-custom-color-scales-categorical",
    "href": "materials/03-colors.html#use-your-custom-color-scales-categorical",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Use Your Custom Color Scales: Categorical",
    "text": "Use Your Custom Color Scales: Categorical\n\n\nggplot(bikes, \n       aes(y = weather_type, \n           fill = season)) +\n  geom_bar(position = \"fill\") +\n  scale_fill_dubois_d(\n    reverse = TRUE,\n    name = NULL\n  ) +\n  theme(legend.position = \"top\")"
  },
  {
    "objectID": "materials/03-colors.html#build-custom-color-scales-sequential",
    "href": "materials/03-colors.html#build-custom-color-scales-sequential",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Build Custom Color Scales: Sequential",
    "text": "Build Custom Color Scales: Sequential\n\ndubois_pal_c <- function(palette = \"dark\", reverse = FALSE, ...) {\n  \n  # check arguments\n  if (!palette %in% c(\"dark\", \"light\")) stop('palette should be \"dark\" or \"light\".')\n  if (!is.logical(reverse) & !is.numeric(reverse)) stop('reverse should be logical or numeric')\n  \n  # define palette styles\n  dubois_palettes <- list(\n    `dark`    = dubois_colors(\"black\", \"purple\", \"violet\", \"pink\"),\n    `light`   = dubois_colors(\"purple\", \"violet\", \"pink\", \"palegrey\")\n  )\n\n  # retrieve color set as unnamed vector\n  pal <- dubois_palettes[[palette]]\n  pal <- unname(pal)\n\n  # check reverse argument\n  if (reverse) pal <- rev(pal)\n\n  # create a color gradient with n colors\n  grDevices::colorRampPalette(pal, ...)\n}"
  },
  {
    "objectID": "materials/03-colors.html#build-custom-color-scales-sequential-1",
    "href": "materials/03-colors.html#build-custom-color-scales-sequential-1",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Build Custom Color Scales: Sequential",
    "text": "Build Custom Color Scales: Sequential\n\nplot(color(dubois_pal_c()(50)))"
  },
  {
    "objectID": "materials/03-colors.html#build-custom-color-scales-sequential-2",
    "href": "materials/03-colors.html#build-custom-color-scales-sequential-2",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Build Custom Color Scales: Sequential",
    "text": "Build Custom Color Scales: Sequential\n\nplot(color(dubois_pal_c(palette = \"light\", reverse = TRUE)(7)))"
  },
  {
    "objectID": "materials/03-colors.html#build-custom-color-scales-sequential-3",
    "href": "materials/03-colors.html#build-custom-color-scales-sequential-3",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Build Custom Color Scales: Sequential",
    "text": "Build Custom Color Scales: Sequential\n\nscale_color_dubois_c <- function(palette = \"dark\", reverse = FALSE, ...) {\n  \n  # check function arguments\n  if (!palette %in% c(\"dark\", \"light\")) stop('Palette should be \"dark\" or \"light\".')\n  if (!is.logical(reverse) & !is.numeric(reverse)) stop('reverse should be logical or numeric.')\n\n  # apply color set to ggplot's gradientn scale\n  pal <- dubois_pal_c(palette = palette, reverse = reverse)\n  ggplot2::scale_color_gradientn(colours = pal(256), ...)\n}"
  },
  {
    "objectID": "materials/03-colors.html#build-custom-color-scales-sequential-4",
    "href": "materials/03-colors.html#build-custom-color-scales-sequential-4",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Build Custom Color Scales: Sequential",
    "text": "Build Custom Color Scales: Sequential\n\nscale_color_dubois_c <- function(palette = \"dark\", reverse = FALSE, ...) {\n  \n  # check function arguments\n  if (!palette %in% c(\"dark\", \"light\")) stop('Palette should be \"dark\" or \"light\".')\n  if (!is.logical(reverse) & !is.numeric(reverse)) stop('reverse should be logical or numeric.')\n\n  # apply color set to ggplot's gradientn scale\n  pal <- dubois_pal_c(palette = palette, reverse = reverse)\n  ggplot2::scale_color_gradientn(colours = pal(256), ...)\n}\n\nscale_fill_dubois_c <- function(palette = \"dark\", reverse = FALSE, ...) {\n  \n  if (!palette %in% c(\"dark\", \"light\")) stop('Palette should be \"dark\" or \"light\".')\n  if (!is.logical(reverse) & !is.numeric(reverse)) stop('reverse should be logical or numeric.')\n\n  pal <- dubois_pal_c(palette = palette, reverse = reverse)\n  ggplot2::scale_fill_gradientn(colours = pal(256), ...)\n}"
  },
  {
    "objectID": "materials/03-colors.html#use-your-custom-color-scales-sequential",
    "href": "materials/03-colors.html#use-your-custom-color-scales-sequential",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Use Your Custom Color Scales: Sequential",
    "text": "Use Your Custom Color Scales: Sequential\n\n\nggplot(filter(bikes, is_weekend == TRUE),\n       aes(x = temp_feel, y = count, \n           color = humidity)) +\n  geom_point(alpha = .7) +\n  scale_color_dubois_c()"
  },
  {
    "objectID": "materials/03-colors.html#use-your-custom-color-scales-sequential-1",
    "href": "materials/03-colors.html#use-your-custom-color-scales-sequential-1",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Use Your Custom Color Scales: Sequential",
    "text": "Use Your Custom Color Scales: Sequential\n\n\nggplot(filter(bikes, is_weekend == TRUE),\n       aes(x = temp_feel, y = count, \n           color = humidity)) +\n  geom_point(alpha = .7) +\n  scale_color_dubois_c(\n    palette = \"light\",\n    reverse = TRUE\n  )"
  },
  {
    "objectID": "materials/03-colors.html#evaluate-hcl-spectrum-5",
    "href": "materials/03-colors.html#evaluate-hcl-spectrum-5",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Evaluate HCL Spectrum",
    "text": "Evaluate HCL Spectrum\nMore on how to evaluate color palettes: HCLwizard and colorspace.\n\n\n\ncolorspace::specplot(\n  dubois_pal_c()(100)\n)\n\n\n\n\n\n\ncolorspace::specplot(\n  dubois_pal_c(palette = \"light\")(100)\n)"
  },
  {
    "objectID": "materials/03-colors.html#emulate-cvd",
    "href": "materials/03-colors.html#emulate-cvd",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Emulate CVD",
    "text": "Emulate CVD\n\n\ndeut <- \n  prismatic::clr_deutan(\n    dubois_pal_c()(100)\n  )\n\nggplot(filter(bikes, is_weekend == TRUE),\n       aes(x = temp_feel, y = count, \n           color = humidity)) +\n  geom_point(alpha = .7) +\n  scale_color_gradientn(\n    colors = deut\n  )"
  },
  {
    "objectID": "materials/03-colors.html#emulate-cvd-1",
    "href": "materials/03-colors.html#emulate-cvd-1",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Emulate CVD",
    "text": "Emulate CVD\n\n\ng1 <- \n  ggplot(filter(bikes, is_weekend == TRUE),\n         aes(x = temp_feel, y = count, \n             color = humidity)) +\n  geom_point(alpha = .7) +\n  scale_color_dubois_c()\n\ng1"
  },
  {
    "objectID": "materials/03-colors.html#emulate-cvd-2",
    "href": "materials/03-colors.html#emulate-cvd-2",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Emulate CVD",
    "text": "Emulate CVD\n\ncolorblindr::cvd_grid(g1)"
  },
  {
    "objectID": "materials/03-colors.html#emulate-cvd-3",
    "href": "materials/03-colors.html#emulate-cvd-3",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Emulate CVD",
    "text": "Emulate CVD\n\ncolorBlindness::cvdPlot(g1)"
  },
  {
    "objectID": "materials/03-colors.html#emulate-cvd-4",
    "href": "materials/03-colors.html#emulate-cvd-4",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Emulate CVD",
    "text": "Emulate CVD\n\n\ng2 <- \n  ggplot(bikes, \n       aes(x = day_night, y = count, \n           fill = season)) +\n  geom_boxplot() +\n  scale_fill_manual(\n    values = carto_custom\n  )\n\ng2"
  },
  {
    "objectID": "materials/03-colors.html#emulate-cvd-5",
    "href": "materials/03-colors.html#emulate-cvd-5",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Emulate CVD",
    "text": "Emulate CVD\n\ncolorblindr::cvd_grid(g2)"
  },
  {
    "objectID": "materials/03-colors.html#emulate-cvd-6",
    "href": "materials/03-colors.html#emulate-cvd-6",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Emulate CVD",
    "text": "Emulate CVD\n\n\ng3 <- \n  ggplot(bikes, \n         aes(x = temp_feel, y = count,\n             color = season)) + \n  geom_point(\n    alpha = .5, size = 1.5\n  ) + \n  stat_smooth(\n    aes(group = day_night),\n    method = \"lm\", color = \"black\"\n  ) +\n  scale_color_manual(\n    values = c(\"#6681FE\", \"#1EC98D\", \"#F7B01B\", \"#A26E7C\")\n  )\n\ng3"
  },
  {
    "objectID": "materials/03-colors.html#emulate-cvd-7",
    "href": "materials/03-colors.html#emulate-cvd-7",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Emulate CVD",
    "text": "Emulate CVD\n\ncolorblindr::cvd_grid(g3)"
  },
  {
    "objectID": "materials/03-colors.html#recap",
    "href": "materials/03-colors.html#recap",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Recap",
    "text": "Recap\n\n\n\nuse categorical palettes for qualitative datae.g.¬†scale_*_manual() or scale_*_brewer()\nuse sequential or diverging palettes for quantitative datae.g.¬†scale_*_gradient|gradient2() or scale_*_viridis_c\nvarious packages provide palettes incl.¬†scale_* componentse.g.¬†{rcartocolors}, {scico}, {ggsci} and {MetBrewer}\ncolor packages return palettes as vectors that can be modified and supplied to scale_*_manual() and scale_*_gradientn()\nuse after_scale to modify and recycle color scales\nevaluate palette quality with {colorspace} (HCL) and {colorblindr} (CVD)"
  },
  {
    "objectID": "materials/03-colors.html#exercise-1",
    "href": "materials/03-colors.html#exercise-1",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Exercise 1",
    "text": "Exercise 1\n\n\nAdd colors to our bar chart from the last exercise:"
  },
  {
    "objectID": "materials/03-colors.html#exercise-2",
    "href": "materials/03-colors.html#exercise-2",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Exercise 2",
    "text": "Exercise 2\n\n\nCreate a plot of your choice with a sequential (non-default) color palette.\n\nInspect the HCL spectrum. Adjust the palette if needed.\nTest the palette with regard to colorblindness. Adjust the palette if needed.\nSave and share the graphic."
  },
  {
    "objectID": "materials/03-colors.html#section-1",
    "href": "materials/03-colors.html#section-1",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "",
    "text": "C√©dric Scherer // posit::conf(2023)"
  },
  {
    "objectID": "materials/04-theming.html#theming",
    "href": "materials/04-theming.html#theming",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Theming",
    "text": "Theming\n\n= stylistic changes of non-data elements\n\n\ncomplete themes plus custom theme adjustments\n\nadd complete themes via theme_*()\ntheme defaults can be overwritten via theme()"
  },
  {
    "objectID": "materials/04-theming.html#preparation-data",
    "href": "materials/04-theming.html#preparation-data",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Preparation: Data",
    "text": "Preparation: Data\n\nlibrary(readr)\nlibrary(ggplot2)\n\nbikes <-\n  read_csv(\n    here::here(\"data\", \"london-bikes-custom.csv\"),\n    col_types = \"Dcfffilllddddc\"\n  )"
  },
  {
    "objectID": "materials/04-theming.html#preparation-plot",
    "href": "materials/04-theming.html#preparation-plot",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Preparation: Plot",
    "text": "Preparation: Plot\n\nbikes |>\n  dplyr::group_by(\n    month = lubridate::month(date, label = TRUE), \n    day_night, year\n  ) |> \n  dplyr::summarize(count = sum(count))\n\n# A tibble: 48 √ó 4\n# Groups:   month, day_night [24]\n   month day_night year   count\n   <ord> <chr>     <fct>  <int>\n 1 Jan   day       2015  398555\n 2 Jan   day       2016  423622\n 3 Jan   night     2015  148084\n 4 Jan   night     2016  158896\n 5 Feb   day       2015  398429\n 6 Feb   day       2016  438254\n 7 Feb   night     2015  145165\n 8 Feb   night     2016  154656\n 9 Mar   day       2015  511860\n10 Mar   day       2016  487395\n# ‚Ñπ 38 more rows"
  },
  {
    "objectID": "materials/04-theming.html#preparation-plot-1",
    "href": "materials/04-theming.html#preparation-plot-1",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Preparation: Plot",
    "text": "Preparation: Plot\n\nbikes |>\n  dplyr::group_by(\n    month = lubridate::month(date, label = TRUE), \n    day_night, year\n  ) |> \n  dplyr::summarize(count = sum(count)) |> \n  ggplot(aes(x = month, y = count, color = day_night)) +\n  geom_line(aes(group = day_night)) +\n  geom_point(size = 2) +\n  facet_wrap(~ year, ncol = 1, scales = \"free_x\")"
  },
  {
    "objectID": "materials/04-theming.html#preparation-plot-2",
    "href": "materials/04-theming.html#preparation-plot-2",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Preparation: Plot",
    "text": "Preparation: Plot\n\ng <- bikes |>\n  dplyr::group_by(month = lubridate::month(date, label = TRUE), day_night, year) |> \n  dplyr::summarize(count = sum(count)) |> \n  ggplot(aes(x = month, y = count, color = day_night)) +\n  geom_line(aes(group = day_night)) +\n  geom_point(size = 2) +\n  facet_wrap(~year, ncol = 1, scales = \"free_x\") +\n  coord_cartesian(clip = \"off\") +\n  scale_y_continuous(\n    limits = c(0, 830000), expand = c(0, 0),\n    labels = scales::label_comma(scale = 1/10^3, suffix = \"K\")\n  ) +\n  scale_color_manual(values = c(day = \"#FFA200\", night = \"#757BC7\")) +\n  labs(\n    x = NULL, y = \"# rented bikes\", color = NULL,\n    title = \"TfL Bike Shares per Month and Year\",\n    caption = \"Data: TfL (Transport for London)\"\n  )"
  },
  {
    "objectID": "materials/04-theming.html#complete-themes-1",
    "href": "materials/04-theming.html#complete-themes-1",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Complete Themes",
    "text": "Complete Themes\n\n\n\ng + theme_light()\n\n\n\n\n\n\ng + theme_bw()"
  },
  {
    "objectID": "materials/04-theming.html#complete-themes-2",
    "href": "materials/04-theming.html#complete-themes-2",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Complete Themes",
    "text": "Complete Themes\n\n\n\ng + theme_minimal()\n\n\n\n\n\n\ng + theme_classic()"
  },
  {
    "objectID": "materials/04-theming.html#complete-themes-3",
    "href": "materials/04-theming.html#complete-themes-3",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Complete Themes",
    "text": "Complete Themes\n\n\n\ng + theme_dark()\n\n\n\n\n\n\ng + theme_void()"
  },
  {
    "objectID": "materials/04-theming.html#complete-themes-via-extension-packages",
    "href": "materials/04-theming.html#complete-themes-via-extension-packages",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Complete Themes via Extension Packages",
    "text": "Complete Themes via Extension Packages\n\n\n\ng + ggthemes::theme_stata()\n\n\n\n\n\n\ng + ggthemes::theme_gdocs()"
  },
  {
    "objectID": "materials/04-theming.html#complete-themes-via-extension-packages-1",
    "href": "materials/04-theming.html#complete-themes-via-extension-packages-1",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Complete Themes via Extension Packages",
    "text": "Complete Themes via Extension Packages\n\n\n\ng + hrbrthemes::theme_ipsum_rc()\n\n\n\n\n\n\ng + tvthemes::theme_simpsons()"
  },
  {
    "objectID": "materials/04-theming.html#modify-theme-elements",
    "href": "materials/04-theming.html#modify-theme-elements",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Modify Theme Elements",
    "text": "Modify Theme Elements\n\n\ng + \n  hrbrthemes::theme_ipsum_rc() +\n  theme(\n    panel.grid.minor = element_blank(),\n    plot.title = element_text(color =\"#28A87D\"),\n    plot.title.position = \"plot\"\n  )"
  },
  {
    "objectID": "materials/04-theming.html#the-systemfonts-package",
    "href": "materials/04-theming.html#the-systemfonts-package",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "The {systemfonts} Package",
    "text": "The {systemfonts} Package\nlocates installed fonts and provides font-related utilities to graphic devices \n\n\nlibrary(systemfonts)\n\n\n\n\nmatch_font(\"Asap\", bold = TRUE)\n\n$path\n[1] \"/Users/cedric/Library/Fonts/Asap-Bold.ttf\"\n\n$index\n[1] 0\n\n$features\nNULL"
  },
  {
    "objectID": "materials/04-theming.html#use-non-default-typefaces",
    "href": "materials/04-theming.html#use-non-default-typefaces",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Use Non-Default Typefaces",
    "text": "Use Non-Default Typefaces\n\nsystem_fonts()\n\n# A tibble: 21,738 √ó 9\n   path                                                                                                   index name  family style weight width italic monospace\n   <chr>                                                                                                  <int> <chr> <chr>  <chr> <ord>  <ord> <lgl>  <lgl>    \n 1 /Users/cedric/Library/Fonts/FontBase/Fira Code-Regular.ttf                                                 0 Fira‚Ä¶ Fira ‚Ä¶ Regu‚Ä¶ normal norm‚Ä¶ FALSE  TRUE     \n 2 /Users/cedric/Library/Fonts/FontBase/Tourney-200italic.ttf                                                 0 Tour‚Ä¶ Tourn‚Ä¶ Extr‚Ä¶ normal norm‚Ä¶ TRUE   FALSE    \n 3 /Users/cedric/Library/Fonts/FontBase/Iosevka-Term-Curly-Slab-Light.ttf                                     0 Iose‚Ä¶ Iosev‚Ä¶ Light normal norm‚Ä¶ FALSE  TRUE     \n 4 /Users/cedric/Library/Fonts/Fraunces_144pt_Soft-BlackItalic.ttf                                            0 Frau‚Ä¶ Fraun‚Ä¶ Blac‚Ä¶ heavy  norm‚Ä¶ TRUE   FALSE    \n 5 /System/Library/AssetsV2/com_apple_MobileAsset_Font7/28f00a24ba19995bab7249993e6e35d11011074a.asset/A‚Ä¶     0 SIL-‚Ä¶ Kai    Regu‚Ä¶ normal norm‚Ä¶ FALSE  FALSE    \n 6 /Users/cedric/Library/Fonts/Neutraface Text Bold Italic Alt.ttf                                            0 Neut‚Ä¶ Neutr‚Ä¶ Regu‚Ä¶ bold   norm‚Ä¶ TRUE   FALSE    \n 7 /Users/cedric/Library/Fonts/THE_SOCIAL.ttf                                                                 0 THES‚Ä¶ THE S‚Ä¶ Regu‚Ä¶ normal norm‚Ä¶ FALSE  FALSE    \n 8 /Users/cedric/Library/Fonts/FontBase/M PLUS 1-900.ttf                                                      0 MPLU‚Ä¶ M PLU‚Ä¶ Black heavy  norm‚Ä¶ FALSE  FALSE    \n 9 /Users/cedric/Library/Fonts/FontBase/Parix-Hybrid111R.otf                                                  0 Pari‚Ä¶ Parix  Hybr‚Ä¶ normal norm‚Ä¶ FALSE  FALSE    \n10 /Users/cedric/Library/Fonts/FontBase/InputMonoCondensed-Bold.ttf                                           0 Inpu‚Ä¶ Input‚Ä¶ Bold  bold   semi‚Ä¶ FALSE  TRUE     \n# ‚Ñπ 21,728 more rows"
  },
  {
    "objectID": "materials/04-theming.html#use-non-default-typefaces-1",
    "href": "materials/04-theming.html#use-non-default-typefaces-1",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Use Non-Default Typefaces",
    "text": "Use Non-Default Typefaces\n\nsystem_fonts() |>\n  dplyr::filter(stringr::str_detect(family, \"Asap\")) |>\n  dplyr::select(family) |>\n  unique() |> \n  dplyr::arrange(family)\n\n# A tibble: 5 √ó 1\n  family            \n  <chr>             \n1 Asap              \n2 Asap Condensed    \n3 Asap Expanded     \n4 Asap SemiCondensed\n5 Asap SemiExpanded"
  },
  {
    "objectID": "materials/04-theming.html#use-non-default-typefaces-2",
    "href": "materials/04-theming.html#use-non-default-typefaces-2",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Use Non-Default Typefaces",
    "text": "Use Non-Default Typefaces\n\n\ng +\n  theme_minimal(\n    base_family = \"Asap SemiCondensed\",\n    base_size = 13\n  )"
  },
  {
    "objectID": "materials/04-theming.html#use-font-features",
    "href": "materials/04-theming.html#use-font-features",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Use Font Features",
    "text": "Use Font Features\n\nsystem_fonts() |>\n  dplyr::filter(family == \"Asap SemiCondensed\") |>\n  dplyr::select(name) |>\n  dplyr::arrange(name)\n\n# A tibble: 18 √ó 1\n   name                              \n   <chr>                             \n 1 AsapSemiCondensed-Black           \n 2 AsapSemiCondensed-BlackItalic     \n 3 AsapSemiCondensed-Bold            \n 4 AsapSemiCondensed-BoldItalic      \n 5 AsapSemiCondensed-ExtraBold       \n 6 AsapSemiCondensed-ExtraBoldItalic \n 7 AsapSemiCondensed-ExtraLight      \n 8 AsapSemiCondensed-ExtraLightItalic\n 9 AsapSemiCondensed-Italic          \n10 AsapSemiCondensed-Light           \n11 AsapSemiCondensed-LightItalic     \n12 AsapSemiCondensed-Medium          \n13 AsapSemiCondensed-MediumItalic    \n14 AsapSemiCondensed-Regular         \n15 AsapSemiCondensed-SemiBold        \n16 AsapSemiCondensed-SemiBoldItalic  \n17 AsapSemiCondensed-Thin            \n18 AsapSemiCondensed-ThinItalic"
  },
  {
    "objectID": "materials/04-theming.html#use-font-features-1",
    "href": "materials/04-theming.html#use-font-features-1",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Use Font Features",
    "text": "Use Font Features\n\nregister_variant(\n  name = \"Asap SemiCondensed Semibold S1\",\n  family = \"Asap SemiCondensed\",\n  weight = \"semibold\",\n  features = font_feature(letters = \"stylistic\")\n)"
  },
  {
    "objectID": "materials/04-theming.html#use-font-features-2",
    "href": "materials/04-theming.html#use-font-features-2",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Use Font Features",
    "text": "Use Font Features\n\n\ng + \n  theme_minimal(\n    base_family = \"Asap SemiCondensed Semibold S1\",\n    base_size = 13\n  )"
  },
  {
    "objectID": "materials/04-theming.html#use-font-features-3",
    "href": "materials/04-theming.html#use-font-features-3",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Use Font Features",
    "text": "Use Font Features"
  },
  {
    "objectID": "materials/04-theming.html#use-font-features-4",
    "href": "materials/04-theming.html#use-font-features-4",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Use Font Features",
    "text": "Use Font Features\n\nregister_variant(\n  name = \"Spline Sans Tabular\",\n  family = \"Spline Sans\",\n  weight = \"normal\",\n  features = font_feature(numbers = \"tabular\")\n)"
  },
  {
    "objectID": "materials/04-theming.html#use-font-features-5",
    "href": "materials/04-theming.html#use-font-features-5",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Use Font Features",
    "text": "Use Font Features"
  },
  {
    "objectID": "materials/04-theming.html#like-a-pro-set-themes-globally",
    "href": "materials/04-theming.html#like-a-pro-set-themes-globally",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Like a Pro: Set Themes Globally",
    "text": "Like a Pro: Set Themes Globally\n\ntheme_set(theme_minimal(base_family = \"Asap SemiCondensed\", base_size = 13))\n\ntheme_update(\n  panel.grid.minor = element_blank(),\n  strip.text = element_text(face = \"bold\", size = rel(1.1)),\n  plot.title = element_text(face = \"bold\", size = rel(1.3)),\n  plot.title.position = \"plot\",\n  plot.caption.position = \"plot\"\n)"
  },
  {
    "objectID": "materials/04-theming.html#like-a-pro-set-themes-globally-1",
    "href": "materials/04-theming.html#like-a-pro-set-themes-globally-1",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Like a Pro: Set Themes Globally",
    "text": "Like a Pro: Set Themes Globally\n\n\ng"
  },
  {
    "objectID": "materials/04-theming.html#complete-themes-whats-inside",
    "href": "materials/04-theming.html#complete-themes-whats-inside",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Complete Themes: What‚Äôs Inside?",
    "text": "Complete Themes: What‚Äôs Inside?\n\ntheme_grey\n\nfunction (base_size = 11, base_family = \"\", base_line_size = base_size/22, \n    base_rect_size = base_size/22) \n{\n    half_line <- base_size/2\n    t <- theme(line = element_line(colour = \"black\", linewidth = base_line_size, \n        linetype = 1, lineend = \"butt\"), rect = element_rect(fill = \"white\", \n        colour = \"black\", linewidth = base_rect_size, linetype = 1), \n        text = element_text(family = base_family, face = \"plain\", \n            colour = \"black\", size = base_size, lineheight = 0.9, \n            hjust = 0.5, vjust = 0.5, angle = 0, margin = margin(), \n            debug = FALSE), axis.line = element_blank(), axis.line.x = NULL, \n        axis.line.y = NULL, axis.text = element_text(size = rel(0.8), \n            colour = \"grey30\"), axis.text.x = element_text(margin = margin(t = 0.8 * \n            half_line/2), vjust = 1), axis.text.x.top = element_text(margin = margin(b = 0.8 * \n            half_line/2), vjust = 0), axis.text.y = element_text(margin = margin(r = 0.8 * \n            half_line/2), hjust = 1), axis.text.y.right = element_text(margin = margin(l = 0.8 * \n            half_line/2), hjust = 0), axis.ticks = element_line(colour = \"grey20\"), \n        axis.ticks.length = unit(half_line/2, \"pt\"), axis.ticks.length.x = NULL, \n        axis.ticks.length.x.top = NULL, axis.ticks.length.x.bottom = NULL, \n        axis.ticks.length.y = NULL, axis.ticks.length.y.left = NULL, \n        axis.ticks.length.y.right = NULL, axis.title.x = element_text(margin = margin(t = half_line/2), \n            vjust = 1), axis.title.x.top = element_text(margin = margin(b = half_line/2), \n            vjust = 0), axis.title.y = element_text(angle = 90, \n            margin = margin(r = half_line/2), vjust = 1), axis.title.y.right = element_text(angle = -90, \n            margin = margin(l = half_line/2), vjust = 0), legend.background = element_rect(colour = NA), \n        legend.spacing = unit(2 * half_line, \"pt\"), legend.spacing.x = NULL, \n        legend.spacing.y = NULL, legend.margin = margin(half_line, \n            half_line, half_line, half_line), legend.key = element_rect(fill = \"grey95\", \n            colour = NA), legend.key.size = unit(1.2, \"lines\"), \n        legend.key.height = NULL, legend.key.width = NULL, legend.text = element_text(size = rel(0.8)), \n        legend.text.align = NULL, legend.title = element_text(hjust = 0), \n        legend.title.align = NULL, legend.position = \"right\", \n        legend.direction = NULL, legend.justification = \"center\", \n        legend.box = NULL, legend.box.margin = margin(0, 0, 0, \n            0, \"cm\"), legend.box.background = element_blank(), \n        legend.box.spacing = unit(2 * half_line, \"pt\"), panel.background = element_rect(fill = \"grey92\", \n            colour = NA), panel.border = element_blank(), panel.grid = element_line(colour = \"white\"), \n        panel.grid.minor = element_line(linewidth = rel(0.5)), \n        panel.spacing = unit(half_line, \"pt\"), panel.spacing.x = NULL, \n        panel.spacing.y = NULL, panel.ontop = FALSE, strip.background = element_rect(fill = \"grey85\", \n            colour = NA), strip.clip = \"inherit\", strip.text = element_text(colour = \"grey10\", \n            size = rel(0.8), margin = margin(0.8 * half_line, \n                0.8 * half_line, 0.8 * half_line, 0.8 * half_line)), \n        strip.text.x = NULL, strip.text.y = element_text(angle = -90), \n        strip.text.y.left = element_text(angle = 90), strip.placement = \"inside\", \n        strip.placement.x = NULL, strip.placement.y = NULL, strip.switch.pad.grid = unit(half_line/2, \n            \"pt\"), strip.switch.pad.wrap = unit(half_line/2, \n            \"pt\"), plot.background = element_rect(colour = \"white\"), \n        plot.title = element_text(size = rel(1.2), hjust = 0, \n            vjust = 1, margin = margin(b = half_line)), plot.title.position = \"panel\", \n        plot.subtitle = element_text(hjust = 0, vjust = 1, margin = margin(b = half_line)), \n        plot.caption = element_text(size = rel(0.8), hjust = 1, \n            vjust = 1, margin = margin(t = half_line)), plot.caption.position = \"panel\", \n        plot.tag = element_text(size = rel(1.2), hjust = 0.5, \n            vjust = 0.5), plot.tag.position = \"topleft\", plot.margin = margin(half_line, \n            half_line, half_line, half_line), complete = TRUE)\n    ggplot_global$theme_all_null %+replace% t\n}\n<bytecode: 0x12e7cd6b0>\n<environment: namespace:ggplot2>"
  },
  {
    "objectID": "materials/04-theming.html#complete-themes-whats-inside-1",
    "href": "materials/04-theming.html#complete-themes-whats-inside-1",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Complete Themes: What‚Äôs Inside?",
    "text": "Complete Themes: What‚Äôs Inside?\n\ntheme_minimal\n\nfunction (base_size = 11, base_family = \"\", base_line_size = base_size/22, \n    base_rect_size = base_size/22) \n{\n    theme_bw(base_size = base_size, base_family = base_family, \n        base_line_size = base_line_size, base_rect_size = base_rect_size) %+replace% \n        theme(axis.ticks = element_blank(), legend.background = element_blank(), \n            legend.key = element_blank(), panel.background = element_blank(), \n            panel.border = element_blank(), strip.background = element_blank(), \n            plot.background = element_blank(), complete = TRUE)\n}\n<bytecode: 0x11df48828>\n<environment: namespace:ggplot2>"
  },
  {
    "objectID": "materials/04-theming.html#create-a-custom-theme",
    "href": "materials/04-theming.html#create-a-custom-theme",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Create a Custom Theme",
    "text": "Create a Custom Theme\n\ntheme_asap <- function(base_size = 13, base_family = \"Asap SemiCondensed\", \n                       base_line_size = base_size/22, base_rect_size = base_size/22) {\n  \n  theme_minimal(base_size = base_size, base_family = base_family, \n                base_line_size = base_line_size, base_rect_size = base_rect_size) \n}"
  },
  {
    "objectID": "materials/04-theming.html#create-a-custom-theme-1",
    "href": "materials/04-theming.html#create-a-custom-theme-1",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Create a Custom Theme",
    "text": "Create a Custom Theme\n\ntheme_asap <- function(base_size = 13, base_family = \"Asap SemiCondensed\", \n                       base_line_size = base_size/22, base_rect_size = base_size/22) {\n  \n  theme_minimal(base_size = base_size, base_family = base_family, \n                base_line_size = base_line_size, base_rect_size = base_rect_size)  %+replace%\n    theme(\n      # add your theme changes here\n    )\n}"
  },
  {
    "objectID": "materials/04-theming.html#create-a-custom-theme-2",
    "href": "materials/04-theming.html#create-a-custom-theme-2",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Create a Custom Theme",
    "text": "Create a Custom Theme\n\ntheme_asap <- function(base_size = 13, base_family = \"Asap SemiCondensed\", \n                       base_line_size = base_size/22, base_rect_size = base_size/22) {\n  \n  theme_minimal(base_size = base_size, base_family = base_family, \n                base_line_size = base_line_size, base_rect_size = base_rect_size) %+replace%\n    theme(\n      plot.title = element_text(size = rel(1.3), margin = margin(b = base_size/2),\n                                family = \"Asap SemiCondensed Extrabold\", hjust = 0),\n      plot.title.position = \"plot\",\n      plot.caption = element_text(color = \"grey30\", margin = margin(t = base_size),\n                                  size = rel(0.8), hjust = 1, vjust = 1),\n      plot.caption.position = \"plot\",\n      axis.title.x = element_text(hjust = 0, vjust = 0, margin = margin(t = base_size/3)),\n      axis.title.y = element_text(hjust = 1, vjust = 0, angle = 90, margin = margin(r = base_size/3)),\n      panel.background = element_rect(fill = \"white\", color = \"grey20\"), \n      panel.border = element_rect(fill = NA, color = \"grey20\"), \n      plot.background = element_rect(fill = \"grey85\", color = NA), \n      legend.justification = \"top\",\n      strip.text = element_text(size = rel(1.05), margin = margin(base_size/2, 0, base_size/2, 0)),\n      panel.grid.minor = element_blank(), \n      complete = TRUE\n    )\n}"
  },
  {
    "objectID": "materials/04-theming.html#apply-the-custom-theme",
    "href": "materials/04-theming.html#apply-the-custom-theme",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Apply the Custom Theme",
    "text": "Apply the Custom Theme\n\n\ng + \n  theme_asap()"
  },
  {
    "objectID": "materials/04-theming.html#modify-an-existing-theme",
    "href": "materials/04-theming.html#modify-an-existing-theme",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Modify an Existing Theme",
    "text": "Modify an Existing Theme\n ‚Å†%+replace%\n\nreplaces the entire element; any element of a theme not specified in e2 will not be present in the resulting theme (i.e.¬†NULL).Thus this operator can be used to overwrite an entire theme.\n\n\n +\n\nupdates the elements of e1 that differ from elements specified (not NULL) in e2.Thus this operator can be used to incrementally add or modify attributes of a ggplot theme."
  },
  {
    "objectID": "materials/04-theming.html#create-a-custom-theme-3",
    "href": "materials/04-theming.html#create-a-custom-theme-3",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Create a Custom Theme",
    "text": "Create a Custom Theme\n\ntheme_asap_plus <- function(base_size = 13, base_family = \"Asap SemiCondensed\", \n                            base_line_size = base_size/22, base_rect_size = base_size/22) {\n  \n  theme_minimal(base_size = base_size, base_family = base_family, \n                base_line_size = base_line_size, base_rect_size = base_rect_size) + \n    theme( \n      plot.title = element_text(size = rel(1.3), hjust = 0,\n                                family = \"Asap SemiCondensed Extrabold\"),\n      plot.title.position = \"plot\",\n      plot.caption = element_text(color = \"grey30\", margin = margin(t = base_size)),\n      plot.caption.position = \"plot\",\n      axis.title.x = element_text(hjust = 0, margin = margin(t = base_size/3)),\n      axis.title.y = element_text(hjust = 1, margin = margin(r = base_size/3)),\n      panel.background = element_rect(fill = \"white\", color = \"grey20\"), \n      panel.border = element_rect(fill = NA, color = \"grey20\"), \n      plot.background = element_rect(fill = \"grey85\", color = NA), \n      legend.justification = \"top\",\n      strip.text = element_text(size = rel(1.05), margin = margin(base_size/2, 0, base_size/2, 0)),\n      panel.grid.minor = element_blank()\n    )\n}"
  },
  {
    "objectID": "materials/04-theming.html#versus-replace",
    "href": "materials/04-theming.html#versus-replace",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "+ versus %+replace%",
    "text": "+ versus %+replace%\n\n\n\ng + theme_asap_plus()\n\n\n\n\n\n\ng + theme_asap_replace()"
  },
  {
    "objectID": "materials/04-theming.html#modify-the-custom-theme",
    "href": "materials/04-theming.html#modify-the-custom-theme",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Modify the Custom Theme",
    "text": "Modify the Custom Theme\n\n\ng + \n  theme_asap() +\n  theme(\n    legend.position = \"top\",\n    plot.background = element_rect(\n      fill = NA, color = NA\n    )\n  )"
  },
  {
    "objectID": "materials/04-theming.html#modify-the-custom-theme-1",
    "href": "materials/04-theming.html#modify-the-custom-theme-1",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Modify the Custom Theme",
    "text": "Modify the Custom Theme\n\n\ng + \n  theme_asap(\n    base_size = 9,\n    base_family = \"Hepta Slab\"\n  )"
  },
  {
    "objectID": "materials/04-theming.html#modify-the-custom-theme-2",
    "href": "materials/04-theming.html#modify-the-custom-theme-2",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Modify the Custom Theme",
    "text": "Modify the Custom Theme\n\n\ng + \n  theme_asap(\n    base_size = 9,\n    base_family = \"Hepta Slab\"\n  ) +\n  theme(\n    plot.title = element_text(\n      family = \"Hepta Slab\"\n    )\n  )"
  },
  {
    "objectID": "materials/04-theming.html#create-a-custom-theme-4",
    "href": "materials/04-theming.html#create-a-custom-theme-4",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Create a Custom Theme",
    "text": "Create a Custom Theme\n\ntheme_asap_title <- function(base_size = 13, base_family = \"Asap SemiCondensed\", \n                             title_family = \"Asap SemiCondensed Extrabold\",\n                             base_line_size = base_size/22, base_rect_size = base_size/22) {\n  \n  if (title_family == \"Asap SemiCondensed Extrabold\") {\n    register_variant(name = \"Asap SemiCondensed Extrabold\",\n                     family = \"Asap SemiCondensed\",\n                     weight = \"ultrabold\")\n  }\n  \n  theme_minimal(base_size = base_size, base_family = base_family, \n                base_line_size = base_line_size, base_rect_size = base_rect_size) + \n    theme(\n      plot.title = element_text(size = rel(1.3), hjust = 0, family = title_family),\n      # fill in other theme adjustments here\n    )\n}"
  },
  {
    "objectID": "materials/04-theming.html#apply-the-custom-theme-1",
    "href": "materials/04-theming.html#apply-the-custom-theme-1",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Apply the Custom Theme",
    "text": "Apply the Custom Theme\n\n\ng +\n  theme_asap_title(\n    base_size = 9,\n    base_family = \"Hepta Slab\",\n    title_family = \"Hepta Slab\"\n  )"
  },
  {
    "objectID": "materials/04-theming.html#advanced-font-handling-for-themes",
    "href": "materials/04-theming.html#advanced-font-handling-for-themes",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Advanced Font Handling (for Themes)",
    "text": "Advanced Font Handling (for Themes)\n\ntheme_fonts <- function(base_size = 12, base_line_size = base_size/22, \n                        base_rect_size = base_size/22) {\n  \n  unavailable <- vector(\"character\")\n  \n  if (sum(grepl(\"Hepta Slab\", systemfonts::system_fonts()$family)) > 0) {\n    systemfonts::register_variant(\n      name = \"Hepta Slab Extrabold\",\n      family = \"Hepta Slab\",\n      weight = \"ultrabold\"\n    )\n    title_family <- \"Hepta Slab Extrabold\"\n  } else {\n    title_family <- \"\"\n    unavailable <- c(unavailable, \"Hepta Slab\")\n  }\n  \n  if (sum(grepl(\"Spline Sans\", systemfonts::system_fonts()$family)) > 0) {\n    base_family <- \"Spline Sans\"\n  } else {\n    base_family <- \"\"\n    unavailable <- c(unavailable, \"Spline Sans\")\n  }\n  \n  if (length(unavailable) > 0) {\n    unavailable <- data.frame(\n      name = unavailable, \n      url = paste0(\"https://fonts.google.com/specimen/\", sub(\" \", \"+\", unavailable))\n    )\n    message(paste(\n      \"Using system default typefaces.\", \n      \"For proper use, please install the following typeface(s):\",\n      paste0(\"  - \", unavailable$name, \": \", unavailable$url, collapse = \"\\n\"),\n      \"Then restart your R session.\",\n      sep = \"\\n\"\n    ))\n  }\n  \n  theme_asap(base_size = base_size, base_family = base_family, \n             base_line_size = base_line_size, base_rect_size = base_rect_size) + \n    theme(\n      plot.title = element_text(size = rel(1.3), hjust = 0, family = title_family)\n    )\n}"
  },
  {
    "objectID": "materials/04-theming.html#apply-the-custom-theme-2",
    "href": "materials/04-theming.html#apply-the-custom-theme-2",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Apply the Custom Theme",
    "text": "Apply the Custom Theme\n\ng + theme_fonts()\n\nUsing system default typefaces.For proper use, please install the following typeface(s):‚ÄÉ- Hepta Slab: https://fonts.google.com/specimen/Hepta+Slab‚ÄÉ- Spline: https://fonts.google.com/specimen/Spline+SansThen restart your R session."
  },
  {
    "objectID": "materials/04-theming.html#apply-the-custom-theme-3",
    "href": "materials/04-theming.html#apply-the-custom-theme-3",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Apply the Custom Theme",
    "text": "Apply the Custom Theme\n\n\ng + theme_fonts()"
  },
  {
    "objectID": "materials/04-theming.html#add-more-arguments",
    "href": "materials/04-theming.html#add-more-arguments",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Add More Arguments",
    "text": "Add More Arguments\n\n\nturn grid lines on and off\ndefine alternative styles\nset a tabular fonts for axis and legend text\nadjust legend position\nadd/remove plot margin\ncontrol rendering of text elements\n‚Ä¶\n\n\n\nPro: Users don‚Äôt have to use theme().\n\n\nCon: Users don‚Äôt have to use theme()."
  },
  {
    "objectID": "materials/04-theming.html#add-more-arguments-1",
    "href": "materials/04-theming.html#add-more-arguments-1",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Add More Arguments",
    "text": "Add More Arguments\n\nturn grid lines on and off\ndefine alternative styles\nset a tabular fonts for axis and legend text\nadjust legend position\nadd/remove plot margin\ncontrol rendering of text elements\n‚Ä¶\n\nPro: Users don‚Äôt have to use theme().\nCon: Users don‚Äôt have to use theme()."
  },
  {
    "objectID": "materials/04-theming.html#add-more-arguments-2",
    "href": "materials/04-theming.html#add-more-arguments-2",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Add More Arguments",
    "text": "Add More Arguments\n\ntheme_asap_grid <- function(base_size = 13, base_family = \"Asap SemiCondensed\", grid = \"xy\", \n                            base_line_size = base_size/22, base_rect_size = base_size/22) {\n  out <- \n    theme_minimal(base_size = base_size, base_family = base_family, \n                  base_line_size = base_line_size, base_rect_size = base_rect_size) + \n    theme(\n      panel.grid.major = element_blank(),\n      axis.ticks = element_line(color = \"grey20\"),\n      axis.ticks.length = unit(base_size/2, \"pt\"),\n      # fill in other theme adjustments here\n    )\n  \n  if (stringr::str_detect(grid, \"x|X\")) {\n    out <- out + theme(panel.grid.major.x = element_line(color = \"grey87\"),\n                       axis.ticks.x = element_blank(),\n                       axis.ticks.length.x = unit(base_size/6, \"pt\"))\n  }\n  if (stringr::str_detect(grid, \"y|Y\")) {\n    out <- out + theme(panel.grid.major.y = element_line(color = \"grey87\"),\n                       axis.ticks.y = element_blank(),\n                       axis.ticks.length.y = unit(base_size/4, \"pt\"))\n  }\n  \n  return(out)\n}"
  },
  {
    "objectID": "materials/04-theming.html#apply-the-custom-theme-4",
    "href": "materials/04-theming.html#apply-the-custom-theme-4",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Apply the Custom Theme",
    "text": "Apply the Custom Theme\n\n\ng + \n  theme_asap_grid(\n    grid = \"y\"\n  )"
  },
  {
    "objectID": "materials/04-theming.html#apply-the-custom-theme-5",
    "href": "materials/04-theming.html#apply-the-custom-theme-5",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Apply the Custom Theme",
    "text": "Apply the Custom Theme\n\n\n\ng + theme_asap_grid()\n\n\n\n\n\ng + theme_asap_grid(grid = \"none\")"
  },
  {
    "objectID": "materials/04-theming.html#apply-the-custom-theme-6",
    "href": "materials/04-theming.html#apply-the-custom-theme-6",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Apply the Custom Theme",
    "text": "Apply the Custom Theme\n\n\ng + \n  theme_asap_grid(\n    grid = \"all\"\n  )"
  },
  {
    "objectID": "materials/04-theming.html#add-checks-to-the-custom-theme",
    "href": "materials/04-theming.html#add-checks-to-the-custom-theme",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Add Checks to the Custom Theme",
    "text": "Add Checks to the Custom Theme\n\ntheme_asap_grid <- function(base_size = 13, base_family = \"Asap SemiCondensed\", grid = \"xy\", \n                            base_line_size = base_size/22, base_rect_size = base_size/22) {\n  \n  if(!stringr::str_detect(grid, \"none|x|X|y|Y\")) stop('grid must be a character: \"none\" or any combination of \"X\", \"Y\", \"x\" and \"y\".')\n  \n  out <- \n    theme_minimal(base_size = base_size, base_family = base_family, \n                  base_line_size = base_line_size, base_rect_size = base_rect_size) + \n    theme(\n      panel.grid.major = element_blank(),\n      axis.ticks = element_line(color = \"grey20\"),\n      axis.ticks.length = unit(base_size/2, \"pt\"),\n      # fill in other theme adjustments here\n    )\n  \n  if (stringr::str_detect(grid, \"x|X\")) {\n    out <- out + theme(panel.grid.major.x = element_line(color = \"grey87\"),\n                       axis.ticks.x = element_blank(),\n                       axis.ticks.length.x = unit(base_size/6, \"pt\"))\n  }\n  if (stringr::str_detect(grid, \"y|Y\")) {\n    out <- out + theme(panel.grid.major.y = element_line(color = \"grey87\"),\n                       axis.ticks.y = element_blank(),\n                       axis.ticks.length.y = unit(base_size/4, \"pt\"))\n  }\n  \n  return(out)\n}"
  },
  {
    "objectID": "materials/04-theming.html#apply-the-custom-theme-7",
    "href": "materials/04-theming.html#apply-the-custom-theme-7",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Apply the Custom Theme",
    "text": "Apply the Custom Theme\n\ng + \n  theme_asap_grid(\n    grid = \"all\"\n  )\n\nError in theme_asap_grid(grid = ‚Äúall‚Äù) :grid must be a character: ‚Äúnone‚Äù or any combination of ‚ÄúX‚Äù, ‚ÄúY‚Äù, ‚Äúx‚Äù and ‚Äúy‚Äù."
  },
  {
    "objectID": "materials/04-theming.html#recap",
    "href": "materials/04-theming.html#recap",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Recap",
    "text": "Recap\n\n\n\napply complete themes via theme_*() and modify theme defaults via theme()\nchange the appearance for all plots with theme_set() and theme_update()\n{systemfonts} allows to use non-default typefaces and register font variants\nuse the source code of complete themes to create a custom theme\nadd additional arguments to allow for different styles and settings"
  },
  {
    "objectID": "materials/04-theming.html#exercise-1",
    "href": "materials/04-theming.html#exercise-1",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Exercise",
    "text": "Exercise\n\n\nCreate a corporate or funny custom theme.\n\nMake use of an existing complete theme to get started.\nPick a non-default font (or multiple) for your theme.\nOptional: Try working with font variants.\nOptional: Add other helpful arguments to your theme_* function."
  },
  {
    "objectID": "materials/04-theming.html#exercise-1-1",
    "href": "materials/04-theming.html#exercise-1-1",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Exercise 1",
    "text": "Exercise 1\n\n\nCreate a corporate or funny custom theme.\n\nMake use of an existing complete theme to get started.\nPick a non-default font (or multiple).\nOptional: Try working with font variants.\nOptional: Add other helpful arguments to your theme_* function.\n\nShowcase your theme using some example graphics.\n\nSave the plots to disk and share them with the group.\nDid you add some additional arguments?Feel free to share your thoughts on ‚Äúwhy‚Äù and ‚Äúhow‚Äù."
  },
  {
    "objectID": "materials/04-theming.html#section",
    "href": "materials/04-theming.html#section",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "",
    "text": "C√©dric Scherer // posit::conf(2023)"
  },
  {
    "objectID": "materials/solutions/01-fundamentals-solutions.html#preparation",
    "href": "materials/solutions/01-fundamentals-solutions.html#preparation",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Preparation",
    "text": "Preparation\n\nlibrary(readr)\nlibrary(dplyr)\nlibrary(ggplot2)\n\n## data\nbikes <-\n  read_csv(\n    here::here(\"data\", \"london-bikes.csv\"),\n    col_types = \"Dcfffilllddddc\"\n  )\n\n## plot style\ntheme_set(theme_minimal(base_family = \"Asap SemiCondensed\", base_size = 18))\ntheme_update(\n  panel.grid.minor = element_blank()\n)"
  },
  {
    "objectID": "materials/solutions/01-fundamentals-solutions.html#exercise-1-1",
    "href": "materials/solutions/01-fundamentals-solutions.html#exercise-1-1",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Exercise 1",
    "text": "Exercise 1\n\n\nDiscuss / investigate with your neighbor:\n\nWhat are the differences between geom_line() and geom_path()?\nWhy can you use geom_smooth() and stat_smooth() interchangeably?\nWhat are the three ways to remove a legend from a ggplot?"
  },
  {
    "objectID": "materials/solutions/01-fundamentals-solutions.html#geom_line-versus-geom_path",
    "href": "materials/solutions/01-fundamentals-solutions.html#geom_line-versus-geom_path",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "geom_line() versus geom_path()",
    "text": "geom_line() versus geom_path()\n\n?geom_line\n\n\nDescription\n\ngeom_path() connects the observations in the order in which they appear in the data. geom_line() connects them in order of the variable on the x axis."
  },
  {
    "objectID": "materials/solutions/01-fundamentals-solutions.html#geom_line-versus-geom_path-1",
    "href": "materials/solutions/01-fundamentals-solutions.html#geom_line-versus-geom_path-1",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "geom_line() versus geom_path()",
    "text": "geom_line() versus geom_path()\n\nbikes_filtered <- \n  bikes |> \n  filter(year == 2015, month == 2, day_night == \"day\")"
  },
  {
    "objectID": "materials/solutions/01-fundamentals-solutions.html#geom_line-versus-geom_path-2",
    "href": "materials/solutions/01-fundamentals-solutions.html#geom_line-versus-geom_path-2",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "geom_line() versus geom_path()",
    "text": "geom_line() versus geom_path()\n\n\n\nggplot(bikes_filtered,\n       aes(x = humidity, y = temp)) +\n  geom_line() +\n  geom_point(aes(color = date), size = 4)\n\n\n\n\n\nggplot(bikes_filtered,\n       aes(x = humidity, y = temp)) +\n  geom_path() +\n  geom_point(aes(color = date), size = 4)"
  },
  {
    "objectID": "materials/solutions/01-fundamentals-solutions.html#geom_smooth-and-stat_smooth",
    "href": "materials/solutions/01-fundamentals-solutions.html#geom_smooth-and-stat_smooth",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "geom_smooth() and stat_smooth()",
    "text": "geom_smooth() and stat_smooth()\n\n?geom_smooth\n\n\nDescription\n\ngeom_smooth() and stat_smooth() are effectively aliases: they both use the same arguments. Use stat_smooth() if you want to display the results with a non-standard geom."
  },
  {
    "objectID": "materials/solutions/01-fundamentals-solutions.html#layer",
    "href": "materials/solutions/01-fundamentals-solutions.html#layer",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "layer()",
    "text": "layer()\n\n\nggplot() +\n  layer(\n    data = bikes, \n    mapping = aes(x = temp, y = count),\n    geom = \"point\", \n    stat = \"identity\", \n    position = \"identity\"\n  )"
  },
  {
    "objectID": "materials/solutions/01-fundamentals-solutions.html#layer-1",
    "href": "materials/solutions/01-fundamentals-solutions.html#layer-1",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "layer()",
    "text": "layer()\n\n\nggplot(\n    data = bikes, \n    mapping = aes(x = temp, y = count),\n  ) +\n  layer(\n    geom = \"point\", \n    stat = \"identity\", \n    position = \"identity\"\n  )"
  },
  {
    "objectID": "materials/solutions/01-fundamentals-solutions.html#geom_smooth-and-stat_smooth-1",
    "href": "materials/solutions/01-fundamentals-solutions.html#geom_smooth-and-stat_smooth-1",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "geom_smooth() and stat_smooth()",
    "text": "geom_smooth() and stat_smooth()\n\n\n\ngeom_smooth(\n  stat = \"smooth\",\n  position = \"identity\"\n)\n\n\nstat_smooth(\n  geom = \"smooth\",\n  position = \"identity\"\n)"
  },
  {
    "objectID": "materials/solutions/01-fundamentals-solutions.html#geom_smooth-and-stat_smooth-2",
    "href": "materials/solutions/01-fundamentals-solutions.html#geom_smooth-and-stat_smooth-2",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "geom_smooth() and stat_smooth()",
    "text": "geom_smooth() and stat_smooth()\n\n\n\nggplot(bikes,\n       aes(x = temp, y = count)) +\n  geom_point(alpha = .1) +\n  geom_smooth()\n\n\n\n\n\nggplot(bikes,\n       aes(x = temp, y = count)) +\n  geom_point(alpha = .1) +\n  stat_smooth()"
  },
  {
    "objectID": "materials/solutions/01-fundamentals-solutions.html#non-standard-geom",
    "href": "materials/solutions/01-fundamentals-solutions.html#non-standard-geom",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "‚ÄúNon-Standard Geom‚Äù",
    "text": "‚ÄúNon-Standard Geom‚Äù\n\nggplot(bikes, aes(x = temp, y = count)) +\n  geom_point(alpha = .1) +\n  stat_smooth(geom = \"pointrange\")"
  },
  {
    "objectID": "materials/solutions/01-fundamentals-solutions.html#non-standard-geom-1",
    "href": "materials/solutions/01-fundamentals-solutions.html#non-standard-geom-1",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "‚ÄúNon-Standard Geom‚Äù",
    "text": "‚ÄúNon-Standard Geom‚Äù\n\nggplot(bikes, aes(x = temp, y = count)) +\n  geom_point(alpha = .1) +\n  stat_smooth(geom = \"col\")"
  },
  {
    "objectID": "materials/solutions/01-fundamentals-solutions.html#non-standard-geom-2",
    "href": "materials/solutions/01-fundamentals-solutions.html#non-standard-geom-2",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "‚ÄúNon-Standard Geom‚Äù",
    "text": "‚ÄúNon-Standard Geom‚Äù\n\nggplot(bikes, aes(x = temp, y = count)) +\n  geom_point(alpha = .1) +\n  stat_smooth(geom = \"text\", aes(label = \"ü§ì\"), size = 4)"
  },
  {
    "objectID": "materials/solutions/01-fundamentals-solutions.html#geom_-versus-stat_",
    "href": "materials/solutions/01-fundamentals-solutions.html#geom_-versus-stat_",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "geom_* versus stat_*",
    "text": "geom_* versus stat_*\n\nggplot(bikes, aes(x = weather_type, fill = year)) + \n  geom_bar() # with `stat = \"count\", position = \"stack\"`"
  },
  {
    "objectID": "materials/solutions/01-fundamentals-solutions.html#geom_-versus-stat_-1",
    "href": "materials/solutions/01-fundamentals-solutions.html#geom_-versus-stat_-1",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "geom_* versus stat_*",
    "text": "geom_* versus stat_*\n\nggplot(bikes, aes(x = weather_type, fill = year)) + \n  stat_count() # with `geom = \"bar\", position = \"stack\"`"
  },
  {
    "objectID": "materials/solutions/01-fundamentals-solutions.html#remove-legends",
    "href": "materials/solutions/01-fundamentals-solutions.html#remove-legends",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Remove Legends",
    "text": "Remove Legends\n\nggplot(filter(bikes, year == \"2016\"), aes(x = date, y = count)) +\n  geom_line(aes(color = day_night, linetype = day_night)) +\n  geom_point(aes(fill = day_night), shape = 21)"
  },
  {
    "objectID": "materials/solutions/01-fundamentals-solutions.html#remove-legends-layer",
    "href": "materials/solutions/01-fundamentals-solutions.html#remove-legends-layer",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Remove Legends: Layer",
    "text": "Remove Legends: Layer\n\nggplot(filter(bikes, year == \"2016\"), aes(x = date, y = count)) +\n  geom_line(aes(color = day_night, linetype = day_night), show.legend = FALSE) +\n  geom_point(aes(fill = day_night), shape = 21)"
  },
  {
    "objectID": "materials/solutions/01-fundamentals-solutions.html#remove-legends-aesthetic",
    "href": "materials/solutions/01-fundamentals-solutions.html#remove-legends-aesthetic",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Remove Legends: Aesthetic",
    "text": "Remove Legends: Aesthetic\n\nggplot(filter(bikes, year == \"2016\"), aes(x = date, y = count)) +\n  geom_line(aes(color = day_night, linetype = day_night)) +\n  geom_point(aes(fill = day_night), shape = 21) +\n  scale_color_discrete(guide = \"none\")"
  },
  {
    "objectID": "materials/solutions/01-fundamentals-solutions.html#remove-legends-aesthetic-1",
    "href": "materials/solutions/01-fundamentals-solutions.html#remove-legends-aesthetic-1",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Remove Legends: Aesthetic",
    "text": "Remove Legends: Aesthetic\n\nggplot(filter(bikes, year == \"2016\"), aes(x = date, y = count)) +\n  geom_line(aes(color = day_night, linetype = day_night)) +\n  geom_point(aes(fill = day_night), shape = 21) +\n  guides(color = \"none\", linetype = guide_none())"
  },
  {
    "objectID": "materials/solutions/01-fundamentals-solutions.html#remove-legends-all",
    "href": "materials/solutions/01-fundamentals-solutions.html#remove-legends-all",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Remove Legends: All",
    "text": "Remove Legends: All\n\nggplot(filter(bikes, year == \"2016\"), aes(x = date, y = count)) +\n  geom_line(aes(color = day_night, linetype = day_night)) +\n  geom_point(aes(fill = day_night), shape = 21) +\n  theme(legend.position = \"none\")"
  },
  {
    "objectID": "materials/solutions/01-fundamentals-solutions.html#exercise-2-1",
    "href": "materials/solutions/01-fundamentals-solutions.html#exercise-2-1",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Exercise 2",
    "text": "Exercise 2\n\n\nExplore the TfL bike share data visually:\n\nCreate a time series of counts per day and night.\nDraw box and whisker plots of average temperatures per month.\nVisualize bike counts per weather type and period as bar chart.\n\nCombine the three plots with patchwork.\nExport the final graphic in a format of your choice."
  },
  {
    "objectID": "materials/solutions/01-fundamentals-solutions.html#time-series",
    "href": "materials/solutions/01-fundamentals-solutions.html#time-series",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Time Series",
    "text": "Time Series\n\nggplot(bikes, aes(x = date, y = count)) +\n  geom_line(aes(color = day_night))"
  },
  {
    "objectID": "materials/solutions/01-fundamentals-solutions.html#time-series-1",
    "href": "materials/solutions/01-fundamentals-solutions.html#time-series-1",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Time Series",
    "text": "Time Series"
  },
  {
    "objectID": "materials/solutions/01-fundamentals-solutions.html#time-series-2",
    "href": "materials/solutions/01-fundamentals-solutions.html#time-series-2",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Time Series",
    "text": "Time Series\n\ng1 <- \n  ggplot(bikes, aes(x = date, y = count)) +\n  geom_line(aes(color = day_night)) +\n  scale_x_date(date_breaks = \"4 months\", date_labels = \"%m/'%y\") +\n  scale_y_continuous(labels = scales::label_comma()) +\n  scale_color_manual(values = c(day = \"#FFA200\", night = \"#757BC7\")) +\n  labs(x = NULL, y = \"Rented bikes\", color = NULL)\n\ng1"
  },
  {
    "objectID": "materials/solutions/01-fundamentals-solutions.html#time-series-3",
    "href": "materials/solutions/01-fundamentals-solutions.html#time-series-3",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Time Series",
    "text": "Time Series"
  },
  {
    "objectID": "materials/solutions/01-fundamentals-solutions.html#box-and-whisker-plots",
    "href": "materials/solutions/01-fundamentals-solutions.html#box-and-whisker-plots",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Box and Whisker Plots",
    "text": "Box and Whisker Plots\n\nggplot(bikes, aes(x = month, y = temp)) +\n  geom_boxplot()"
  },
  {
    "objectID": "materials/solutions/01-fundamentals-solutions.html#box-and-whisker-plots-1",
    "href": "materials/solutions/01-fundamentals-solutions.html#box-and-whisker-plots-1",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Box and Whisker Plots",
    "text": "Box and Whisker Plots"
  },
  {
    "objectID": "materials/solutions/01-fundamentals-solutions.html#box-and-whisker-plots-2",
    "href": "materials/solutions/01-fundamentals-solutions.html#box-and-whisker-plots-2",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Box and Whisker Plots",
    "text": "Box and Whisker Plots\n\nggplot(bikes, aes(x = forcats::fct_reorder(month, -temp), y = temp)) +\n  geom_boxplot()"
  },
  {
    "objectID": "materials/solutions/01-fundamentals-solutions.html#box-and-whisker-plots-3",
    "href": "materials/solutions/01-fundamentals-solutions.html#box-and-whisker-plots-3",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Box and Whisker Plots",
    "text": "Box and Whisker Plots"
  },
  {
    "objectID": "materials/solutions/01-fundamentals-solutions.html#box-and-whisker-plots-4",
    "href": "materials/solutions/01-fundamentals-solutions.html#box-and-whisker-plots-4",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Box and Whisker Plots",
    "text": "Box and Whisker Plots\n\ng2 <- \n  ggplot(bikes, aes(x = lubridate::month(date, label = TRUE), y = temp)) +\n  geom_boxplot() +\n  scale_y_continuous(labels = scales::label_number(suffix = \"¬∞C\")) +\n  labs(x = NULL, y = \"Temperature\")\n\ng2"
  },
  {
    "objectID": "materials/solutions/01-fundamentals-solutions.html#box-and-whisker-plots-5",
    "href": "materials/solutions/01-fundamentals-solutions.html#box-and-whisker-plots-5",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Box and Whisker Plots",
    "text": "Box and Whisker Plots"
  },
  {
    "objectID": "materials/solutions/01-fundamentals-solutions.html#bar-chart",
    "href": "materials/solutions/01-fundamentals-solutions.html#bar-chart",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Bar Chart",
    "text": "Bar Chart\n\nggplot(bikes, aes(x = weather_type, y = count, fill = day_night)) + \n  geom_col()"
  },
  {
    "objectID": "materials/solutions/01-fundamentals-solutions.html#bar-chart-1",
    "href": "materials/solutions/01-fundamentals-solutions.html#bar-chart-1",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Bar Chart",
    "text": "Bar Chart"
  },
  {
    "objectID": "materials/solutions/01-fundamentals-solutions.html#bar-chart-2",
    "href": "materials/solutions/01-fundamentals-solutions.html#bar-chart-2",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Bar Chart",
    "text": "Bar Chart\n\nggplot(bikes, aes(x = weather_type, y = count, fill = day_night)) + \n  stat_summary(geom = \"col\")"
  },
  {
    "objectID": "materials/solutions/01-fundamentals-solutions.html#bar-chart-3",
    "href": "materials/solutions/01-fundamentals-solutions.html#bar-chart-3",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Bar Chart",
    "text": "Bar Chart"
  },
  {
    "objectID": "materials/solutions/01-fundamentals-solutions.html#bar-chart-4",
    "href": "materials/solutions/01-fundamentals-solutions.html#bar-chart-4",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Bar Chart",
    "text": "Bar Chart\n\nggplot(bikes, aes(x = weather_type, y = count, fill = day_night)) + \n  stat_summary(geom = \"col\", fun = \"sum\", position = \"stack\")"
  },
  {
    "objectID": "materials/solutions/01-fundamentals-solutions.html#bar-chart-5",
    "href": "materials/solutions/01-fundamentals-solutions.html#bar-chart-5",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Bar Chart",
    "text": "Bar Chart"
  },
  {
    "objectID": "materials/solutions/01-fundamentals-solutions.html#bar-chart-6",
    "href": "materials/solutions/01-fundamentals-solutions.html#bar-chart-6",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Bar Chart",
    "text": "Bar Chart\n\nbikes |>\n  group_by(weather_type, day_night) |>\n  summarize(count = sum(count)) |>\n  ggplot(aes(x = weather_type, y = count, fill = day_night)) + \n  geom_col()"
  },
  {
    "objectID": "materials/solutions/01-fundamentals-solutions.html#bar-chart-7",
    "href": "materials/solutions/01-fundamentals-solutions.html#bar-chart-7",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Bar Chart",
    "text": "Bar Chart"
  },
  {
    "objectID": "materials/solutions/01-fundamentals-solutions.html#bar-chart-8",
    "href": "materials/solutions/01-fundamentals-solutions.html#bar-chart-8",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Bar Chart",
    "text": "Bar Chart\n\nggplot(bikes, aes(x = weather_type, y = count, fill = day_night)) + \n  stat_summary(geom = \"col\", fun = \"sum\", position = \"dodge\")"
  },
  {
    "objectID": "materials/solutions/01-fundamentals-solutions.html#bar-chart-9",
    "href": "materials/solutions/01-fundamentals-solutions.html#bar-chart-9",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Bar Chart",
    "text": "Bar Chart"
  },
  {
    "objectID": "materials/solutions/01-fundamentals-solutions.html#bar-chart-10",
    "href": "materials/solutions/01-fundamentals-solutions.html#bar-chart-10",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Bar Chart",
    "text": "Bar Chart\n\nggplot(bikes, aes(x = weather_type, y = count, fill = day_night)) + \n  stat_summary(\n    geom = \"col\", fun = \"sum\", \n    width = .7,\n    position = position_dodge(\n      width = .8, preserve = \"single\"\n    )\n  )"
  },
  {
    "objectID": "materials/solutions/01-fundamentals-solutions.html#bar-chart-11",
    "href": "materials/solutions/01-fundamentals-solutions.html#bar-chart-11",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Bar Chart",
    "text": "Bar Chart"
  },
  {
    "objectID": "materials/solutions/01-fundamentals-solutions.html#bar-chart-12",
    "href": "materials/solutions/01-fundamentals-solutions.html#bar-chart-12",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Bar Chart",
    "text": "Bar Chart\n\nggplot(bikes, aes(x = weather_type, y = count, fill = day_night)) + \n  stat_summary(\n    geom = \"col\", fun = \"sum\", \n    width = .7,\n    position = position_dodge2(\n      padding = .2, preserve = \"single\"\n    )\n  )"
  },
  {
    "objectID": "materials/solutions/01-fundamentals-solutions.html#bar-chart-13",
    "href": "materials/solutions/01-fundamentals-solutions.html#bar-chart-13",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Bar Chart",
    "text": "Bar Chart"
  },
  {
    "objectID": "materials/solutions/01-fundamentals-solutions.html#bar-chart-14",
    "href": "materials/solutions/01-fundamentals-solutions.html#bar-chart-14",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Bar Chart",
    "text": "Bar Chart\n\ng3 <- ggplot(bikes, aes(x = weather_type, y = count, fill = day_night)) + \n  stat_summary(\n    geom = \"col\", fun = \"sum\", \n    width = .7,\n    position = position_dodge2(\n      padding = .2, preserve = \"single\"\n    )\n  ) +\n  scale_y_continuous(labels = scales::label_comma(scale = 1/10^6, suffix = \"M\")) +\n  scale_fill_manual(\n    values = c(day = \"#FFA200\", night = \"#757bc7\")\n  ) +\n  labs(x = NULL, y = \"Rented bikes\", fill = NULL) +\n  theme(\n    panel.grid.major.x = element_blank()\n  )\n\ng3"
  },
  {
    "objectID": "materials/solutions/01-fundamentals-solutions.html#bar-chart-15",
    "href": "materials/solutions/01-fundamentals-solutions.html#bar-chart-15",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Bar Chart",
    "text": "Bar Chart"
  },
  {
    "objectID": "materials/solutions/01-fundamentals-solutions.html#combine-plots",
    "href": "materials/solutions/01-fundamentals-solutions.html#combine-plots",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Combine Plots",
    "text": "Combine Plots\n\nlibrary(patchwork)\ng2 + (g1 / g3) + plot_layout(guides = \"collect\", widths = c(.7, 1))"
  },
  {
    "objectID": "materials/solutions/01-fundamentals-solutions.html#combine-plots-1",
    "href": "materials/solutions/01-fundamentals-solutions.html#combine-plots-1",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Combine Plots",
    "text": "Combine Plots\n\nlibrary(patchwork)\n(g2 + g1) / g3 + plot_layout(guides = \"collect\")"
  },
  {
    "objectID": "materials/solutions/01-fundamentals-solutions.html#combine-plots-2",
    "href": "materials/solutions/01-fundamentals-solutions.html#combine-plots-2",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Combine Plots",
    "text": "Combine Plots\n\nlibrary(patchwork)\n(g2 + g1 + plot_layout(widths = c(.7, 1))) / g3 + plot_layout(guides = \"collect\")"
  },
  {
    "objectID": "materials/solutions/01-fundamentals-solutions.html#save-multipanel-plot",
    "href": "materials/solutions/01-fundamentals-solutions.html#save-multipanel-plot",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Save Multipanel Plot",
    "text": "Save Multipanel Plot\n\nggsave(\"bikes-panel.png\", width = 14, height = 9, dpi = 600, bg = \"white\")"
  },
  {
    "objectID": "materials/solutions/02-text-solutions.html#exercise-1-1",
    "href": "materials/solutions/02-text-solutions.html#exercise-1-1",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Exercise 1",
    "text": "Exercise 1\n\n\nTake a look at the following visualization.\n\nFor each group of text labels, note how one would add and modify them.\nHow could one automate the placement of the labels in- and outside of the bars?\n\nCreate the visualization, as close as possible."
  },
  {
    "objectID": "materials/solutions/02-text-solutions.html#preparation",
    "href": "materials/solutions/02-text-solutions.html#preparation",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Preparation",
    "text": "Preparation\n\nlibrary(readr)\nlibrary(dplyr)\nlibrary(ggplot2)\n\n## data\nbikes <-\n  read_csv(\n    here::here(\"data\", \"london-bikes.csv\"),\n    col_types = \"Dcfffilllddddc\"\n  )\n\n## plot style\ntheme_set(theme_minimal(base_family = \"Asap SemiCondensed\", base_size = 14))"
  },
  {
    "objectID": "materials/solutions/02-text-solutions.html#horizontal-bar-chart",
    "href": "materials/solutions/02-text-solutions.html#horizontal-bar-chart",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Horizontal Bar Chart",
    "text": "Horizontal Bar Chart\n\np <- \n  bikes |> \n  filter(!is.na(weather_type), year == \"2015\") |> \n  mutate(weather_type = forcats::fct_reorder(weather_type, count, .fun = sum)) |> \n  ggplot(aes(x = count, y = weather_type)) +\n  stat_summary(\n    geom = \"bar\", fun = sum,\n    color = \"grey20\", fill = \"beige\", width = .7\n  ) +\n  scale_x_continuous(expand = c(0, 0)) +\n  coord_cartesian(clip = \"off\") +\n  theme_minimal(base_size = 14, base_family = \"Asap SemiCondensed\") +\n  theme(\n    panel.grid.major.y = element_blank(),\n    panel.grid.minor = element_blank()\n  )\n\np"
  },
  {
    "objectID": "materials/solutions/02-text-solutions.html#add-count-annotations",
    "href": "materials/solutions/02-text-solutions.html#add-count-annotations",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Add Count Annotations",
    "text": "Add Count Annotations\n\np +\n  stat_summary(\n    geom = \"text\", fun = sum,\n    aes(label = after_stat(x)),\n    family = \"Asap SemiCondensed\"\n  )"
  },
  {
    "objectID": "materials/solutions/02-text-solutions.html#add-count-annotations-1",
    "href": "materials/solutions/02-text-solutions.html#add-count-annotations-1",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Add Count Annotations",
    "text": "Add Count Annotations\n\np +\n  stat_summary(\n    geom = \"text\", fun = sum,\n    aes(label = after_stat(x),\n        hjust = after_stat(x) > .5*10^6),\n    family = \"Asap SemiCondensed\"\n  )"
  },
  {
    "objectID": "materials/solutions/02-text-solutions.html#add-count-annotations-2",
    "href": "materials/solutions/02-text-solutions.html#add-count-annotations-2",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Add Count Annotations",
    "text": "Add Count Annotations\n\np +\n  stat_summary(\n    geom = \"text\", fun = sum,\n    aes(label = after_stat(paste0(\"  \", sprintf(\"%2.2f\", x / 10^6), \"M  \")),\n        hjust = after_stat(x) > .5*10^6),\n    family = \"Asap SemiCondensed\"\n  )"
  },
  {
    "objectID": "materials/solutions/02-text-solutions.html#polish-axes",
    "href": "materials/solutions/02-text-solutions.html#polish-axes",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Polish Axes",
    "text": "Polish Axes\n\np +\n  stat_summary(\n    geom = \"text\", fun = sum,\n    aes(label = after_stat(paste0(\"  \", sprintf(\"%2.2f\", x / 10^6), \"M  \")),\n        hjust = after_stat(x) > .5*10^6),\n    family = \"Asap SemiCondensed\"\n  ) +\n  scale_x_continuous(\n    expand = c(0, 0), name = \"**Reported bike shares**, in millions\", \n    breaks = 0:4*10^6, labels = c(\"0\", paste0(1:4, \"M\"))\n  ) +\n  theme(\n    axis.title.x = ggtext::element_markdown(hjust = 0, face = \"italic\")\n  )"
  },
  {
    "objectID": "materials/solutions/02-text-solutions.html#polish-axes-labels",
    "href": "materials/solutions/02-text-solutions.html#polish-axes-labels",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Polish Axes Labels",
    "text": "Polish Axes Labels\n\np +\n  stat_summary(\n    geom = \"text\", fun = sum,\n    aes(label = after_stat(paste0(\"  \", sprintf(\"%2.2f\", x / 10^6), \"M  \")),\n        hjust = after_stat(x) > .5*10^6),\n    family = \"Asap SemiCondensed\"\n  ) +\n  scale_x_continuous(\n    expand = c(0, 0), name = \"**Reported bike shares**, in millions\", \n    breaks = 0:4*10^6, labels = c(\"0\", paste0(1:4, \"M\"))\n  ) +\n  scale_y_discrete(\n    labels = stringr::str_to_sentence, name = NULL\n  ) +\n  theme(\n    axis.title.x = ggtext::element_markdown(hjust = 0, face = \"italic\"),\n    axis.text.y = element_text(color = \"black\", size = rel(1.2))\n  )"
  },
  {
    "objectID": "materials/solutions/02-text-solutions.html#add-titles",
    "href": "materials/solutions/02-text-solutions.html#add-titles",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Add Titles",
    "text": "Add Titles\n\np +\n  stat_summary(\n    geom = \"text\", fun = sum,\n    aes(label = after_stat(paste0(\"  \", sprintf(\"%2.2f\", x / 10^6), \"M  \")),\n        hjust = after_stat(x) > .5*10^6),\n    family = \"Asap SemiCondensed\"\n  ) +\n  scale_x_continuous(\n    expand = c(0, 0), name = \"**Reported bike shares**, in millions\", \n    breaks = 0:4*10^6, labels = c(\"0\", paste0(1:4, \"M\"))\n  ) +\n  scale_y_discrete(\n    labels = stringr::str_to_sentence, name = NULL\n  ) +\n  labs(\n    title = \"Fair weather preferred‚Äîeven in London\",\n    subtitle = \"Less than 10% of TfL bikes shares have been reported on rainy, cloudy, or snowy days in 2015.\",\n    caption = \"**Data:** Transport for London / freemeteo.com\"\n  ) +\n  theme(\n    axis.title.x = ggtext::element_markdown(hjust = 0, face = \"italic\"),\n    axis.text.y = element_text(color = \"black\", size = rel(1.2)),\n    plot.title.position = \"plot\",\n    plot.title = element_text(face = \"bold\"),\n    plot.subtitle = element_text(margin = margin(b = 20)),\n    plot.caption = ggtext::element_markdown(color = \"grey40\")\n  )"
  },
  {
    "objectID": "materials/solutions/02-text-solutions.html#full-code",
    "href": "materials/solutions/02-text-solutions.html#full-code",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Full Code",
    "text": "Full Code\n\nbikes |> \n  filter(year == \"2015\") |> \n  mutate(weather_type = forcats::fct_reorder(weather_type, count, .fun = sum)) |> \n  ggplot(aes(x = count, y = weather_type)) +\n  stat_summary(\n    geom = \"bar\", fun = sum, \n    color = \"grey20\", fill = \"beige\", width = .7\n  ) +\n  stat_summary(\n    geom = \"text\", fun = sum,\n    aes(\n      label = after_stat(paste0(\"  \", sprintf(\"%2.2f\", x / 10^6), \"M  \")),\n      hjust = after_stat(x) > .5*10^6\n    ),\n    family = \"Asap SemiCondensed\"\n  ) +\n  scale_x_continuous(\n    breaks = 0:4*10^6,\n    labels = c(\"0\", paste0(1:4, \"M\")),\n    expand = c(0, 0), \n    name = \"**Reported bike shares**, in millions\"\n  ) +\n  scale_y_discrete(labels = stringr::str_to_sentence, name = NULL) +\n  coord_cartesian(clip = \"off\") +\n  labs(\n    title = \"Fair weather preferred‚Äîeven in London\",\n    subtitle = \"Less than 10% of TfL bikes shares have been reported on rainy, cloudy, or snowy days in 2015.\",\n    caption = \"**Data:** Transport for London / freemeteo.com\"\n  ) +\n  theme_minimal(base_size = 14, base_family = \"Asap SemiCondensed\") +\n  theme(\n    panel.grid.major.y = element_blank(),\n    panel.grid.minor = element_blank(),\n    axis.title.x = ggtext::element_markdown(hjust = 0, face = \"italic\"),\n    axis.text.y = element_text(color = \"black\", size = rel(1.2)),\n    plot.title = element_text(face = \"bold\"),\n    plot.subtitle = element_text(margin = margin(b = 20)),\n    plot.title.position = \"plot\",\n    plot.caption = ggtext::element_markdown(color = \"grey40\")\n  )"
  },
  {
    "objectID": "materials/solutions/02-text-solutions.html#exercise-2-1",
    "href": "materials/solutions/02-text-solutions.html#exercise-2-1",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Exercise 2",
    "text": "Exercise 2\n\nCreate a function that plots the famous Gapminder chart, highlighting one of the continents.\nExtend the code in 02-text-exercises.qmd to annotate a continent your choice of with {ggforce}.\nTurn the code into a function with the utility to annotate any continent.\nOptional: Create a second function to highlight a country. :::"
  },
  {
    "objectID": "materials/solutions/02-text-solutions.html#gapminder-bubble-chart",
    "href": "materials/solutions/02-text-solutions.html#gapminder-bubble-chart",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Gapminder Bubble Chart",
    "text": "Gapminder Bubble Chart\n\n# install.packages(\"gapminder\")\n\nlibrary(gapminder)\nlibrary(dplyr)\nlibrary(ggplot2)\n\ngm2007 <- filter(gapminder, year == 2007)\n\nggplot(gm2007, aes(x = gdpPercap, y = lifeExp)) +\n  geom_point(\n    aes(size = pop), alpha = .5\n  ) +\n  scale_x_log10(\n    breaks = c(500, 2000, 8000, 32000),\n    labels = scales::label_dollar(accuracy = 1)\n  ) +\n  scale_size(\n    range = c(1, 12), name = \"Population:\", \n    breaks = c(10, 100, 1000)*1000000, \n    labels = scales::label_comma(scale = 1 / 10^6, suffix = \"M\")\n  ) +\n  labs(x = \"GDP per capita\", y = \"Life expectancy\") +\n  theme_minimal(base_family = \"Asap SemiCondensed\", base_size = 15) +\n  theme(panel.grid.minor = element_blank())"
  },
  {
    "objectID": "materials/solutions/02-text-solutions.html#annotate-continents",
    "href": "materials/solutions/02-text-solutions.html#annotate-continents",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Annotate Continents",
    "text": "Annotate Continents\n\nggplot(gm2007, aes(x = gdpPercap, y = lifeExp)) +\n  geom_point(\n    aes(size = pop), alpha = .5, color = \"grey60\"\n  ) +\n  geom_point( \n    data = filter(gm2007, continent == \"Americas\"),\n    aes(size = pop), shape = 1, stroke = .7\n  ) +\n  ggforce::geom_mark_hull(\n    aes(label = continent, filter = continent == \"Americas\"),\n    expand = unit(10, \"pt\"), con.cap = unit(1, \"mm\"),\n    label.family = \"Asap SemiCondensed\", label.fontsize = 15\n  ) +\n  scale_x_log10(\n    breaks = c(500, 2000, 8000, 32000),\n    labels = scales::label_dollar(accuracy = 1)\n  ) +\n  scale_size(\n    range = c(1, 12), name = \"Population:\",\n    breaks = c(10, 100, 1000)*1000000,\n    labels = scales::label_comma(scale = 1 / 10^6, suffix = \"M\")\n  ) +\n  labs(x = \"GDP per capita\", y = \"Life expectancy\") +\n  theme_minimal(base_family = \"Asap SemiCondensed\", base_size = 15) +\n  theme(panel.grid.minor = element_blank())"
  },
  {
    "objectID": "materials/solutions/02-text-solutions.html#function-to-highlight-a-continent",
    "href": "materials/solutions/02-text-solutions.html#function-to-highlight-a-continent",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Function to Highlight a Continent",
    "text": "Function to Highlight a Continent\n\ndraw_gp_continent <- function(grp) {\n  \n  ggplot(gm2007, aes(x = gdpPercap, y = lifeExp)) + \n    geom_point( \n      aes(size = pop), alpha = .5, color = \"grey60\"\n    ) +\n    geom_point( \n      data = filter(gm2007, continent == grp),\n      aes(size = pop), shape = 1, stroke = .7\n    ) +\n    ggforce::geom_mark_hull(\n      aes(label = continent, filter = continent == grp),\n      expand = unit(10, \"pt\"), con.cap = unit(1, \"mm\"),\n      label.family = \"Asap SemiCondensed\", label.fontsize = 15\n    ) +\n    scale_x_log10(\n      breaks = c(500, 2000, 8000, 32000),\n      labels = scales::label_dollar(accuracy = 1)\n    ) +\n    scale_size(\n      range = c(1, 12), name = \"Population:\", \n      breaks = c(10, 100, 1000)*1000000, \n      labels = scales::label_comma(scale = 1 / 10^6, suffix = \"M\")\n    ) +\n    labs(x = \"GDP per capita\", y = \"Life expectancy\") +\n    theme_minimal(base_family = \"Asap SemiCondensed\", base_size = 15) +\n    theme(panel.grid.minor = element_blank())\n  \n}"
  },
  {
    "objectID": "materials/solutions/02-text-solutions.html#function-to-highlight-a-country",
    "href": "materials/solutions/02-text-solutions.html#function-to-highlight-a-country",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Function to Highlight a Country",
    "text": "Function to Highlight a Country\n\ndraw_gp_country <- function(grp) {\n  \n  ggplot(gm2007, aes(x = gdpPercap, y = lifeExp)) + \n    geom_point( \n      aes(size = pop), alpha = .5, color = \"grey60\"\n    ) +\n    ggforce::geom_mark_circle(\n      aes(label = country, filter = country == grp),\n      expand = unit(15, \"pt\"), con.cap = unit(0, \"mm\"),\n      # expand = unit(0, \"pt\"), con.cap = unit(0, \"mm\"),\n      label.family = \"Asap SemiCondensed\", label.fontsize = 15\n    ) +\n    geom_point( \n      data = filter(gm2007, country == grp),\n      aes(size = pop), color = \"#9C55E3\", show.legend = FALSE\n    ) +\n    scale_x_log10(\n      breaks = c(500, 2000, 8000, 32000),\n      labels = scales::label_dollar(accuracy = 1)\n    ) +\n    scale_size(\n      range = c(1, 12), name = \"Population:\", \n      breaks = c(10, 100, 1000)*1000000, \n      labels = scales::label_comma(scale = 1 / 10^6, suffix = \"M\")\n    ) +\n    labs(x = \"GDP per capita\", y = \"Life expectancy\") +\n    theme_minimal(base_family = \"Asap SemiCondensed\", base_size = 15) +\n    theme(panel.grid.minor = element_blank())\n  \n}"
  },
  {
    "objectID": "materials/solutions/03-colors-solutions.html#exercise-1-1",
    "href": "materials/solutions/03-colors-solutions.html#exercise-1-1",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Exercise 1",
    "text": "Exercise 1\n\n\nAdd colors to our bar chart from the last exercise:\nEncode the bars and direct labels by color for ‚Äúfair weather‚Äù (clear, scattered clouds, broken clouds) and ‚Äúgrey weather‚Äù (rain, cloudy, snow)\nUse the same colors to encode the respective text bits in the title (‚ÄúFair weather preferred‚Äù) and subtitle (‚Äúrainy, cloudy, or snowy days‚Äù)."
  },
  {
    "objectID": "materials/solutions/03-colors-solutions.html#preparation",
    "href": "materials/solutions/03-colors-solutions.html#preparation",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Preparation",
    "text": "Preparation\n\nlibrary(readr)\nlibrary(dplyr)\nlibrary(ggplot2)\n\n## data\nbikes <-\n  read_csv(\n    here::here(\"data\", \"london-bikes.csv\"),\n    col_types = \"Dcfffilllddddc\"\n  )"
  },
  {
    "objectID": "materials/solutions/03-colors-solutions.html#previous-bar-chart",
    "href": "materials/solutions/03-colors-solutions.html#previous-bar-chart",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Previous Bar Chart",
    "text": "Previous Bar Chart\n\nbikes |> \n  filter(year == \"2015\") |> \n  mutate(weather_type = forcats::fct_reorder(weather_type, count, .fun = sum)) |> \n  ggplot(aes(x = count, y = weather_type)) +\n  stat_summary(\n    geom = \"bar\", fun = sum, \n    color = \"grey20\", fill = \"beige\", width = .7\n  ) +\n  stat_summary(\n    geom = \"text\", fun = sum,\n    aes(\n      label = after_stat(paste0(\"  \", sprintf(\"%2.2f\", x / 10^6), \"M  \")),\n      hjust = after_stat(x) > .5*10^6\n    ),\n    family = \"Asap SemiCondensed\"\n  ) +\n  scale_x_continuous(\n    expand = c(0, 0), name = \"**Reported bike shares**, in millions\", \n    breaks = 0:4*10^6, labels = c(\"0\", paste0(1:4, \"M\"))\n  ) +\n  scale_y_discrete(labels = stringr::str_to_sentence, name = NULL) +\n  coord_cartesian(clip = \"off\") +\n  labs(\n    title = \"Fair weather preferred‚Äîeven in London\",\n    subtitle = \"Less than 10% of TfL bikes shares have been reported on rainy, cloudy, or snowy days in 2015.\",\n    caption = \"**Data:** Transport for London / freemeteo.com\"\n  ) +\n  theme_minimal(base_size = 14, base_family = \"Asap SemiCondensed\") +\n  theme(\n    panel.grid.major.y = element_blank(),\n    panel.grid.minor = element_blank(),\n    axis.title.x = ggtext::element_markdown(hjust = 0, face = \"italic\"),\n    axis.text.y = element_text(color = \"black\", size = rel(1.2)),\n    plot.title = element_text(face = \"bold\"),\n    plot.subtitle = element_text(margin = margin(b = 20)),\n    plot.title.position = \"plot\",\n    plot.caption = ggtext::element_markdown(color = \"grey40\")\n  )"
  },
  {
    "objectID": "materials/solutions/03-colors-solutions.html#adjust-geom-colors",
    "href": "materials/solutions/03-colors-solutions.html#adjust-geom-colors",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Adjust Geom Colors",
    "text": "Adjust Geom Colors\n\nbikes |> \n  filter(year == \"2015\") |> \n  mutate(weather_type = forcats::fct_reorder(weather_type, count, .fun = sum)) |> \n  ggplot(aes(x = count, y = weather_type)) +\n  stat_summary(\n    fun = sum, geom = \"bar\", na.rm = TRUE,\n    aes(color = weather_type %in% c(\"rain\", \"cloudy\", \"snowfall\"),\n        fill = after_scale(prismatic::clr_lighten(color, .9))),\n    width = .7\n  ) +\n  stat_summary(\n    fun = sum, geom = \"text\", \n    aes(\n      label = after_stat(paste0(\"  \", sprintf(\"%2.2f\", x / 10^6), \"M  \")),\n      color = weather_type %in% c(\"rain\", \"cloudy\", \"snowfall\"),\n      hjust = after_stat(x) > .5*10^6\n    ),\n    family = \"Asap SemiCondensed\"\n  ) +\n  scale_x_continuous(\n    expand = c(0, 0), name = \"**Reported bike shares**, in millions\", \n    breaks = 0:4*10^6, labels = c(\"0\", paste0(1:4, \"M\"))\n  ) +\n  scale_y_discrete(labels = stringr::str_to_sentence, name = NULL) +\n  scale_color_manual(values = c(\"#E2A30A\", \"#007CB1\"), guide = \"none\") +\n  coord_cartesian(clip = \"off\") +\n  labs(\n    title = \"Fair weather preferred‚Äîeven in London\",\n    subtitle = \"Less than 10% of TfL bikes shares have been reported on rainy, cloudy, or snowy days in 2015.\",\n    caption = \"**Data:** Transport for London / freemeteo.com\"\n  ) +\n  theme_minimal(base_size = 14, base_family = \"Asap SemiCondensed\") +\n  theme(\n    panel.grid.major.y = element_blank(),\n    panel.grid.minor = element_blank(),\n    axis.title.x = ggtext::element_markdown(hjust = 0, face = \"italic\"),\n    axis.text.y = element_text(color = \"black\", size = rel(1.2)),\n    plot.title = element_text(face = \"bold\"),\n    plot.subtitle = element_text(margin = margin(b = 20)),\n    plot.title.position = \"plot\",\n    plot.caption = ggtext::element_markdown(color = \"grey40\")\n  )"
  },
  {
    "objectID": "materials/solutions/03-colors-solutions.html#adjust-titles",
    "href": "materials/solutions/03-colors-solutions.html#adjust-titles",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Adjust Titles",
    "text": "Adjust Titles\n\nbikes |> \n  filter(!is.na(weather_type), year == \"2015\") |> \n  mutate(weather_type = forcats::fct_reorder(weather_type, count, .fun = sum)) |> \n  ggplot(aes(x = count, y = weather_type)) +\n  stat_summary(\n    fun = sum, geom = \"bar\", na.rm = TRUE,\n    aes(color = weather_type %in% c(\"rain\", \"cloudy\", \"snowfall\"),\n        fill = after_scale(prismatic::clr_lighten(color, .9))),\n    width = .7\n  ) +\n  stat_summary(\n    fun = sum, geom = \"text\", \n    aes(\n      label = after_stat(paste0(\"  \", sprintf(\"%2.2f\", x / 10^6), \"M  \")),\n      color = weather_type %in% c(\"rain\", \"cloudy\", \"snowfall\"),\n      hjust = after_stat(x) > .5*10^6\n    ),\n    family = \"Asap SemiCondensed\"\n  ) +\n  scale_x_continuous(\n    expand = c(0, 0), name = \"**Reported bike shares**, in millions\", \n    breaks = 0:4*10^6, labels = c(\"0\", paste0(1:4, \"M\"))\n  ) +\n  scale_y_discrete(labels = stringr::str_to_sentence, name = NULL) +\n  scale_color_manual(values = c(\"#E2A30A\", \"#007CB1\"), guide = \"none\") +\n  coord_cartesian(clip = \"off\") +\n  labs(\n    title = \"<span style='color:#E2A30A;'>Fair weather preferred</span>‚Äîeven in London\",\n    subtitle = \"Less than 10% of TfL bikes shares have been reported on <span style='color:#007CB1;'>rainy, cloudy, or snowy days</span> in 2015.\",\n    caption = \"**Data:** Transport for London / freemeteo.com\"\n  ) +\n  theme_minimal(base_size = 14, base_family = \"Asap SemiCondensed\") +\n  theme(\n    panel.grid.major.y = element_blank(),\n    panel.grid.minor = element_blank(),\n    axis.title.x = ggtext::element_markdown(hjust = 0, face = \"italic\"),\n    axis.text.y = element_text(color = \"black\", size = rel(1.2)),\n    plot.title = ggtext::element_markdown(face = \"bold\"),\n    plot.subtitle = ggtext::element_markdown(margin = margin(b = 20)),\n    plot.title.position = \"plot\",\n    plot.caption = ggtext::element_markdown(color = \"grey40\")\n  )"
  },
  {
    "objectID": "materials/solutions/03-colors-solutions.html#exercise-2-1",
    "href": "materials/solutions/03-colors-solutions.html#exercise-2-1",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Exercise 2",
    "text": "Exercise 2\n\n\nCreate a plot of your choice with a sequential (non-default) color palette.\n\nInspect the HCL spectrum. Adjust the palette if needed.\nTest the palette with regard to colorblindness. Adjust the palette if needed.\nSave and share the graphic."
  },
  {
    "objectID": "materials/solutions/03-colors-solutions.html#heatmap",
    "href": "materials/solutions/03-colors-solutions.html#heatmap",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Heatmap",
    "text": "Heatmap\n\nggplot(filter(bikes, year == \"2016\"), \n       aes(x = lubridate::wday(date, label = TRUE), \n           y = forcats::fct_rev(lubridate::month(date, label = TRUE)),\n           z = count)) +\n  stat_summary_2d(geom = \"tile\", fun = mean) +\n  facet_wrap(~ day_night)"
  },
  {
    "objectID": "materials/solutions/03-colors-solutions.html#heatmap-1",
    "href": "materials/solutions/03-colors-solutions.html#heatmap-1",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Heatmap",
    "text": "Heatmap\n\np <- \n  ggplot(filter(bikes, year == \"2016\"), \n         aes(x = lubridate::wday(date, label = TRUE), \n             y = forcats::fct_rev(lubridate::month(date, label = TRUE)),\n             z = count)) +\n  stat_summary_2d(geom = \"tile\", fun = mean, color = \"white\", linewidth = .7) +\n  facet_wrap(~ day_night, labeller = labeller(day_night = stringr::str_to_title)) +\n  coord_cartesian(expand = FALSE, clip = \"off\") +\n  labs(x = NULL, y = NULL, fill = \"Average TfL bike shares:\") +\n  guides(fill = guide_colorbar(title.position = \"top\", title.hjust = .5)) +\n  theme_minimal(base_size = 15, base_family = \"Spline Sans\") +\n  theme(\n    axis.text.y = element_text(hjust = 0),\n    strip.text = element_text(face = \"bold\", hjust = 0, size = rel(1.1)),\n    panel.spacing = unit(1.7, \"lines\"),\n    legend.position = \"bottom\",\n    legend.key.width = unit(6, \"lines\"),\n    legend.key.height = unit(.6, \"lines\"),\n    legend.title = element_text(size = rel(.9)),\n    legend.box.margin = margin(t = -10)\n  )\n\np"
  },
  {
    "objectID": "materials/solutions/03-colors-solutions.html#heatmap-2",
    "href": "materials/solutions/03-colors-solutions.html#heatmap-2",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Heatmap",
    "text": "Heatmap\n\np <- p +\n  rcartocolor::scale_fill_carto_c(\n    palette = \"BluYl\",\n    breaks = 0:7*5000,\n    labels = scales::label_comma()\n  )\n\np"
  },
  {
    "objectID": "materials/solutions/03-colors-solutions.html#emulate-cvd",
    "href": "materials/solutions/03-colors-solutions.html#emulate-cvd",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Emulate CVD",
    "text": "Emulate CVD\n\ncolorblindr::cvd_grid(p)"
  },
  {
    "objectID": "materials/solutions/03-colors-solutions.html#evaluate-hcl-spectrum",
    "href": "materials/solutions/03-colors-solutions.html#evaluate-hcl-spectrum",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Evaluate HCL Spectrum",
    "text": "Evaluate HCL Spectrum\n\ncolorspace::specplot(\n  rcartocolor::carto_pal(\n    n = 100, name = \"BluYl\"\n  )\n)"
  },
  {
    "objectID": "materials/solutions/03-colors-solutions.html#export-graphic",
    "href": "materials/solutions/03-colors-solutions.html#export-graphic",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Export Graphic",
    "text": "Export Graphic\n\nggsave(\"bikes-heatmap.png\", width = 7.5, height = 4.7, dpi = 600, bg = \"white\")\n\n\n\nThe final PNG graphic.\nC√©dric Scherer // posit::conf(2023)"
  },
  {
    "objectID": "materials/solutions/04-theming-solutions.html#exercise-1",
    "href": "materials/solutions/04-theming-solutions.html#exercise-1",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Exercise",
    "text": "Exercise\n\n\nCreate a corporate or funny custom theme.\n\nMake use of an existing complete theme to get started.\nPick a non-default font (or multiple) for your theme.\nOptional: Try working with font variants.\nOptional: Add other helpful arguments to your theme_* function."
  },
  {
    "objectID": "materials/solutions/04-theming-solutions.html#preparation",
    "href": "materials/solutions/04-theming-solutions.html#preparation",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Preparation",
    "text": "Preparation\n\nlibrary(readr)\nlibrary(dplyr)\nlibrary(ggplot2)\n\n## data\nbikes <-\n  read_csv(\n    here::here(\"data\", \"london-bikes.csv\"),\n    col_types = \"Dcfffilllddddc\"\n  )"
  },
  {
    "objectID": "materials/solutions/04-theming-solutions.html#custom-theme",
    "href": "materials/solutions/04-theming-solutions.html#custom-theme",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Custom Theme",
    "text": "Custom Theme\n\ntheme_bulls <- function(base_size = 18, base_family = \"College Block\", \n                        base_line_size = base_size/22, base_rect_size = base_size/22) {\n  \n  theme_bw(base_size = base_size, base_family = base_family, \n           base_line_size = base_line_size, base_rect_size = base_rect_size) + \n    theme( \n      plot.title = element_text(size = rel(2), color = \"white\", margin = margin(b = base_size/2)),\n      plot.subtitle = element_text(margin = margin(t = -base_size/4, b = base_size/2)),\n      plot.caption = element_text(color = \"black\", size = rel(.7), hjust = 0),\n      plot.title.position = \"plot\",\n      plot.caption.position = \"plot\",\n      axis.title = element_text(color = \"white\"),\n      axis.title.x = element_text(hjust = 1, margin = margin(t = base_size/2)),\n      axis.title.y = element_text(hjust = 1, margin = margin(r = base_size/2)),\n      axis.text = element_text(color = \"black\"),\n      axis.ticks = element_line(color = \"black\"),\n      panel.background = element_rect(fill = \"#dfbb85\", color = \"white\", linewidth = base_size/4), \n      panel.border = element_rect(fill = NA, color = \"black\", linewidth = base_size/10), \n      plot.background = element_rect(fill = \"#CE1141\", color = \"black\", linewidth = base_size/4), \n      legend.background = element_rect(fill = \"transparent\", color = \"black\"),\n      legend.justification = \"top\",\n      strip.text = element_text(size = rel(1.25), color = \"white\"),\n      panel.grid.major = element_line(color = \"white\"),\n      panel.grid.minor = element_blank(),\n      plot.margin = margin(rep(base_size, 4))\n    )\n}"
  },
  {
    "objectID": "materials/solutions/04-theming-solutions.html#apply-theme",
    "href": "materials/solutions/04-theming-solutions.html#apply-theme",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Apply Theme",
    "text": "Apply Theme\n\ndata <- read_csv(\"https://query.data.world/s/cejs4o4gdt6autofsse7whhqnnmaii?dws=00000\")\n\nggplot(filter(data, Team == \"Chicago\"), aes(x = Pts, y = Reb)) +\n  geom_point(shape = \"üèÄ\", size = 5) +\n  labs(title = \"Let's Go Bulls! ‚õπÔ∏èÔ∏è\", x = \"Points scored\", y = \"Rebounds\", \n       caption = \"Data: hoopsstats.com\") +\n  theme_bulls()"
  },
  {
    "objectID": "materials/solutions/04-theming-solutions.html#custom-theme-1",
    "href": "materials/solutions/04-theming-solutions.html#custom-theme-1",
    "title": "Engaging and Beautiful Data Visualizations with ggplot2",
    "section": "Custom Theme",
    "text": "Custom Theme\n\ntheme_nba <- function(base_size = 18, base_family = \"College Block\", \n                      base_line_size = base_size/22, base_rect_size = base_size/22,\n                      team = \"Bulls\") {\n  \n  if(!team %in% c(\"Bulls\", \"Lakers\", \"Nuggets\", \"Celtics\", \"Knicks\", \"Heat\", \"Hornets\", \"Sixers\", \"Timberwolves\", \"Pelicans\", \"Suns\")) stop('team should be one of \"Bulls\", \"Lakers\", \"Nuggets\", \"Celtics\", \"Knicks\", \"Heat\", \"Hornets\", \"Sixers\", \"Timberwolves\", \"Pelicans\", or \"Suns\".')\n  \n  colors <- data.frame(\n    Bulls = c(\"#CE1141\", \"#FFFFFF\", \"#000000\"),\n    Lakers = c(\"#552583\", \"#FDB927\", \"#000000\"),\n    Nuggets = c(\"#8B2131\", \"#FEC524\", \"#0E2240\"),\n    Celtics = c(\"#007A33\", \"#FFFFFF\", \"#BA9653\"),\n    Knicks = c(\"#006BB6\", \"#F58426\", \"#BEC0C2\"),\n    Heat = c(\"#000000\", \"#F9A01B\", \"#98002E\"),\n    Hornets = c(\"#1D1160\", \"#A1A1A4\", \"#00788C\"),\n    Sixers = c(\"#006BB6\", \"#ED174C\", \"#002B5C\"),\n    Timberwolves = c(\"#0C2340\", \"#78BE20\", \"#9EA2A2\"),\n    Pelicans = c(\"#0C2340\", \"#C8102E\", \"#85714D\"),\n    Suns = c(\"#1D1160\", \"#E56020\", \"#63727A\")\n  )\n  colors <- unname(colors[, team])\n  \n  theme_minimal(base_size = base_size, base_family = base_family, \n           base_line_size = base_line_size, base_rect_size = base_rect_size) + \n    theme( \n      plot.title = element_text(size = rel(2), color = colors[2], margin = margin(b = base_size/2)),\n      plot.subtitle = element_text(color = colors[3], margin = margin(t = -base_size/4, b = base_size/2)),\n      plot.caption = element_text(color = colors[3], size = rel(.7), hjust = 0),\n      plot.title.position = \"plot\",\n      plot.caption.position = \"plot\",\n      axis.title = element_text(color = colors[2]),\n      axis.title.x = element_text(hjust = 1, margin = margin(t = base_size/2)),\n      axis.title.y = element_text(hjust = 1, margin = margin(r = base_size/2)),\n      axis.text = element_text(color = colors[3]),\n      axis.ticks = element_line(color = colors[3]),\n      panel.background = element_rect(fill = \"#dfbb85\", color = \"white\", linewidth = base_size/4), \n      panel.border = element_rect(fill = NA, color = colors[3], linewidth = base_size/10), \n      plot.background = element_rect(fill = colors[1], color = colors[3], linewidth = base_size/4), \n      legend.background = element_rect(fill = \"transparent\", color = colors[3]),\n      legend.justification = \"top\",\n      strip.text = element_text(size = rel(1.25), color = colors[2]),\n      panel.grid.major = element_line(color = \"white\"),\n      panel.grid.minor = element_blank(),\n      plot.margin = margin(rep(base_size, 4))\n    )\n}"
  },
  {
    "objectID": "modules/s01-fundamentals.html",
    "href": "modules/s01-fundamentals.html",
    "title": "Fundamentals & Workflows",
    "section": "",
    "text": "View slides in full screen‚ÄÇ|‚ÄÇRun the code yourself"
  },
  {
    "objectID": "modules/s01-fundamentals.html#exercise-1",
    "href": "modules/s01-fundamentals.html#exercise-1",
    "title": "Fundamentals & Workflows",
    "section": "Exercise 1",
    "text": "Exercise 1\n\n\nDiscuss / investigate with your neighbor:\n\nWhat are the differences between geom_line() and geom_path()?\nWhy can you use geom_smooth() and stat_smooth() interchangeably?\nWhat are the three ways to remove a legend from a ggplot?\nWhich is your favorite theme?\nWhat is your favorite ggplot2 extension package?"
  },
  {
    "objectID": "modules/s01-fundamentals.html#exercise-2",
    "href": "modules/s01-fundamentals.html#exercise-2",
    "title": "Fundamentals & Workflows",
    "section": "Exercise 2",
    "text": "Exercise 2\n\n\nExplore the TfL bike share data visually:\n\nCreate a time series of counts per day and night.\nDraw box and whisker plots of average temperatures per month.\nVisualize bike counts per weather type and period as bar chart.\n\nCombine the three plots with {patchwork}.\nExport the final graphic in a format of your choice.\n\n\n Exercise Template‚ÄÇ|‚ÄÇSolution"
  },
  {
    "objectID": "modules/s02-break.html",
    "href": "modules/s02-break.html",
    "title": "Coffee Break",
    "section": "",
    "text": "Please avoid questions during the breaks to give us a chance to recover and reflect. If you have urgent questions, please contact any of the TAs."
  },
  {
    "objectID": "modules/s03-text.html",
    "href": "modules/s03-text.html",
    "title": "Working with Text",
    "section": "",
    "text": "View slides in full screen‚ÄÇ|‚ÄÇRun the code yourself"
  },
  {
    "objectID": "modules/s03-text.html#exercise-1",
    "href": "modules/s03-text.html#exercise-1",
    "title": "Working with Text",
    "section": "Exercise 1",
    "text": "Exercise 1\n\n\nTake a look at the following visualization.\n\nFor each group of text labels, note how one would add and modify them.\nDiscuss how to automate the placement of the labels in- and outside of the bars."
  },
  {
    "objectID": "modules/s03-text.html#exercise-2",
    "href": "modules/s03-text.html#exercise-2",
    "title": "Working with Text",
    "section": "Exercise 2",
    "text": "Exercise 2\n\n\nCreate a function that plots the famous Gapminder chart, highlighting one of the continents.\n\nExtend the code in 02-text-exercises.qmd to annotate a continent your choice of with {ggforce}.\nTurn the code into a function with the utility to annotate any continent.\nOptional: Create a second function to highlight a country.\n\n\n\n Exercise Template‚ÄÇ|‚ÄÇSolution"
  },
  {
    "objectID": "modules/s04-lunch.html",
    "href": "modules/s04-lunch.html",
    "title": "Lunch Break",
    "section": "",
    "text": "Warning\n\n\n\nPlease avoid questions during the lunch break to give us a chance to have a recover and reflect."
  },
  {
    "objectID": "modules/s05-colors.html",
    "href": "modules/s05-colors.html",
    "title": "Working with Colors",
    "section": "",
    "text": "View slides in full screen‚ÄÇ|‚ÄÇRun the code yourself"
  },
  {
    "objectID": "modules/s05-colors.html#exercise-1",
    "href": "modules/s05-colors.html#exercise-1",
    "title": "Working with Colors",
    "section": "Exercise 1",
    "text": "Exercise 1\n\n\nAdd colors to our bar chart from the last exercise:"
  },
  {
    "objectID": "modules/s05-colors.html#exercise-2",
    "href": "modules/s05-colors.html#exercise-2",
    "title": "Working with Colors",
    "section": "Exercise 2",
    "text": "Exercise 2\n\n\nCreate a plot of your choice with a sequential (non-default) color palette.\n\nInspect the HCL spectrum. Adjust the palette if needed.\nTest the palette with regard to colorblindness. Adjust the palette if needed.\nSave and share the graphic.\n\n\n\n Exercise Template‚ÄÇ|‚ÄÇSolution"
  },
  {
    "objectID": "modules/s06-break.html",
    "href": "modules/s06-break.html",
    "title": "Coffee Break",
    "section": "",
    "text": "Please avoid questions during the breaks to give us a chance to recover and reflect. If you have urgent questions, please contact any of the TAs."
  },
  {
    "objectID": "modules/s07-theming.html",
    "href": "modules/s07-theming.html",
    "title": "Data Communication",
    "section": "",
    "text": "View slides in full screen‚ÄÇ|‚ÄÇRun the code yourself\n\nOutline\n\nComplete Themes\nModify Theme Elements\nNon-Default Typefaces\nSet Themes Globally\nCustom Themes\nExercise\n\n\n\nRecap\n\n\napply complete themes via theme_*() and modify theme defaults via theme()\nchange the appearance for all plots with theme_set() and theme_update()\n{systemfonts} allows to use non-default typefaces and register font variants\nuse the source code of complete themes to create a custom theme\nadd additional arguments to allow for different styles and settings\n\n\n\n\n\nExercise\n\n\nCreate a corporate or funny custom theme.\n\nMake use of an existing complete theme to get started.\nPick a non-default font (or multiple) for your theme.\nOptional: Try working with font variants.\nOptional: Add other helpful arguments to your theme_* function.\n\nShowcase your theme using some example graphics.\n\nSave the plots to disk and share them with the group.\nDid you add some additional arguments? Feel free to share your thoughts on ‚Äúwhy‚Äù and ‚Äúhow‚Äù.\n\n\n\n Exercise Template‚ÄÇ|‚ÄÇSolution"
  },
  {
    "objectID": "prework.html",
    "href": "prework.html",
    "title": "Prework",
    "section": "",
    "text": "As this workshop focuses on (more) advanced topics, a solid understanding of the fundamentals of ggplot2 and also data preparation in R is helpful. The concepts of how to initialize a ggplot, map variables to aesthetics, and how aesthetics relate to scales should be familiar to you. If you want to refresh your knowledge, I suggest going through the first two chapters of the ggplot2 book by Hadley Wickham et al.¬†(introduction and getting started). The ‚ÄúR for Data Science‚Äù book also offers a good overview of ggplot2 as well as on data wrangling with the tidyverse.\nYou will need to bring your own laptop to the workshop with a recent version of R (4.3.1 or newer) and RStudio (2023.06.1 or newer) as well as a bunch of R packages and a few typefaces installed."
  },
  {
    "objectID": "prework.html#technical-requirements",
    "href": "prework.html#technical-requirements",
    "title": "Prework",
    "section": "Technical Requirements",
    "text": "Technical Requirements\n\nInstall R and Rstudio\nDownload the most recent version of R (at least version 4.2) and Rstudio (at least version 2023.06.1) and follow the installation steps.\n\n\nInstall R Libraries\nYou can install all required R packages at once by running the following code in the R command line:\npkgs <- c(\"ggplot2\", \"dplyr\", \"tibble\", \"tidyr\", \"readr\", \"forcats\", \n          \"stringr\", \"lubridate\", \"purrr\", \"here\", \"scales\", \"ragg\", \n          \"systemfonts\", \"rcartocolor\", \"scico\", \"prismatic\", \"patchwork\", \n          \"ggtext\", \"ggforce\", \"ggrepel\", \"colorspace\", \"gapminder\", \"remotes\")\ninstall.packages(setdiff(pkgs, rownames(installed.packages())))\n\nremotes::install_github(\"clauswilke/colorblindr\")\nTo run the code, open up Rstudio. Copy‚Äìpaste the code in the console pane (by default in the lower left) and hit enter. Several messages should pop up. Scan these messages that are returned for errors and troubleshoot them if necessary. Warnings and other informational messages can be ignored.\nA few packages are not strictly needed but are used in some of the course material. If you wish to install all packages, run the following code as well:\npkgs_opt <- c(\"camcorder\", \"viridis\", \"RColorBrewer\", \"MetBrewer\", \n              \"ggthemes\", \"ggsci\", \"hrbrthemes\", \"tvthemes\", \"ggannotate\")\ninstall.packages(setdiff(pkgs_opt, rownames(installed.packages())))\n\nremotes::install_github(\"AllanCameron/geomtextpath\")\nIf, for some reason, you cannot install these packages or the latest versions of R and RStudio, we will have a Posit Cloud workspace set up that can be used instead. But you will still need to bring your laptop.\n\n\nInstall Typefaces\nWe will make use of custom fonts during the course. If you want to follow all contents locally, make sure the following typefaces are installed:\n\nAsap: fonts.google.com/specimen/Asap\nSpline Sans: fonts.google.com/specimen/Spline+Sans\nSpline Sans Mono: fonts.google.com/specimen/Spline+Sans+Mono\nHepta Slab: fonts.google.com/specimen/Hepta+Slab\n\nYou can download all typefaces as a single zip file here.\n\n\nFor Mac OS Users\nIf you want to save your visualization to PDF, please make sure that XQuartz is installed which is needed to use the cairo pdf device."
  },
  {
    "objectID": "prework.html#course-communication",
    "href": "prework.html#course-communication",
    "title": "Prework",
    "section": "Course Communication",
    "text": "Course Communication\nWe will be using Discord as our main communication method during the workshop. To make the process go smoothly:\n\nPlease sign up for an account at discord.com if you don‚Äôt already have one.\nMake sure your display name is the one you used to register for the conference.\nIn your ‚ÄúAbout Me‚Äù, put the name of your workshop(s).\n\nCloser to the start of the conference, you will be invited to join the posit::conf Discord server. Once you‚Äôve accepted the invite, we will add you to the channel for the workshop."
  },
  {
    "objectID": "schedule.html",
    "href": "schedule.html",
    "title": "Schedule",
    "section": "",
    "text": "Monday, September 18, 2023\n\n\n\n\n\n\n\n\nTime\n\n\nModule\n\n\n\n\n\n\n\n\n\n09:00-10:30\n\n\nFundamentals & Workflows\n\n\n\n\n\n\n\n10:30-11:00\n\n\nCoffee Break\n\n\n\n\n\n\n\n11:00-12:30\n\n\nWorking with Text\n\n\n\n\n\n\n\n12:30-13:30\n\n\nLunch Break\n\n\n\n\n\n\n\n13:30-15:00\n\n\nWorking with Colors\n\n\n\n\n\n\n\n15:00-15:30\n\n\nCoffee Break\n\n\n\n\n\n\n\n15:30-17:00\n\n\nData Communication\n\n\n\n\n\n\nNo matching items"
  }
]