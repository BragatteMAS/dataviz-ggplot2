---
title: "Engaging and Beautiful Data Visualizations with ggplot2"
subtitle: "<span style='font-size:2em;'>Working with Text</span><br><span style='font-weight:400;font-size:1.3em;'>— Exercise Solutions —</span>"
author: "<a href='https://www.cedricscherer.com' style='color:#28a87d;font-weight:600;'>Cédric Scherer</a>&ensp;//&ensp;posit::conf&ensp;//&ensp;September 2023</span></span>"
format:
  revealjs:
    theme: slides.scss
    footer: '[Cédric Scherer](https://cedricscherer.com) // posit::conf(2023)'
    transition: fade
    progress: true
    multiplex: false
    preview-links: true
    scrollable: false
    hide-inactive-cursor: true
    highlight-style: printing
    chalkboard:
      theme: whiteboard
      boardmarker-width: 4
      buttons: true
    pause: true
    mainfont: Cabinet Grotesk
editor: source
knitr:
  opts_chunk:
    dev: "ragg_png"
    retina: 3
    dpi: 200
execute:
  freeze: auto
  cache: true
  echo: true
  fig-width: 10
  fig-height: 6.2
  fig-align: center
---

# Exercise 1


## Exercise 1

::: question
-  **Take a look at the following visualization.**
   -  For each group of text labels, note how one would add and modify them.
   -  How could one automate the placement of the labels in- and outside of the bars?
-  **Create the visualization, as close as possible**.
:::


## Preparation

```{r}
#| label: preparation
#| cache: false
library(readr)
library(dplyr)
library(ggplot2)

## data
bikes <-
  read_csv(
    here::here("data", "london-bikes.csv"),
    col_types = "Dcfffilllddddc"
  )

## plot style
theme_set(theme_minimal(base_family = "Asap SemiCondensed", base_size = 14))
```


## Horizontal Bar Chart

```{r}
#| label: exercise-2-1-labels-0
#| eval: false
#| cache: false
#| purl: false
#| code-line-numbers: "1|2,3,4|5|6,7,8,9|7|10|11|12,13,14,15,16"
p <- 
  bikes |> 
  filter(!is.na(weather_type), year == "2015") |> 
  mutate(weather_type = forcats::fct_reorder(weather_type, count, .fun = sum)) |> 
  ggplot(aes(x = count, y = weather_type)) +
  stat_summary(
    geom = "bar", fun = sum,
    color = "grey20", fill = "beige", width = .7
  ) +
  scale_x_continuous(expand = c(0, 0)) +
  coord_cartesian(clip = "off") +
  theme_minimal(base_size = 14, base_family = "Asap SemiCondensed") +
  theme(
    panel.grid.major.y = element_blank(),
    panel.grid.minor = element_blank()
  )

p
```

--------------------------------------------------------------------------------

```{r}
#| label: exercise-2-1-labels-0
#| echo: false
#| fig-width: 7.5
#| fig-height: 4.7
```


## Add Count Annotations

```{r}
#| label: exercise-2-1-labels-1
#| eval: false
#| purl: false
#| code-line-numbers: "2,3,4,5,6|3|4"
p +
  stat_summary(
    geom = "text", fun = sum,
    aes(label = after_stat(x)),
    family = "Asap SemiCondensed"
  )
```

--------------------------------------------------------------------------------

```{r}
#| label: exercise-2-1-labels-1
#| echo: false
#| fig-width: 7.5
#| fig-height: 4.7
```


## Add Count Annotations

```{r}
#| label: exercise-2-1-labels-2
#| eval: false
#| purl: false
#| code-line-numbers: "4,5|5"
p +
  stat_summary(
    geom = "text", fun = sum,
    aes(label = after_stat(x),
        hjust = after_stat(x) > .5*10^6),
    family = "Asap SemiCondensed"
  )
```

--------------------------------------------------------------------------------

```{r}
#| label: exercise-2-1-labels-2
#| echo: false
#| fig-width: 7.5
#| fig-height: 4.7
```


## Add Count Annotations

```{r}
#| label: exercise-2-1-labels-3
#| eval: false
#| purl: false
#| code-line-numbers: "4"
p +
  stat_summary(
    geom = "text", fun = sum,
    aes(label = after_stat(paste0("  ", sprintf("%2.2f", x / 10^6), "M  ")),
        hjust = after_stat(x) > .5*10^6),
    family = "Asap SemiCondensed"
  )
```

--------------------------------------------------------------------------------

```{r}
#| label: exercise-2-1-labels-3
#| echo: false
#| fig-width: 7.5
#| fig-height: 4.7
```


## Polish Axes

```{r}
#| label: exercise-2-1-labels-4
#| eval: false
#| purl: false
#| code-line-numbers: "8,9,10,11|9|9,12,13,14|10"
p +
  stat_summary(
    geom = "text", fun = sum,
    aes(label = after_stat(paste0("  ", sprintf("%2.2f", x / 10^6), "M  ")),
        hjust = after_stat(x) > .5*10^6),
    family = "Asap SemiCondensed"
  ) +
  scale_x_continuous(
    expand = c(0, 0), name = "**Reported bike shares**, in millions", 
    breaks = 0:4*10^6, labels = c("0", paste0(1:4, "M"))
  ) +
  theme(
    axis.title.x = ggtext::element_markdown(hjust = 0, face = "italic")
  )
```

--------------------------------------------------------------------------------

```{r}
#| label: exercise-2-1-labels-4
#| echo: false
#| fig-width: 7.5
#| fig-height: 4.7
```


## Polish Axes Labels

```{r}
#| label: exercise-2-1-labels-5
#| eval: false
#| purl: false
#| code-line-numbers: "12,13,14|13|17"
p +
  stat_summary(
    geom = "text", fun = sum,
    aes(label = after_stat(paste0("  ", sprintf("%2.2f", x / 10^6), "M  ")),
        hjust = after_stat(x) > .5*10^6),
    family = "Asap SemiCondensed"
  ) +
  scale_x_continuous(
    expand = c(0, 0), name = "**Reported bike shares**, in millions", 
    breaks = 0:4*10^6, labels = c("0", paste0(1:4, "M"))
  ) +
  scale_y_discrete(
    labels = stringr::str_to_sentence, name = NULL
  ) +
  theme(
    axis.title.x = ggtext::element_markdown(hjust = 0, face = "italic"),
    axis.text.y = element_text(color = "black", size = rel(1.2))
  )
```

--------------------------------------------------------------------------------

```{r}
#| label: exercise-2-1-labels-5
#| echo: false
#| fig-width: 7.5
#| fig-height: 4.7
```


## Add Titles

```{r}
#| label: exercise-2-1-labels-6
#| eval: false
#| purl: false
#| code-line-numbers: "15,16,17,18,19|16,23,24|17,23,25|18,26"
p +
  stat_summary(
    geom = "text", fun = sum,
    aes(label = after_stat(paste0("  ", sprintf("%2.2f", x / 10^6), "M  ")),
        hjust = after_stat(x) > .5*10^6),
    family = "Asap SemiCondensed"
  ) +
  scale_x_continuous(
    expand = c(0, 0), name = "**Reported bike shares**, in millions", 
    breaks = 0:4*10^6, labels = c("0", paste0(1:4, "M"))
  ) +
  scale_y_discrete(
    labels = stringr::str_to_sentence, name = NULL
  ) +
  labs(
    title = "Fair weather preferred—even in London",
    subtitle = "Less than 10% of TfL bikes shares have been reported on rainy, cloudy, or snowy days in 2015.",
    caption = "**Data:** Transport for London / freemeteo.com"
  ) +
  theme(
    axis.title.x = ggtext::element_markdown(hjust = 0, face = "italic"),
    axis.text.y = element_text(color = "black", size = rel(1.2)),
    plot.title.position = "plot",
    plot.title = element_text(face = "bold"),
    plot.subtitle = element_text(margin = margin(b = 20)),
    plot.caption = ggtext::element_markdown(color = "grey40")
  )
```

--------------------------------------------------------------------------------

```{r}
#| label: exercise-2-1-labels-6
#| echo: false
#| fig-width: 7.5
#| fig-height: 4.7
```


## Full Code

```{r}
#| label: exercise-2-1-labels-full
#| eval: false
#| purl: false
bikes |> 
  filter(year == "2015") |> 
  mutate(weather_type = forcats::fct_reorder(weather_type, count, .fun = sum)) |> 
  ggplot(aes(x = count, y = weather_type)) +
  stat_summary(
    geom = "bar", fun = sum, 
    color = "grey20", fill = "beige", width = .7
  ) +
  stat_summary(
    geom = "text", fun = sum,
    aes(
      label = after_stat(paste0("  ", sprintf("%2.2f", x / 10^6), "M  ")),
      hjust = after_stat(x) > .5*10^6
    ),
    family = "Asap SemiCondensed"
  ) +
  scale_x_continuous(
    breaks = 0:4*10^6,
    labels = c("0", paste0(1:4, "M")),
    expand = c(0, 0), 
    name = "**Reported bike shares**, in millions"
  ) +
  scale_y_discrete(labels = stringr::str_to_sentence, name = NULL) +
  coord_cartesian(clip = "off") +
  labs(
    title = "Fair weather preferred—even in London",
    subtitle = "Less than 10% of TfL bikes shares have been reported on rainy, cloudy, or snowy days in 2015.",
    caption = "**Data:** Transport for London / freemeteo.com"
  ) +
  theme_minimal(base_size = 14, base_family = "Asap SemiCondensed") +
  theme(
    panel.grid.major.y = element_blank(),
    panel.grid.minor = element_blank(),
    axis.title.x = ggtext::element_markdown(hjust = 0, face = "italic"),
    axis.text.y = element_text(color = "black", size = rel(1.2)),
    plot.title = element_text(face = "bold"),
    plot.subtitle = element_text(margin = margin(b = 20)),
    plot.title.position = "plot",
    plot.caption = ggtext::element_markdown(color = "grey40")
  )
```



# Exercise 2


## Exercise 2

-   **Create a function that plots the famous Gapminder chart, highlighting one of the continents.**
   -   Extend the code in `02-text-exercises.qmd` to annotate a continent your choice of with {ggforce}.
   -   Turn the code into a function with the utility to annotate any continent.
   -   Optional: Create a second function to highlight a country.
:::

```{r}
#| label: libraries
#| include: false
#| cache: false
#| purl: false
library(gapminder)
library(dplyr)
library(ggplot2)
```


## Gapminder Bubble Chart

```{r}
#| label: exercise-2-2-gapminder-0-template
#| eval: false
#| purl: false
#| cache: false
#| code-line-numbers: "1|3,4,5|7|9,10,11,12|13,14,15,16|17,18,19,20,21|22|23,24"
# install.packages("gapminder")

library(gapminder)
library(dplyr)
library(ggplot2)

gm2007 <- filter(gapminder, year == 2007)

ggplot(gm2007, aes(x = gdpPercap, y = lifeExp)) +
  geom_point(
    aes(size = pop), alpha = .5
  ) +
  scale_x_log10(
    breaks = c(500, 2000, 8000, 32000),
    labels = scales::label_dollar(accuracy = 1)
  ) +
  scale_size(
    range = c(1, 12), name = "Population:", 
    breaks = c(10, 100, 1000)*1000000, 
    labels = scales::label_comma(scale = 1 / 10^6, suffix = "M")
  ) +
  labs(x = "GDP per capita", y = "Life expectancy") +
  theme_minimal(base_family = "Asap SemiCondensed", base_size = 15) +
  theme(panel.grid.minor = element_blank())
```

--------------------------------------------------------------------------------

```{r}
#| label: exercise-2-2-gapminder-0-template
#| echo: false
```


## Annotate Continents

```{r}
#| label: exercise-2-2-gapminder-1-geom-hull
#| eval: false
#| purl: false
#| code-line-numbers: "2,3,4|5,6,7,8|6|9,10,11,12,13|10"
ggplot(gm2007, aes(x = gdpPercap, y = lifeExp)) +
  geom_point(
    aes(size = pop), alpha = .5, color = "grey60"
  ) +
  geom_point( 
    data = filter(gm2007, continent == "Americas"),
    aes(size = pop), shape = 1, stroke = .7
  ) +
  ggforce::geom_mark_hull(
    aes(label = continent, filter = continent == "Americas"),
    expand = unit(10, "pt"), con.cap = unit(1, "mm"),
    label.family = "Asap SemiCondensed", label.fontsize = 15
  ) +
  scale_x_log10(
    breaks = c(500, 2000, 8000, 32000),
    labels = scales::label_dollar(accuracy = 1)
  ) +
  scale_size(
    range = c(1, 12), name = "Population:",
    breaks = c(10, 100, 1000)*1000000,
    labels = scales::label_comma(scale = 1 / 10^6, suffix = "M")
  ) +
  labs(x = "GDP per capita", y = "Life expectancy") +
  theme_minimal(base_family = "Asap SemiCondensed", base_size = 15) +
  theme(panel.grid.minor = element_blank())
```

--------------------------------------------------------------------------------

```{r}
#| label: exercise-2-2-gapminder-1-geom-hull
#| echo: false
```


## Function to Highlight a Continent

```{r}
#| label: exercise-2-2-gapminder-2-function-continent
#| cache: false
#| code-line-numbers: "1,29|8,12"
draw_gp_continent <- function(grp) {
  
  ggplot(gm2007, aes(x = gdpPercap, y = lifeExp)) + 
    geom_point( 
      aes(size = pop), alpha = .5, color = "grey60"
    ) +
    geom_point( 
      data = filter(gm2007, continent == grp),
      aes(size = pop), shape = 1, stroke = .7
    ) +
    ggforce::geom_mark_hull(
      aes(label = continent, filter = continent == grp),
      expand = unit(10, "pt"), con.cap = unit(1, "mm"),
      label.family = "Asap SemiCondensed", label.fontsize = 15
    ) +
    scale_x_log10(
      breaks = c(500, 2000, 8000, 32000),
      labels = scales::label_dollar(accuracy = 1)
    ) +
    scale_size(
      range = c(1, 12), name = "Population:", 
      breaks = c(10, 100, 1000)*1000000, 
      labels = scales::label_comma(scale = 1 / 10^6, suffix = "M")
    ) +
    labs(x = "GDP per capita", y = "Life expectancy") +
    theme_minimal(base_family = "Asap SemiCondensed", base_size = 15) +
    theme(panel.grid.minor = element_blank())
  
}
```


--------------------------------------------------------------------------------

```{r}
#| label: exercise-2-2-gapminder-3-example-americas
draw_gp_continent("Americas")
```


--------------------------------------------------------------------------------

```{r}
#| label: exercise-2-2-gapminder-4-example-africa
draw_gp_continent("Africa")
```


--------------------------------------------------------------------------------

```{r}
#| label: exercise-2-2-gapminder-5-example-europe
draw_gp_continent("Europe")
```


## Function to Highlight a Country

```{r}
#| label: exercise-2-2-gapminder-6-function-country
#| cache: false
#| code-line-numbers: "1,30|7,8,9,10,11,12|8|9,10|13,14,15,16|14|15"
draw_gp_country <- function(grp) {
  
  ggplot(gm2007, aes(x = gdpPercap, y = lifeExp)) + 
    geom_point( 
      aes(size = pop), alpha = .5, color = "grey60"
    ) +
    ggforce::geom_mark_circle(
      aes(label = country, filter = country == grp),
      expand = unit(15, "pt"), con.cap = unit(0, "mm"),
      # expand = unit(0, "pt"), con.cap = unit(0, "mm"),
      label.family = "Asap SemiCondensed", label.fontsize = 15
    ) +
    geom_point( 
      data = filter(gm2007, country == grp),
      aes(size = pop), color = "#9C55E3", show.legend = FALSE
    ) +
    scale_x_log10(
      breaks = c(500, 2000, 8000, 32000),
      labels = scales::label_dollar(accuracy = 1)
    ) +
    scale_size(
      range = c(1, 12), name = "Population:", 
      breaks = c(10, 100, 1000)*1000000, 
      labels = scales::label_comma(scale = 1 / 10^6, suffix = "M")
    ) +
    labs(x = "GDP per capita", y = "Life expectancy") +
    theme_minimal(base_family = "Asap SemiCondensed", base_size = 15) +
    theme(panel.grid.minor = element_blank())
  
}
```


--------------------------------------------------------------------------------

```{r}
#| label: exercise-2-2-gapminder-7-example-usa
draw_gp_country("United States")
```


--------------------------------------------------------------------------------

```{r}
#| label: exercise-2-2-gapminder-8-example-germany
draw_gp_country("Germany")
```


--------------------------------------------------------------------------------

```{r}
#| label: exercise-2-2-gapminder-9-example-india
draw_gp_country("India")
```


--------------------------------------------------------------------------------

```{r}
#| label: exercise-2-2-gapminder-10-example-zambia
draw_gp_country("Zambia")
```
