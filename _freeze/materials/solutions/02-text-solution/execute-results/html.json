{
  "hash": "114add0cbf3dca7dc52dc2562fe8d767",
  "result": {
    "markdown": "---\ntitle: \"Engaging and Beautiful Data Visualizations with ggplot2\"\nsubtitle: \"<span style='font-size:2em;'>Working with Text</span><br><span style='font-weight:400;font-size:1.3em;'>— Exercise Solutions —</span>\"\nauthor: \"<a href='https://www.cedricscherer.com' style='color:#28a87d;font-weight:600;'>Cédric Scherer</a>&ensp;//&ensp;posit::conf&ensp;//&ensp;September 2023</span></span>\"\nformat:\n  revealjs:\n    theme: slides.scss\n    footer: '[Cédric Scherer](https://cedricscherer.com) // posit::conf(2023)'\n    transition: fade\n    progress: true\n    multiplex: false\n    preview-links: true\n    scrollable: false\n    hide-inactive-cursor: true\n    highlight-style: printing\n    chalkboard:\n      theme: whiteboard\n      boardmarker-width: 4\n      buttons: true\n    pause: true\n    mainfont: Cabinet Grotesk\neditor: source\nknitr:\n  opts_chunk:\n    dev: \"ragg_png\"\n    retina: 3\n    dpi: 200\nexecute:\n  freeze: auto\n  cache: false\n  echo: true\n  fig-width: 10\n  fig-height: 6.2\n  fig-align: center\n---\n\n\n# Exercise 1\n\n\n## Exercise 1\n\n::: question\n-  **Take a look at the following visualization.**\n   -  For each group of text labels, note how one would add and modify them.\n   -  How could one automate the placement of the labels in- and outside of the bars?\n-  **Create the visualization, as close as possible**.\n:::\n\n\n## Preparation\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(readr)\nlibrary(dplyr)\nlibrary(ggplot2)\n\n## data\nbikes <-\n  read_csv(\n    here::here(\"data\", \"london-bikes.csv\"),\n    col_types = \"Dcfffilllddddc\"\n  )\n\n## plot style\ntheme_set(theme_minimal(base_family = \"Asap SemiCondensed\", base_size = 14))\n```\n:::\n\n\n\n## Horizontal Bar Chart\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"1|2,3,4|5|6,7,8,9|7|10|11|12,13,14,15,16\"}\np <- \n  bikes |> \n  filter(year == \"2015\") |> \n  mutate(weather_type = forcats::fct_reorder(weather_type, count, .fun = sum)) |> \n  ggplot(aes(x = count, y = weather_type)) +\n  stat_summary(\n    geom = \"bar\", fun = sum, na.rm = TRUE,\n    color = \"grey20\", fill = \"beige\", width = .7\n  ) +\n  scale_x_continuous(expand = c(0, 0)) +\n  coord_cartesian(clip = \"off\") +\n  theme_minimal(base_size = 14, base_family = \"Asap SemiCondensed\") +\n  theme(\n    panel.grid.major.y = element_blank(),\n    panel.grid.minor = element_blank()\n  )\n\np\n```\n:::\n\n\n\n--------------------------------------------------------------------------------\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](02-text-solution_files/figure-revealjs/exercise-2-1-labels-0-1.png){width=1500}\n:::\n:::\n\n\n\n## Add Count Annotations\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"2,3,4,5,6|3|4\"}\np +\n  stat_summary(\n    geom = \"text\", fun = sum,\n    aes(label = after_stat(x)),\n    family = \"Asap SemiCondensed\"\n  )\n```\n:::\n\n\n\n--------------------------------------------------------------------------------\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](02-text-solution_files/figure-revealjs/exercise-2-1-labels-1-1.png){width=1500}\n:::\n:::\n\n\n\n## Add Count Annotations\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"4,5|5\"}\np +\n  stat_summary(\n    geom = \"text\", fun = sum,\n    aes(label = after_stat(x),\n        hjust = after_stat(x) > .5*10^6),\n    family = \"Asap SemiCondensed\"\n  )\n```\n:::\n\n\n\n--------------------------------------------------------------------------------\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](02-text-solution_files/figure-revealjs/exercise-2-1-labels-2-1.png){width=1500}\n:::\n:::\n\n\n\n## Add Count Annotations\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"4\"}\np +\n  stat_summary(\n    geom = \"text\", fun = sum,\n    aes(label = after_stat(paste0(\"  \", sprintf(\"%2.2f\", x / 10^6), \"M  \")),\n        hjust = after_stat(x) > .5*10^6),\n    family = \"Asap SemiCondensed\"\n  )\n```\n:::\n\n\n\n--------------------------------------------------------------------------------\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](02-text-solution_files/figure-revealjs/exercise-2-1-labels-3-1.png){width=1500}\n:::\n:::\n\n\n\n## Polish Axes\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"8,9,10,11|9|9,12,13,14|10\"}\np +\n  stat_summary(\n    geom = \"text\", fun = sum,\n    aes(label = after_stat(paste0(\"  \", sprintf(\"%2.2f\", x / 10^6), \"M  \")),\n        hjust = after_stat(x) > .5*10^6),\n    family = \"Asap SemiCondensed\"\n  ) +\n  scale_x_continuous(\n    expand = c(0, 0), name = \"**Reported bike shares**, in millions\", \n    breaks = 0:4*10^6, labels = c(\"0\", paste0(1:4, \"M\"))\n  ) +\n  theme(\n    axis.title.x = ggtext::element_markdown(hjust = 0, face = \"italic\")\n  )\n```\n:::\n\n\n\n--------------------------------------------------------------------------------\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](02-text-solution_files/figure-revealjs/exercise-2-1-labels-4-1.png){width=1500}\n:::\n:::\n\n\n\n## Polish Axes Labels\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"12,13,14|13|17\"}\np +\n  stat_summary(\n    geom = \"text\", fun = sum,\n    aes(label = after_stat(paste0(\"  \", sprintf(\"%2.2f\", x / 10^6), \"M  \")),\n        hjust = after_stat(x) > .5*10^6),\n    family = \"Asap SemiCondensed\"\n  ) +\n  scale_x_continuous(\n    expand = c(0, 0), name = \"**Reported bike shares**, in millions\", \n    breaks = 0:4*10^6, labels = c(\"0\", paste0(1:4, \"M\"))\n  ) +\n  scale_y_discrete(\n    labels = stringr::str_to_sentence, name = NULL\n  ) +\n  theme(\n    axis.title.x = ggtext::element_markdown(hjust = 0, face = \"italic\"),\n    axis.text.y = element_text(color = \"black\", size = rel(1.2))\n  )\n```\n:::\n\n\n\n--------------------------------------------------------------------------------\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](02-text-solution_files/figure-revealjs/exercise-2-1-labels-5-1.png){width=1500}\n:::\n:::\n\n\n\n## Add Titles\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"15,16,17,18,19|16,23,24|17,23,25|18,26\"}\np +\n  stat_summary(\n    geom = \"text\", fun = sum,\n    aes(label = after_stat(paste0(\"  \", sprintf(\"%2.2f\", x / 10^6), \"M  \")),\n        hjust = after_stat(x) > .5*10^6),\n    family = \"Asap SemiCondensed\"\n  ) +\n  scale_x_continuous(\n    expand = c(0, 0), name = \"**Reported bike shares**, in millions\", \n    breaks = 0:4*10^6, labels = c(\"0\", paste0(1:4, \"M\"))\n  ) +\n  scale_y_discrete(\n    labels = stringr::str_to_sentence, name = NULL\n  ) +\n  labs(\n    title = \"Fair weather preferred, even in London\",\n    subtitle = \"Less than 10% of TfL bikes shares have been reported on rainy, cloudy or snowy days in 2015.\",\n    caption = \"**Data:** Transport for London / freemeteo.com\"\n  ) +\n  theme(\n    axis.title.x = ggtext::element_markdown(hjust = 0, face = \"italic\"),\n    axis.text.y = element_text(color = \"black\", size = rel(1.2)),\n    plot.title.position = \"plot\",\n    plot.title = element_text(face = \"bold\"),\n    plot.subtitle = element_text(margin = margin(b = 20)),\n    plot.caption = ggtext::element_markdown(color = \"grey40\")\n  )\n```\n:::\n\n\n\n--------------------------------------------------------------------------------\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](02-text-solution_files/figure-revealjs/exercise-2-1-labels-6-1.png){width=1500}\n:::\n:::\n\n\n\n## Full Code\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbikes |> \n  filter(year == \"2015\") |> \n  mutate(weather_type = forcats::fct_reorder(weather_type, count, .fun = sum)) |> \n  ggplot(aes(x = count, y = weather_type)) +\n  stat_summary(\n    geom = \"bar\", fun = sum, na.rm = TRUE, \n    color = \"grey20\", fill = \"beige\", width = .7\n  ) +\n  stat_summary(\n    geom = \"text\", fun = sum,\n    aes(\n      label = after_stat(paste0(\"  \", sprintf(\"%2.2f\", x / 10^6), \"M  \")),\n      hjust = after_stat(x) > .5*10^6\n    ),\n    family = \"Asap SemiCondensed\"\n  ) +\n  scale_x_continuous(\n    breaks = 0:4*10^6,\n    labels = c(\"0\", paste0(1:4, \"M\")),\n    expand = c(0, 0), \n    name = \"**Reported bike shares**, in millions\"\n  ) +\n  scale_y_discrete(labels = stringr::str_to_sentence, name = NULL) +\n  coord_cartesian(clip = \"off\") +\n  labs(\n    title = \"Fair weather preferred, even in London\",\n    subtitle = \"Less than 10% of TfL bikes shares have been reported on rainy, cloudy or snowy days in 2015.\",\n    caption = \"**Data:** Transport for London / freemeteo.com\"\n  ) +\n  theme_minimal(base_size = 14, base_family = \"Asap SemiCondensed\") +\n  theme(\n    panel.grid.major.y = element_blank(),\n    panel.grid.minor = element_blank(),\n    axis.title.x = ggtext::element_markdown(hjust = 0, face = \"italic\"),\n    axis.text.y = element_text(color = \"black\", size = rel(1.2)),\n    plot.title = element_text(face = \"bold\"),\n    plot.subtitle = element_text(margin = margin(b = 20)),\n    plot.title.position = \"plot\",\n    plot.caption = ggtext::element_markdown(color = \"grey40\")\n  )\n```\n:::\n\n\n\n\n# Exercise 2\n\n## Exercise 2\n\n-  **Create a function that plots the famous Gapminder chart, highlighting one of the continents.**\n   -  Extend the code in the chunk below to annotate continents with {ggforce}.\n   -  Turn the code into a function with the utility to annotate a given continent.\n   -  Optional: Create a function that creates plots with countries as inputs.\n:::\n\n\n\n\n\n\n## Gapminder Bubble Chart\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"1|3,4,5|7|9,10,11,12|13,14,15,16|17,18,19,20,21|22|23,24\"}\n# install.packages(\"gapminder\")\n\nlibrary(gapminder)\nlibrary(dplyr)\nlibrary(ggplot2)\n\ngm2007 <- filter(gapminder, year == 2007)\n\nggplot(gm2007, aes(x = gdpPercap, y = lifeExp)) +\n  geom_point(\n    aes(size = pop), alpha = .5\n  ) +\n  scale_x_log10(\n    breaks = c(500, 2000, 8000, 32000),\n    labels = scales::label_dollar(accuracy = 1)\n  ) +\n  scale_size(\n    range = c(1, 12), name = \"Population:\", \n    breaks = c(10, 100, 1000)*1000000, \n    labels = scales::label_comma(scale = 1 / 10^6, suffix = \"M\")\n  ) +\n  labs(x = \"GDP per capita\", y = \"Life expectancy\") +\n  theme_minimal(base_family = \"Asap SemiCondensed\", base_size = 15) +\n  theme(panel.grid.minor = element_blank())\n```\n:::\n\n\n\n--------------------------------------------------------------------------------\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](02-text-solution_files/figure-revealjs/exercise-2-2-gapminder-0-template-1.png){width=2000}\n:::\n:::\n\n\n\n## Annotate Continents\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"2,3,4|5,6,7,8|6|9,10,11,12,13|10\"}\nggplot(gm2007, aes(x = gdpPercap, y = lifeExp)) +\n  geom_point(\n    aes(size = pop), alpha = .5, color = \"grey60\"\n  ) +\n  geom_point( \n    data = filter(gm2007, continent == \"Americas\"),\n    aes(size = pop), shape = 1, stroke = .7\n  ) +\n  ggforce::geom_mark_hull(\n    aes(label = continent, filter = continent == \"Americas\"),\n    expand = unit(10, \"pt\"), con.cap = unit(1, \"mm\"),\n    label.family = \"Asap SemiCondensed\", label.fontsize = 15\n  ) +\n  scale_x_log10(\n    breaks = c(500, 2000, 8000, 32000),\n    labels = scales::label_dollar(accuracy = 1)\n  ) +\n  scale_size(\n    range = c(1, 12), name = \"Population:\",\n    breaks = c(10, 100, 1000)*1000000,\n    labels = scales::label_comma(scale = 1 / 10^6, suffix = \"M\")\n  ) +\n  labs(x = \"GDP per capita\", y = \"Life expectancy\") +\n  theme_minimal(base_family = \"Asap SemiCondensed\", base_size = 15) +\n  theme(panel.grid.minor = element_blank())\n```\n:::\n\n\n\n--------------------------------------------------------------------------------\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](02-text-solution_files/figure-revealjs/exercise-2-2-gapminder-1-geom-hull-1.png){width=2000}\n:::\n:::\n\n\n\n## Function to Highlight a Continent\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"1,29|8,12\"}\ndraw_gp_continent <- function(grp) {\n  \n  ggplot(gm2007, aes(x = gdpPercap, y = lifeExp)) + \n    geom_point( \n      aes(size = pop), alpha = .5, color = \"grey60\"\n    ) +\n    geom_point( \n      data = filter(gm2007, continent == grp),\n      aes(size = pop), shape = 1, stroke = .7\n    ) +\n    ggforce::geom_mark_hull(\n      aes(label = continent, filter = continent == grp),\n      expand = unit(10, \"pt\"), con.cap = unit(1, \"mm\"),\n      label.family = \"Asap SemiCondensed\", label.fontsize = 15\n    ) +\n    scale_x_log10(\n      breaks = c(500, 2000, 8000, 32000),\n      labels = scales::label_dollar(accuracy = 1)\n    ) +\n    scale_size(\n      range = c(1, 12), name = \"Population:\", \n      breaks = c(10, 100, 1000)*1000000, \n      labels = scales::label_comma(scale = 1 / 10^6, suffix = \"M\")\n    ) +\n    labs(x = \"GDP per capita\", y = \"Life expectancy\") +\n    theme_minimal(base_family = \"Asap SemiCondensed\", base_size = 15) +\n    theme(panel.grid.minor = element_blank())\n  \n}\n```\n:::\n\n\n\n--------------------------------------------------------------------------------\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndraw_gp_continent(\"Americas\")\n```\n\n::: {.cell-output-display}\n![](02-text-solution_files/figure-revealjs/exercise-2-2-gapminder-3-example-americas-1.png){width=2000}\n:::\n:::\n\n\n\n--------------------------------------------------------------------------------\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndraw_gp_continent(\"Africa\")\n```\n\n::: {.cell-output-display}\n![](02-text-solution_files/figure-revealjs/exercise-2-2-gapminder-4-example-africa-1.png){width=2000}\n:::\n:::\n\n\n\n--------------------------------------------------------------------------------\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndraw_gp_continent(\"Europe\")\n```\n\n::: {.cell-output-display}\n![](02-text-solution_files/figure-revealjs/exercise-2-2-gapminder-5-example-europe-1.png){width=2000}\n:::\n:::\n\n\n\n## Function to Highlight a Country\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"1,30|7,8,9,10,11,12|8|9,10|13,14,15,16|14|15\"}\ndraw_gp_country <- function(grp) {\n  \n  ggplot(gm2007, aes(x = gdpPercap, y = lifeExp)) + \n    geom_point( \n      aes(size = pop), alpha = .5, color = \"grey60\"\n    ) +\n    ggforce::geom_mark_circle(\n      aes(label = country, filter = country == grp),\n      expand = unit(15, \"pt\"), con.cap = unit(0, \"mm\"),\n      # expand = unit(0, \"pt\"), con.cap = unit(0, \"mm\"),\n      label.family = \"Asap SemiCondensed\", label.fontsize = 15\n    ) +\n    geom_point( \n      data = filter(gm2007, country == grp),\n      aes(size = pop), color = \"#9C55E3\", show.legend = FALSE\n    ) +\n    scale_x_log10(\n      breaks = c(500, 2000, 8000, 32000),\n      labels = scales::label_dollar(accuracy = 1)\n    ) +\n    scale_size(\n      range = c(1, 12), name = \"Population:\", \n      breaks = c(10, 100, 1000)*1000000, \n      labels = scales::label_comma(scale = 1 / 10^6, suffix = \"M\")\n    ) +\n    labs(x = \"GDP per capita\", y = \"Life expectancy\") +\n    theme_minimal(base_family = \"Asap SemiCondensed\", base_size = 15) +\n    theme(panel.grid.minor = element_blank())\n  \n}\n```\n:::\n\n\n\n--------------------------------------------------------------------------------\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndraw_gp_country(\"United States\")\n```\n\n::: {.cell-output-display}\n![](02-text-solution_files/figure-revealjs/exercise-2-2-gapminder-7-example-usa-1.png){width=2000}\n:::\n:::\n\n\n\n--------------------------------------------------------------------------------\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndraw_gp_country(\"Germany\")\n```\n\n::: {.cell-output-display}\n![](02-text-solution_files/figure-revealjs/exercise-2-2-gapminder-8-example-germany-1.png){width=2000}\n:::\n:::\n\n\n\n--------------------------------------------------------------------------------\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndraw_gp_country(\"India\")\n```\n\n::: {.cell-output-display}\n![](02-text-solution_files/figure-revealjs/exercise-2-2-gapminder-9-example-india-1.png){width=2000}\n:::\n:::\n\n\n\n--------------------------------------------------------------------------------\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndraw_gp_country(\"Zambia\")\n```\n\n::: {.cell-output-display}\n![](02-text-solution_files/figure-revealjs/exercise-2-2-gapminder-10-example-zambia-1.png){width=2000}\n:::\n:::\n",
    "supporting": [
      "02-text-solution_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}