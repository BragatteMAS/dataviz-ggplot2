{
  "hash": "1281032909d8b8716b044fefae33a75c",
  "result": {
    "markdown": "---\ntitle: \"Engaging and Beautiful Data Visualizations with ggplot2\"\nsubtitle: \"<span style='font-size:2em;'>Fundamentals & Workflows</span>\"\nauthor: \"<a href='https://www.cedricscherer.com' style='color:#28a87d;font-weight:600;'>Cédric Scherer</a>&ensp;//&ensp;posit::conf&ensp;//&ensp;September 2023\"\nformat:\n  revealjs:\n    theme: css/style.scss\n    footer: '[Cédric Scherer](https://cedricscherer.com) // posit::conf(2023) // DataViz with ggplot2'\n    transition: fade\n    progress: true\n    multiplex: false\n    preview-links: true\n    scrollable: false\n    hide-inactive-cursor: true\n    highlight-style: printing\n    chalkboard:\n      theme: whiteboard\n      boardmarker-width: 4\n      buttons: true\n    pause: true\neditor: source\nknitr:\n  opts_chunk:\n    dev: \"ragg_png\"\n    retina: 3\n    dpi: 200\nexecute:\n  freeze: auto\n  cache: true\n  echo: true\n  fig-width: 10.1\n  fig-height: 6.3\n  fig-align: center\n---\n\n\n\n\n##\n\n::: footer\n[{ggplot2} package description](https://ggplot2.tidyverse.org/)\n:::\n\n![](img/intro/ggplot2.png){fig-align=\"center\" fig-alt=\"The ggplot2 hex logo.\"}\n\n<br>\n\n<b style='font-size:30pt;'><code>{ggplot2}</code> is a system for declaratively creating graphics,<br>based on \"The Grammar of Graphics\" (Wilkinson 2005).</b>\n\n::: fragment\n[You provide the data, tell <code>{ggplot2}</code> how to]{style=\"font-size:24pt;\"} [map variables to aesthetics,]{.circle-highlight}<br>what graphical primitives to use, and it takes care of the details.\n:::\n\n## Advantages of {ggplot2}\n\n::: incremental\n-   consistent underlying \"grammar of graphics\" (Wilkinson 2005)\\\n-   very flexible, layered plot specification\\\n-   theme system for polishing plot appearance\\\n-   lots of additional functionality thanks to extensions\\\n-   active and helpful community\n:::\n\n\n## The Components of a ggplot\n\n<br>\n<table style='width:100%;font-size:16pt;'>\n  <tr>\n    <th>Component</th>\n    <th>Function</th>\n    <th>Explanation</th>\n  </tr>\n  <tr>\n    <td><b style='color:#67676;'>Data</b></td>\n    <td><code>ggplot(data)</code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td>\n    <td>*The raw data that you want to visualize.*</td>\n  </tr>\n  <tr>\n    <td><b style='color:#67676;'>Aesthetics&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</b></td>\n    <td><code>aes()</code></td>\n    <td>*The mapping between variables and visual properties*</td>\n  <tr>\n    <td><b style='color:#67676;'>Geometries</b></td>\n    <td><code>geom_*()</code></td>\n    <td>*The geometric shapes representing the data.*</td>\n  </tr>\n</table>\n\n--------------------------------------------------------------------------------\n\n![ggplot2 examples featured on [ggplot2.tidyverse.org](https://ggplot2.tidyverse.org/)](img/fundamentals/basic-ggplots.png){fig-align=\"center\" fig-alt=\"A collection of the versatility of ggplot2 to create basic graphs. All of them use only data, aesthetics, and layers with the defaults of ggplot2.\"}\n\n\n## The Components of a ggplot\n\n\n<br>\n<table style='width:100%;font-size:16pt;'>\n  <tr>\n    <th>Component</th>\n    <th>Function</th>\n    <th>Explanation</th>\n  </tr>\n  <tr>\n    <td><b style='color:#67676;'>Data</b></td>\n    <td><code>ggplot(data)</code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td>\n    <td>*The raw data that you want to visualize.*</td>\n  </tr>\n  <tr>\n    <td><b style='color:#67676;'>Aesthetics&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</b></td>\n    <td><code>aes()</code></td>\n    <td>*The mapping between variables and visual properties.*</td>\n  <tr>\n    <td><b style='color:#67676;'>Geometries</b></td>\n    <td><code>geom_*()</code></td>\n    <td>*The geometric shapes representing the data.*</td>\n  </tr>\n  <tr>\n    <td><b style='color:#67676;'>Statistics</b></td>\n    <td><code>stat_*()</code></td>\n    <td>*The statistical transformations applied to the data.*</td>\n  </tr>\n  <tr>\n    <td><b style='color:#67676;'>Scales</b></td>\n    <td><code>scale_*()</code></td>\n    <td>*The representation of mapped aesthetic attributes.*</td>\n  </tr>\n  <tr>\n    <td><b style='color:#67676;'>Coordinate System</b></td>\n    <td><code>coord_*()</code></td>\n    <td>*The transformation to map data coordinates into the plot plane.*</td>\n  </tr>\n  <tr>\n    <td><b style='color:#67676;'>Facets</b></td>\n    <td><code>facet_*()</code></td>\n    <td>*The arrangement of the data into a grid of small multiples.*</td>\n  </tr>\n  <tr>\n    <td><b style='color:#67676;'>Visual Themes</b></td>\n    <td><code>theme() | theme_*()</code></td>\n    <td>*The overall visual defaults of non-data elements of the graphic.*</td>\n  </tr>\n</table>\n\n--------------------------------------------------------------------------------\n\n![Illustration by [Allison Horst](https://github.com/allisonhorst/stats-illustrations)](img/fundamentals/ah-ggplot2-exploratory.png){fig-align=\"center\" fig-alt=\"Allison Horsts monster illustration of explorative plotting with ggplot2.\"}\n\n--------------------------------------------------------------------------------\n\n![Illustration by [Allison Horst](https://github.com/allisonhorst/stats-illustrations)](img/fundamentals/ah-ggplot2-masterpiece.png){fig-align=\"center\" fig-alt=\"Allison Horsts monster illustration of building  data masterpiece ith ggplot2 featuring a little Picasso monster :)\"}\n\n\n# The {ggplot2} Showcase\n\n--------------------------------------------------------------------------------\n\n<br>\n\n![Collection of Graphics from the [BBC R Cookbook](https://bbc.github.io/rcookbook/)](img/showcase/bbc-gallery.png){fig-align=\"center\" fig-alt=\"A multi-plot panel of various data visualizations created by the BBC teams.\"}\n\n--------------------------------------------------------------------------------\n\n<br>\n\n![Collection of Graphics from the [BBC R Cookbook](https://bbc.github.io/rcookbook/)](img/showcase/bbc-gallery-quote.png){fig-align=\"center\" fig-alt=\"A multi-plot panel of various data visualizations created by the BBC teams.\"}\n\n--------------------------------------------------------------------------------\n\n![[\"Bill Dimensions of Brush-Tailed Penguins\"](https://github.com/Z3tt/TidyTuesday/tree/main/plots/2020_31)](img/showcase/palmer-penguins.png){fig-align=\"center\" fig-size=\"80%\" fig-alt=\"Distribution of coffee bean ratings by the Coffee Quality Institute for countries with 25 or more reviews (up to 2018). Distributions are shown as dot plots and multiple interval stripes.\"}\n\n--------------------------------------------------------------------------------\n\n![[\"Netflix Content Explosion\"](https://twitter.com/tanya_shapiro/status/1610419176333627393) by Tanya Shapiro](img/showcase/netflix-originals-tanya-shapiro.jpeg){fig-align=\"center\" fig-size=\"50%\" fig-alt=\"rea graph of number of Netflix original series over time, annotated with images and labels.\"}\n\n--------------------------------------------------------------------------------\n\n![My reinterpreted [The Economist graphic](https://www.economist.com/graphic-detail/2019/09/28/why-are-some-languages-spoken-faster-than-others)](img/showcase/speech-speed.png){fig-align=\"center\" fig-alt=\"The raincloud chart showing the distributions of normalized speech rates (dark pink) and information rates (dark lime green) across language families.\"}\n\n--------------------------------------------------------------------------------\n\n![[\"Not My Cup of Coffee\"](https://www.behance.net/gallery/100638417/Not-My-Cup-of-Coffee)](img/showcase/coffee-ratings.png){fig-align=\"center\" fig-alt=\"The raincloud chart showing the distributions of normalized speech rates (dark pink) and information rates (dark lime green) across language families.\"}\n\n--------------------------------------------------------------------------------\n\n![[\"Food Carbon Footprint Index 2018\"](https://github.com/Z3tt/TidyTuesday/tree/main/plots/2020_08)](img/showcase/20200307_TT_2020_08_CarbonFoodprint_alt.png){fig-align=\"center\" fig-alt=\"Two circular hierarchical bar plots showing the carbon footprint 2018 for food consumption and CO2 per continent and country.\"}\n\n--------------------------------------------------------------------------------\n\n![[\"Popular Programming Languages in CRAN Packages\"](https://twitter.com/spren9er/status/1195826547724374018) by Torsten Sprenger](img/showcase/cran-packages-torsten-sprenger.png){fig-align=\"center\" fig-alt=\"A circular tree showing the programing languages used in CRAN packages, with nodes being grouped by languages and package names, sized by number of lines.\"}\n\n--------------------------------------------------------------------------------\n\n![[\"Appearance of X-Men Characters\"](https://www.behance.net/gallery/100640345/Appearance-of-Popular-X-Men-Characters](img/showcase/xmen-comics.png){fig-align=\"center\" fig-size=\"50%\" fig-alt=\"Streamgraphs showing the appearance of the most common X-Men characters (Wovlerine, Magneto, Nightcrawler, Storm & Gambit) during the so-called \"Claremont Run\". Chris Claremont is a famous American comic book writer who was in charge of the \"Uncanny X-Men\" comic book series from 1975–1991. During that time he developed complex literary themes and strong female characters into superhero comics, and turning the X-Men into one of Marvel's most popular series.\"}\n\n--------------------------------------------------------------------------------\n\n![[\"Artists in the US\"](https://twitter.com/leeolney3/status/1574656040599265280) by Lee Olney](img/showcase/artists-usa-lee-olney.png){fig-align=\"center\" fig-alt=\"A facet of barcodes showing location quotients from artists in the US by type and race.\"}\n\n--------------------------------------------------------------------------------\n\n<br>\n\n![My Contribution to the [SWDchallenge \"Small Multiples\"](https://www.storytellingwithdata.com/blog/2020/1/6/swdchallenge-small-multiples)](img/showcase/SWD_2020_01_SmallMultiples_grey.png){fig-align=\"center\" fig-alt=\"A facet of shots and goals of the Bundesliga football clubs in the season 2019/20.\"}\n\n--------------------------------------------------------------------------------\n\n![[\"European Energy Generation\"](github.com/jack-davison/tidytuesday) by Jack Davison](img/showcase/jack_davison.png){fig-align=\"center\" fig-alt=\"A gridded map of Europe showing horizontal stacked bars of energy production per country over time (each bar represents share among one year from 2016 to 2018).\"}\n\n--------------------------------------------------------------------------------\n\n![[Moon Charts as a Tile Grid Map](https://github.com/z3tt/grid-btw-wahlkreise-constituencies) showing the 2nd Vote Results from the German Election 2021](img/showcase/btw21_tile_grid_moon_second_de.png){fig-align=\"center\" fig-alt=\"A grid map using moon charts for all 297 electoral districts which show the share of the wnning party in second votesc during the German election in 2021.\"}\n\n--------------------------------------------------------------------------------\n\n![Our Winning Contribution to the [BES MoveMap Contest](https://besmovesig.wordpress.com/2021/02/25/mapping-movements-the-art-and-the-science-we-have-the-winners/)](img/showcase/20210131_BES_CheetahMap_rcarto.png){fig-align=\"center\" fig-alt=\"A spatial map of cheetah movement and their hotspot behaviour in Namibia.\"}\n\n--------------------------------------------------------------------------------\n\n![[Bivariate Choropleth x Hillshade Map](timogrossenbacher.ch/2019/04/bivariate-maps-with-ggplot2-and-sf) by Timo Gossenbacher](img/showcase/swiss_map.png){fig-align=\"center\" fig-alt=\"A spatial map of income and inequality shown with a bivariate color palette; alpine regions have a hillshading effect.\"}\n\n--------------------------------------------------------------------------------\n\n![Pixel Art by [Georgios Karamanis](https://karaman.is/)](img/showcase/bob-ross-pixel-art-georgios.png){fig-align=\"center\" fig-alt=\"A set of small multiples using pixelated encodings of certain elements in Bob Ross' paintings.\"}\n\n--------------------------------------------------------------------------------\n\n![Generative Art by [Thomas Lin Pedersen](https://www.data-imaginist.com/art)](img/showcase/genart.png){fig-align=\"center\" fig-alt=\"Two artworks by Thomas Pedersen, completely generated in R with ggplot2 (and pure magic).\"}\n\n\n# A Walk-Through Example\n\n\n## The Data Set\n\n<b style='font-size:2.3rem;'>Bike sharing counts in London, UK, powered by [TfL Open Data](https://tfl.gov.uk/modes/cycling/santander-cycles)</b>\n\n::: incremental\n-   covers the years 2015 and 2016\n-   incl. weather data acquired from [freemeteo.com](https://freemeteo.com)\n-   prepared by Hristo Mavrodiev for [Kaggle](https://www.kaggle.com/hmavrodiev/london-bike-sharing-dataset)\n-   further modification by myself\n:::\n\n\n## The Data Set\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(readr)\nlibrary(ggplot2)\n\nbikes <-\n  read_csv(\n    here::here(\"data\", \"london-bikes.csv\"),\n    col_types = \"Dcfffilllddddc\"\n  )\n```\n:::\n\n\n\n## The Data Set\n\n\n::: {.cell hash='01_fundamentals_cache/revealjs/view-data_5c2722718d637bd4b97a44b1c3e16471'}\n\n```{.r .cell-code}\nbikes\n```\n\n::: {.cell-output .cell-output-stdout}\n```{.hscroll}\n# A tibble: 1,454 × 14\n   date       day_night year  month season count is_workday is_weekend is_holiday  temp temp_feel humidity wind_speed weather_type    \n   <date>     <chr>     <fct> <fct> <fct>  <int> <lgl>      <lgl>      <lgl>      <dbl>     <dbl>    <dbl>      <dbl> <chr>           \n 1 2015-01-04 day       2015  1     3       6830 FALSE      TRUE       FALSE       2.17     -0.75     95.2      10.4  broken clouds   \n 2 2015-01-04 night     2015  1     3       2404 FALSE      TRUE       FALSE       2.79      2.04     93.4       4.58 clear           \n 3 2015-01-05 day       2015  1     3      14763 TRUE       FALSE      FALSE       8.96      7.71     81.1       8.67 broken clouds   \n 4 2015-01-05 night     2015  1     3       5609 TRUE       FALSE      FALSE       7.12      5.71     79.5       9.04 cloudy          \n 5 2015-01-06 day       2015  1     3      14501 TRUE       FALSE      FALSE       9         6.46     80.2      19.2  broken clouds   \n 6 2015-01-06 night     2015  1     3       6112 TRUE       FALSE      FALSE       6.71      4.21     77.6      12.8  clear           \n 7 2015-01-07 day       2015  1     3      16358 TRUE       FALSE      FALSE       8.17      5.08     75.2      21.2  scattered clouds\n 8 2015-01-07 night     2015  1     3       4706 TRUE       FALSE      FALSE       6.68      3.86     81.3      18.1  clear           \n 9 2015-01-08 day       2015  1     3       9971 TRUE       FALSE      FALSE       9.46      7.12     79.4      18.8  scattered clouds\n10 2015-01-08 night     2015  1     3       5630 TRUE       FALSE      FALSE      10.0       8.46     79.2      22.2  clear           \n# ℹ 1,444 more rows\n```\n:::\n:::\n\n\n\n\n## The Data Set\n\n\n::: {.cell hash='01_fundamentals_cache/revealjs/data-table_e9af16857ed2e615b9172ae7616b5350'}\n::: {.cell-output-display}\n`````{=html}\n<table class=\"table lightable-minimal lightable-hover\" style=\"font-size: 20px; margin-left: auto; margin-right: auto; font-family: Spline Sans Mono; \">\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> Variable </th>\n   <th style=\"text-align:left;\"> Description </th>\n   <th style=\"text-align:left;\"> Class </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> date </td>\n   <td style=\"text-align:left;\"> Date encoded as `YYYY-MM-DD` </td>\n   <td style=\"text-align:left;\"> date </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> day_night </td>\n   <td style=\"text-align:left;\"> `day` (6:00am–5:59pm) or `night` (6:00pm–5:59am) </td>\n   <td style=\"text-align:left;\"> character </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> year </td>\n   <td style=\"text-align:left;\"> `2015` or `2016` </td>\n   <td style=\"text-align:left;\"> factor </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> month </td>\n   <td style=\"text-align:left;\"> `1` (January) to `12` (December) </td>\n   <td style=\"text-align:left;\"> factor </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> season </td>\n   <td style=\"text-align:left;\"> `0` (spring), `1` (summer), `2` (autumn), or `3` (winter) </td>\n   <td style=\"text-align:left;\"> factor </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> count </td>\n   <td style=\"text-align:left;\"> Sum of reported bikes rented </td>\n   <td style=\"text-align:left;\"> integer </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> is_workday </td>\n   <td style=\"text-align:left;\"> `TRUE` being Monday to Friday and no bank holiday </td>\n   <td style=\"text-align:left;\"> logical </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> is_weekend </td>\n   <td style=\"text-align:left;\"> `TRUE` being Saturday or Sunday </td>\n   <td style=\"text-align:left;\"> logical </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> is_holiday </td>\n   <td style=\"text-align:left;\"> `TRUE` being a bank holiday in the UK </td>\n   <td style=\"text-align:left;\"> logical </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> temp </td>\n   <td style=\"text-align:left;\"> Average air temperature (°C) </td>\n   <td style=\"text-align:left;\"> double </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> temp_feel </td>\n   <td style=\"text-align:left;\"> Average feels like temperature (°C) </td>\n   <td style=\"text-align:left;\"> double </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> humidity </td>\n   <td style=\"text-align:left;\"> Average air humidity (%) </td>\n   <td style=\"text-align:left;\"> double </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> wind_speed </td>\n   <td style=\"text-align:left;\"> Average wind speed (km/h) </td>\n   <td style=\"text-align:left;\"> double </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> weather_type </td>\n   <td style=\"text-align:left;\"> Most common weather type </td>\n   <td style=\"text-align:left;\"> character </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\n\n--------------------------------------------------------------------------------\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](01_fundamentals_files/figure-revealjs/walkthrough-full-1.png){width=2020}\n:::\n:::\n\n\n\n## A Default ggplot\n\n\n::: {.cell hash='01_fundamentals_cache/revealjs/walkthrough-0_03be674716d4c999e350cfd20bdb7e8e'}\n\n```{.r .cell-code}\n## scatter plot of plot bikes$count versus bikes$temp_feel\nggplot(data = bikes) +              ## initial call + data\n  aes(x = temp_feel, y = count) +   ## aesthetics\n  geom_point()                      ## geometric layer\n```\n:::\n\n\n\n## A Default ggplot\n\n\n::: {.cell hash='01_fundamentals_cache/revealjs/walkthrough-1_88cebf6566fce1673e6ba360361e1906'}\n\n```{.r .cell-code}\n## scatter plot of plot bikes$count versus bikes$temp_feel\nggplot(bikes, aes(x = temp_feel, y = count)) +\n  geom_point()\n```\n:::\n\n\n--------------------------------------------------------------------------------\n\n\n::: {.cell hash='01_fundamentals_cache/revealjs/walkthrough-1_20eb50293037cadaa426f4ad16af682c'}\n::: {.cell-output-display}\n![](01_fundamentals_files/figure-revealjs/walkthrough-1-1.png){width=2020}\n:::\n:::\n\n\n\n## Combine Layers\n\n\n::: {.cell hash='01_fundamentals_cache/revealjs/walkthrough-2_eedb44882758ec24c308c98f894159f6'}\n\n```{.r .cell-code  code-line-numbers=\"3,4\"}\nggplot(bikes, aes(x = temp_feel, y = count)) +\n  geom_point() + \n  ## add a GAM smoothing\n  stat_smooth() ## also: geom_smooth()\n```\n:::\n\n\n--------------------------------------------------------------------------------\n\n\n::: {.cell hash='01_fundamentals_cache/revealjs/walkthrough-2_a76bfc36f05892ca403944995a5d7acf'}\n::: {.cell-output-display}\n![](01_fundamentals_files/figure-revealjs/walkthrough-2-1.png){width=2020}\n:::\n:::\n\n\n\n## Mapping Aesthetics\n\n\n::: {.cell hash='01_fundamentals_cache/revealjs/walkthrough-3_65d6daf4fb7743b5625bd7f2336f5a88'}\n\n```{.r .cell-code  code-line-numbers=\"1\"}\nggplot(bikes, aes(x = temp_feel, y = count, color = day_night)) + \n  geom_point() + \n  stat_smooth()\n```\n:::\n\n\n--------------------------------------------------------------------------------\n\n\n::: {.cell hash='01_fundamentals_cache/revealjs/walkthrough-3_d22f2dade37cb597cf75708bf7beb6bd'}\n::: {.cell-output-display}\n![](01_fundamentals_files/figure-revealjs/walkthrough-3-1.png){width=2020}\n:::\n:::\n\n\n\n##  Mapping Aesthetics\n\n\n::: {.cell hash='01_fundamentals_cache/revealjs/walkthrough-4_ce2ed493ae68bd3bb411006a08557007'}\n\n```{.r .cell-code  code-line-numbers=\"2,3|4,5\"}\nggplot(bikes, aes(x = temp_feel, y = count)) + \n  ## color mapping only applied to points\n  geom_point(aes(color = day_night)) + \n  ## invisible grouping to create two trend lines\n  stat_smooth(aes(group = day_night))\n```\n:::\n\n\n--------------------------------------------------------------------------------\n\n\n::: {.cell hash='01_fundamentals_cache/revealjs/walkthrough-4_ee85c20a132ecaac09a7a83dd5d96887'}\n::: {.cell-output-display}\n![](01_fundamentals_files/figure-revealjs/walkthrough-4-1.png){width=2020}\n:::\n:::\n\n\n\n## Setting Properties\n\n\n::: {.cell hash='01_fundamentals_cache/revealjs/walkthrough-5_ddcfe2957f7d95869ab2526250138dc9'}\n\n```{.r .cell-code  code-line-numbers=\"2,4,5|7,9,10\"}\nggplot(bikes, aes(x = temp_feel, y = count)) + \n  geom_point(\n    aes(color = day_night), \n    ## setting larger points with 50% opacity\n    alpha = .5, size = 1.5\n  ) + \n  stat_smooth(\n    aes(group = day_night), \n    ## use linear fitting + draw black smoothing lines\n    method = \"lm\", color = \"black\"\n  )\n```\n:::\n\n\n--------------------------------------------------------------------------------\n\n\n::: {.cell hash='01_fundamentals_cache/revealjs/walkthrough-5_ffa0fc52cbee0c24091311d35b711b1f'}\n::: {.cell-output-display}\n![](01_fundamentals_files/figure-revealjs/walkthrough-5-1.png){width=2020}\n:::\n:::\n\n\n\n## Split into Facets\n\n\n::: {.cell hash='01_fundamentals_cache/revealjs/walkthrough-6_de0a0635dd352eab226c40f400758d5f'}\n\n```{.r .cell-code  code-line-numbers=\"9,10|10|6,7,8\"}\nggplot(bikes, aes(x = temp_feel, y = count)) + \n  geom_point(\n    aes(color = day_night), \n    alpha = .5, size = 1.5\n  ) + \n  stat_smooth(\n    method = \"lm\", color = \"black\"\n  ) +\n  ## small multiples\n  facet_wrap(facets = vars(day_night)) ## also: ~ day_night\n```\n:::\n\n\n--------------------------------------------------------------------------------\n\n\n::: {.cell hash='01_fundamentals_cache/revealjs/walkthrough-6_2123d9ae24b888fd2a2415a61123419a'}\n::: {.cell-output-display}\n![](01_fundamentals_files/figure-revealjs/walkthrough-6-1.png){width=2020}\n:::\n:::\n\n\n\n## Split into Facets\n\n\n::: {.cell hash='01_fundamentals_cache/revealjs/walkthrough-7_59d4ba5a495bd1f0d7ddca79545ca0ec'}\n\n```{.r .cell-code  code-line-numbers=\"9,10,11,12|3\"}\nggplot(bikes, aes(x = temp_feel, y = count)) + \n  geom_point(\n    aes(color = season), \n    alpha = .5, size = 1.5\n  ) + \n  stat_smooth(\n    method = \"lm\", color = \"black\"\n  ) +\n  ## small multiples\n  facet_grid(\n    rows = vars(day_night), cols = vars(year) ## also: day_night ~ year\n  )\n```\n:::\n\n\n--------------------------------------------------------------------------------\n\n\n::: {.cell hash='01_fundamentals_cache/revealjs/walkthrough-7_ab984e91cd570410e2f3a94e5948f600'}\n::: {.cell-output-display}\n![](01_fundamentals_files/figure-revealjs/walkthrough-7-1.png){width=2020}\n:::\n:::\n\n\n\n## Free Facets Axes\n\n\n::: {.cell hash='01_fundamentals_cache/revealjs/walkthrough-8_82e2cd0176f2539d14ccae5bfa3cbe04'}\n\n```{.r .cell-code  code-line-numbers=\"11,12|13,14\"}\nggplot(bikes, aes(x = temp_feel, y = count)) + \n  geom_point(\n    aes(color = season), \n    alpha = .5, size = 1.5\n  ) + \n  stat_smooth(\n    method = \"lm\", color = \"black\"\n  ) +\n  facet_grid(\n    day_night ~ year, \n    ## free y axis range\n    scales = \"free_y\", \n    ## scale heights proportionally\n    space = \"free_y\"\n  )\n```\n:::\n\n\n--------------------------------------------------------------------------------\n\n\n::: {.cell hash='01_fundamentals_cache/revealjs/walkthrough-8_77b954984dda0cd5f1bc76f385956190'}\n::: {.cell-output-display}\n![](01_fundamentals_files/figure-revealjs/walkthrough-8-1.png){width=2020}\n:::\n:::\n\n\n\n## Store ggplot\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"1\"}\ng1 <- \n  ggplot(bikes, aes(x = temp_feel, y = count)) + \n  geom_point(\n    aes(color = season), \n    alpha = .5, size = 1.5\n  ) + \n  stat_smooth(\n    method = \"lm\", color = \"black\"\n  ) +\n  facet_grid(\n    day_night ~ year, \n    scales = \"free_y\", \n    space = \"free_y\"\n  )\n```\n:::\n\n\n\n## Change the Axis Scaling\n\n\n::: {.cell hash='01_fundamentals_cache/revealjs/walkthrough-9a_d48f6d1b5ea1d5178572ec1fbaad68d5'}\n\n```{.r .cell-code  code-line-numbers=\"1|2,3,8|4,5|6,7\"}\ng1 +\n  ## x axis\n  scale_x_continuous(\n    ## add °C symbol\n    labels = function(x) paste0(x, \"°C\"), \n    ## use 5°C spacing\n    breaks = -1:6*5  ## also: seq(-5, 30, by = 5)\n  )\n```\n:::\n\n\n\n## Change the Axis Scaling\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"9,10,16|12,13|14,15|1\"}\ng2 <- g1 +\n  ## x axis\n  scale_x_continuous(\n    ## add °C symbol\n    labels = function(x) paste0(x, \"°C\"), \n    ## use 5°C spacing\n    breaks = -1:6*5  ## also: seq(-5, 30, by = 5)\n  ) +\n  ## y axis\n  scale_y_continuous(\n    ## add a thousand separator\n    labels = scales::label_comma(), \n    ## use consistent spacing across rows\n    breaks = 0:5*10000\n  )\n```\n:::\n\n\n--------------------------------------------------------------------------------\n\n\n::: {.cell hash='01_fundamentals_cache/revealjs/walkthrough-9_f98242da022a3bcb58217756a869b9e7'}\n::: {.cell-output-display}\n![](01_fundamentals_files/figure-revealjs/walkthrough-9-1.png){width=2020}\n:::\n:::\n\n\n\n## Use a Custom Color Palette\n\n\n::: {.cell hash='01_fundamentals_cache/revealjs/walkthrough-10a_00c1002c4f0e8a8fe0aaf69de741a5d7'}\n\n```{.r .cell-code  code-line-numbers=\"2,3,4,5\"}\ng2 +\n  ## use a custom color palette for season colors\n  scale_color_manual(\n    values = c(\"#6681FE\", \"#1EC98D\", \"#F7B01B\", \"#A26E7C\")\n  )\n```\n:::\n\n\n\n## Use a Custom Color Palette\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"1,2,3,4,5,6,7|10,11,12\"}\n## use a named vector for explicit matching\ncolors <- c(\n  `0` = \"#1EC98D\",\n  `1` = \"#F7B01B\",\n  `2` = \"#A26E7C\",\n  `3` = \"#6681FE\"\n)\n\ng2 +\n  scale_color_manual(\n    values = colors\n  )\n```\n:::\n\n\n--------------------------------------------------------------------------------\n\n\n::: {.cell hash='01_fundamentals_cache/revealjs/walkthrough-10_44cc58f231267da34f192afad6ad694c'}\n::: {.cell-output-display}\n![](01_fundamentals_files/figure-revealjs/walkthrough-10-1.png){width=2020}\n:::\n:::\n\n\n\n## Adjust Labels and Titles\n\n\n::: {.cell hash='01_fundamentals_cache/revealjs/walkthrough-11_9ecdff2d280f8c4011dc650f2471c4a1'}\n\n```{.r .cell-code  code-line-numbers=\"2,5\"}\ng2 +\n  ## overwrite legend keys\n  scale_color_manual(\n    values = colors,\n    labels = c(\"Winter\", \"Spring\", \"Summer\", \"Autumn\")\n  )\n```\n:::\n\n\n--------------------------------------------------------------------------------\n\n\n::: {.cell hash='01_fundamentals_cache/revealjs/walkthrough-11_14b9fe3aca291b236e2bd132211f99b7'}\n::: {.cell-output-display}\n![](01_fundamentals_files/figure-revealjs/walkthrough-11-1.png){width=2020}\n:::\n:::\n\n\n\n## Adjust Labels and Titles\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"6,12|7,8|9,10,11\"}\ng3 <- g2 +\n  scale_color_manual(\n    values = colors,\n    labels = c(\"Winter\", \"Spring\", \"Summer\", \"Autumn\")\n  ) +\n  labs(\n    ## overwrite axis and legend titles\n    x = \"Average feels-like temperature\", y = NULL, color = NULL,\n    ## add plot title and caption\n    title = \"Trends of Reported Bike Rents versus Feels-Like Temperature in London\",\n    caption = \"Data: TfL (Transport for London), Jan 2015–Dec 2016\"\n  )\n```\n:::\n\n\n--------------------------------------------------------------------------------\n\n\n::: {.cell hash='01_fundamentals_cache/revealjs/walkthrough-12_7850d419ce22c42c7e91cffd8be31e70'}\n::: {.cell-output-display}\n![](01_fundamentals_files/figure-revealjs/walkthrough-12-1.png){width=2020}\n:::\n:::\n\n\n\n## Apply a Complete Theme\n\n\n::: {.cell hash='01_fundamentals_cache/revealjs/walkthrough-13_8109cdb2c5f715a7b10e5250b114aa40'}\n\n```{.r .cell-code  code-line-numbers=\"2,3,4,5\"}\ng3 +\n  ## add theme with a custom font + larger element sizes\n  theme_light(\n    base_size = 15, base_family = \"Spline Sans\"\n  )\n```\n:::\n\n\n--------------------------------------------------------------------------------\n\n\n::: {.cell hash='01_fundamentals_cache/revealjs/walkthrough-13_7c33ea7eb020fd5815093502a3447466'}\n::: {.cell-output-display}\n![](01_fundamentals_files/figure-revealjs/walkthrough-13-1.png){width=2020}\n:::\n:::\n\n\n\n## Apply a Complete Theme\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"3,4,20|5,6,7|8,9,10,11,12,13,14|15,16|17,18|19\"}\ng4 <- g3 +\n  theme_light(base_size = 15, base_family = \"Spline Sans\") +\n  ## theme adjustments\n  theme(\n    plot.title.position = \"plot\", ## left-align title \n    plot.caption.position = \"plot\", ## right-align caption\n    legend.position = \"top\", ## place legend above plot\n    plot.title = element_text(face = \"bold\", size = rel(1.4)), ## larger, bold title\n    axis.text = element_text(family = \"Spline Sans Mono\"), ## monospaced font for axes\n    axis.title.x = element_text( ## left-aligned, grey x axis label\n      hjust = 0, color = \"grey20\", margin = margin(t = 12)\n    ),\n    legend.text = element_text(size = rel(1)), ## larger legend labels\n    strip.text = element_text(face = \"bold\", size = rel(1.15)), ## larger, bold facet labels\n    panel.grid.major.x = element_blank(), ## no vertical major lines\n    panel.grid.minor = element_blank(), ## no minor grid lines\n    panel.spacing.x = unit(20, \"pt\"), ## increase white space between panels\n    panel.spacing.y = unit(10, \"pt\"), ## increase white space between panels\n    plot.margin = margin(rep(15, 4)) ## adjust white space around plot\n  )\n```\n:::\n\n\n--------------------------------------------------------------------------------\n\n\n::: {.cell hash='01_fundamentals_cache/revealjs/walkthrough-14_6a359b2d77f423a6fe3a879f7a4079ab'}\n::: {.cell-output-display}\n![](01_fundamentals_files/figure-revealjs/walkthrough-14-1.png){width=2020}\n:::\n:::\n\n\n\n## Adjust Legend\n\n\n::: {.cell hash='01_fundamentals_cache/revealjs/walkthrough-15_8108dd0e3675dc31bb8d80666f0f11af'}\n\n```{.r .cell-code  code-line-numbers=\"2,3,4,5|4\"}\ng4 +\n  ## adjust symbol size in legend\n  guides(\n    color = guide_legend(override.aes = list(size = 4))\n  )\n```\n:::\n\n\n\n## Adjust Legend\n\n\n::: {.cell hash='01_fundamentals_cache/revealjs/walkthrough-15b_c1418019cb9a8578e9d029e074ce3810'}\n\n```{.r .cell-code  code-line-numbers=\"2,5,6,7|5,6\"}\ng4 +\n  scale_color_manual(\n    values = colors,\n    labels = c(\"Winter\", \"Spring\", \"Summer\", \"Autumn\"),\n    ## adjust symbol size in legend size\n    guide = guide_legend(override.aes = list(size = 4))\n  )\n```\n:::\n\n\n--------------------------------------------------------------------------------\n\n\n::: {.cell hash='01_fundamentals_cache/revealjs/walkthrough-15_d1c3787a67b1dd05e380fcb49a00f749'}\n::: {.cell-output-display}\n![](01_fundamentals_files/figure-revealjs/walkthrough-15-1.png){width=2020}\n:::\n:::\n\n\n\n--------------------------------------------------------------------------------\n\n## Full Code\n\n\n::: {.cell hash='01_fundamentals_cache/revealjs/walkthrough-full_9b525982ad01b9596c4c0110d0ddac56'}\n\n```{.r .cell-code}\n## create named color vector\ncolors <- c(\n  `0` = \"#1EC98D\",\n  `1` = \"#F7B01B\",\n  `2` = \"#A26E7C\",\n  `3` = \"#6681FE\"\n)\n\n## scatter plot of plot bikes$count versus bikes$temp_feel\nggplot(bikes, aes(x = temp_feel, y = count)) + \n  ## add points\n  geom_point(\n    ## color mapping only applied to points\n    aes(color = season), \n    ## setting larger points with 50% opacity\n    alpha = .5, size = 1.5\n  ) + \n  ## add a smoothing\n  stat_smooth(  ## also: geom_smooth()\n    ## use linear fitting + draw black smoothing lines\n    method = \"lm\", color = \"black\"\n  ) +\n  ## small multiples\n  facet_grid(\n    day_night ~ year,  ## also: vars(day_night), vars(year)\n    ## free y axis range\n    scales = \"free_y\", \n    ## scale heights proportionally \n    space = \"free_y\"\n  ) +\n  ## x axis\n  scale_x_continuous(\n    ## add °C symbol\n    labels = function(x) paste0(x, \"°C\"), \n    ## use 5°C spacing\n    breaks = -1:6*5  ## also: seq(-5, 30, by = 5)\n  ) +\n  ## y axis\n  scale_y_continuous(\n    ## add a thousand separator\n    labels = scales::label_comma(), \n    ## use consistent spacing across rows\n    breaks = 0:5*10000\n  ) +\n  ## colors\n  scale_color_manual(\n    ## use a custom color palette\n    values = colors,\n    ## and overwrite legend keys\n    labels = c(\"Winter\", \"Spring\", \"Summer\", \"Autumn\"),\n    ## adjust symbol size in legend size\n    guide = guide_legend(override.aes = list(size = 4))\n  ) +\n  labs(\n    ## overwrite axis and legend titles\n    x = \"Average feels-like temperature\", y = NULL, color = NULL,\n    ## add plot title and caption\n    title = \"Trends of Reported Bike Rents versus Feels-Like Temperature in London\",\n    caption = \"Data: TfL (Transport for London), Jan 2015–Dec 2016\"\n  ) +\n  ## add theme with a custom font + larger element sizes\n  theme_light(\n    base_size = 15, base_family = \"Spline Sans\"\n  ) +\n  ## theme adjustments\n  theme(\n    plot.title.position = \"plot\", ## left-align title \n    plot.caption.position = \"plot\", ## right-align caption\n    legend.position = \"top\", ## place legend above plot\n    plot.title = element_text(face = \"bold\", size = rel(1.4)), ## larger, bold title\n    axis.text = element_text(family = \"Spline Sans Mono\"), ## monospaced font for axes\n    axis.title.x = element_text( ## left-aligned, grey x axis label\n      hjust = 0, color = \"grey20\", margin = margin(t = 12)\n    ),\n    legend.text = element_text(size = rel(1)), ## larger legend labels\n    strip.text = element_text(face = \"bold\", size = rel(1.15)), ## larger, bold facet labels\n    panel.grid.major.x = element_blank(), ## no vertical major lines\n    panel.grid.minor = element_blank(), ## no minor grid lines\n    panel.spacing.x = unit(20, \"pt\"), ## increase white space between panels\n    panel.spacing.y = unit(10, \"pt\"), ## increase white space between panels\n    plot.margin = margin(rep(15, 4)) ## adjust white space around plot\n  )\n```\n:::\n\n\n\n# Saving Plots\n\n\n## Save the Graphic\n\n<br>\n\n\n::: {.cell hash='01_fundamentals_cache/revealjs/ggplot-save_d44b699da703b6ec14b258723e9a6597'}\n\n```{.r .cell-code}\nggsave(filename = \"my_plot.png\", plot = g)\n```\n:::\n\n\n::: fragment\n\n::: {.cell hash='01_fundamentals_cache/revealjs/ggplot-save-implicit_92ec15296768c413af256ad3d9c851bc'}\n\n```{.r .cell-code}\nggsave(\"my_plot.png\")\n```\n:::\n\n:::\n\n<br>\n\n::: fragment\n\n::: {.cell hash='01_fundamentals_cache/revealjs/ggplot-save-aspect_8b959c0e2a53d032eefc17211b72e34d'}\n\n```{.r .cell-code}\nggsave(\"my_plot.png\", width = 6, height = 5, dpi = 600)\n```\n:::\n\n:::\n\n\n## Plot Resolution\n\n\n\n\n\n::: {layout-ncol=\"2\"}\n![](plots/resolution-dpi-100.png)\n\n![](plots/resolution-dpi-600.png)\n:::\n\n\n## Plot Resolution\n\n::: {layout-ncol=\"2\"}\n![](img/fundamentals/resolution-dpi-100-zoom.png)\n\n![](img/fundamentals/resolution-dpi-600-zoom.png)\n:::\n\n\n## Save the Graphic\n\n<br>\n\n\n::: {.cell hash='01_fundamentals_cache/revealjs/ggplot-save_d44b699da703b6ec14b258723e9a6597'}\n\n```{.r .cell-code}\nggsave(filename = \"my_plot.png\", plot = g)\n```\n:::\n\n::: {.cell hash='01_fundamentals_cache/revealjs/ggplot-save-implicit_92ec15296768c413af256ad3d9c851bc'}\n\n```{.r .cell-code}\nggsave(\"my_plot.png\")\n```\n:::\n\n\n<br>\n\n\n::: {.cell hash='01_fundamentals_cache/revealjs/ggplot-save-aspect_8b959c0e2a53d032eefc17211b72e34d'}\n\n```{.r .cell-code}\nggsave(\"my_plot.png\", width = 6, height = 5, dpi = 600)\n```\n:::\n\n\n::: fragment\n\n::: {.cell hash='01_fundamentals_cache/revealjs/ggplot-save-unit_96ed63db9b6447c51eb8a859f3c4ddd5'}\n\n```{.r .cell-code}\nggsave(\"my_plot.png\", width = 6*2.54, height = 5*2.54, unit = \"cm\", dpi = 600)\n```\n:::\n\n:::\n\n<br>\n\n::: fragment\n\n::: {.cell hash='01_fundamentals_cache/revealjs/ggplot-save-raster-agg_5756f2f30d74eef1b2adde069d669804'}\n\n```{.r .cell-code}\nggsave(\"my_plot.png\", device = agg_png)\n```\n:::\n\n:::\n\n::: fragment\n\n::: {.cell hash='01_fundamentals_cache/revealjs/ggplot-save-cairo_aa1475b0c7425e2438529789aa7f6b66'}\n\n```{.r .cell-code}\nggsave(\"my_plot.pdf\", device = cairo_pdf)\n```\n:::\n\n:::\n\n\n--------------------------------------------------------------------------------\n\n<br>\n\n![Modified from canva.com](img/fundamentals/vector-raster-canva.png){fig-alt=\"A comparison of vector and raster graphics.\" fig-width=\"150%\"}\n\n\n\n## The {ragg} Package\n\n<span class='simple-highlight-grn' style='font-size:2.1rem;'>provides drop-in replacements for the default raster graphic devices</span>\n\n::: incremental\n\n* faster\n* direct access to all system fonts\n* advanced text rendering\n  * including support for right-to-left text, emojis, and font fallback\n* high quality anti-aliasing\n* high quality rotated text\n* supports 16-bit output\n* system independent rendering\n\n:::\n\n\n## The {ragg} Package\n\n<br>\n\n![Source: [tidyverse.org/blog/2021/02/modern-text-features](https://www.tidyverse.org/blog/2021/02/modern-text-features/)](img/fundamentals/ragg-left-and-right.png){fig-align=\"center\" fig-alt=\"A comparison of different graphic devices in R comparing the rendering of right-to-left text (and mixing left-to-right and right-to-left text).\"}\n\n\n## The {ragg} Package\n\n<br>\n\n![Source: [tidyverse.org/blog/2021/02/modern-text-features](https://www.tidyverse.org/blog/2021/02/modern-text-features/)](img/fundamentals/ragg-ligatures.png){fig-align=\"center\" fig-alt=\"A comparison of different graphic devices in R comparing the rendering of font ligatures.\"}\n\n\n## The {ragg} Package\n\n<br>\n\n![Source: [tidyverse.org/blog/2021/02/modern-text-features](https://www.tidyverse.org/blog/2021/02/modern-text-features/)](img/fundamentals/ragg-emojis.png){fig-align=\"center\" fig-alt=\"A comparison of different graphic devices in R comparing the rendering of emojis.\"}\n\n\n## The {ragg} Package\n\n<br>\n\n![Source: [tidyverse.org/blog/2021/02/modern-text-features](https://www.tidyverse.org/blog/2021/02/modern-text-features/)](img/fundamentals/ragg-fallback.png){fig-align=\"center\" fig-alt=\"A comparison of different graphic devices in R comparing the rendering missing glyphs, partly making use of fallback fonts.\"}\n\n\n## The {ragg} Package\n\n::: incremental\n* use {ragg} when saving ggplots by passing agg device function: `ggsave(device = agg_png))` ([used by default if installed](https://github.com/tidyverse/ggplot2/pull/4388))\n* use {ragg} in the *Rstudio Plots* pane be setting the backend to AGG: ![](img/fundamentals/ragg-rstudio.png){fig-alt=\"How to set the AGG device as the default in RStudio via Global Options > > General > Graphics > Backend.\"}\n* use {ragg} when knitting Rmarkdown files by setting `dev=\"ragg_png\"` in the code chunk options.\n\n:::\n\n\n## Save the Graphic\n\n<br>\n\n\n::: {.cell hash='01_fundamentals_cache/revealjs/ggplot-save_d44b699da703b6ec14b258723e9a6597'}\n\n```{.r .cell-code}\nggsave(filename = \"my_plot.png\", plot = g)\n```\n:::\n\n::: {.cell hash='01_fundamentals_cache/revealjs/ggplot-save-implicit_92ec15296768c413af256ad3d9c851bc'}\n\n```{.r .cell-code}\nggsave(\"my_plot.png\")\n```\n:::\n\n\n<br>\n\n\n::: {.cell hash='01_fundamentals_cache/revealjs/ggplot-save-aspect_8b959c0e2a53d032eefc17211b72e34d'}\n\n```{.r .cell-code}\nggsave(\"my_plot.png\", width = 6, height = 5, dpi = 600)\n```\n:::\n\n::: {.cell hash='01_fundamentals_cache/revealjs/ggplot-save-unit_96ed63db9b6447c51eb8a859f3c4ddd5'}\n\n```{.r .cell-code}\nggsave(\"my_plot.png\", width = 6*2.54, height = 5*2.54, unit = \"cm\", dpi = 600)\n```\n:::\n\n<br>\n\n\n::: {.cell hash='01_fundamentals_cache/revealjs/ggplot-save-raster-agg_5756f2f30d74eef1b2adde069d669804'}\n\n```{.r .cell-code}\nggsave(\"my_plot.png\", device = agg_png)\n```\n:::\n\n::: {.cell hash='01_fundamentals_cache/revealjs/ggplot-save-cairo_aa1475b0c7425e2438529789aa7f6b66'}\n\n```{.r .cell-code}\nggsave(\"my_plot.pdf\", device = cairo_pdf)\n```\n:::\n\n\n::: fragment\n\n::: {.cell hash='01_fundamentals_cache/revealjs/ggplot-save-svg_61a80339cd659c72183a0f2573f194b2'}\n\n```{.r .cell-code}\nggsave(\"my_plot.svg\")\n```\n:::\n\n:::\n\n\n--------------------------------------------------------------------------------\n\n![](img/fundamentals/figma-svg.png){fig-align=\"center\"}\n\n\n## How to Work with Aspect Ratios\n\n::: incremental\n-   don't rely on the Rstudio viewer pane!\n-   once you have a *\"it's getting close\"* prototype, settle on a plot size<br><br>\n-   **Approach 1:** save the file and inspect it—go back to your IDE—repeat\n    -   tedious and time-consuming...<br><br>\n-   **Approach 2:** use a qmd or rmd with inline output and chunk settings\n    -   set `fig-width` / `fig.width` and `fig-height` / `fig.height`<br>per chunk or globally<br><br>\n:::\n\n\n## Setting Plot Sizes in Quarto and Rmarkdown\n\n![](img/fundamentals/plot-size-chunk-yaml.png){fig-alt=\"A screenshot of an exemplary Qmd file with two chunks with different settings of fig-width and fig-height as YAML-styled options using the hashpipe. Unfortunately, these are not respected when the chunk output is printed inline.\" fig-width=\"60%\"}\n\n\n## Setting Plot Sizes in Quarto and Rmarkdown\n\n![](img/fundamentals/plot-size-chunk-inline.png){fig-alt=\"A screenshot of an exemplary Qmd file with two chunks with different settings of fig.width and fig.height set as inline chunk options.\" fig-width=\"60%\"}\n\n\n## How to Work with Aspect Ratios\n\n-   don't rely on the Rstudio viewer pane!\n-   once you have a *\"it's getting close\"* prototype, settle on a plot size<br><br>\n-   **Approach 1:** save the file and inspect it—go back to your IDE—repeat\n    -   tedious and time-consuming...<br><br>\n-   **Approach 2:** use a qmd or rmd with inline output and chunk settings\n    -   set `fig-width` / `fig.width` and `fig-height` / `fig.height`<br>per chunk or globally<br><br>\n-   **Approach 3:** use our [{camcorder} package](https://github.com/thebioengineer/camcorder)\n    -   saves output from all `ggplot()` calls and displays it in the viewer pane\n\n\n## Setting Plot Sizes via {camcorder}\n\n<br>\n\n![](img/fundamentals/plot-size-camcorder-a.png){fig-alt=\"A screenshot of an exemplary R script with a plot automatically saved and isplayed in correct aspect ratio thanks to the camcorder package.\" fig-width=\"120%\"}\n\n\n## Setting Plot Sizes via {camcorder}\n\n<br>\n\n![](img/fundamentals/plot-size-camcorder-b.png){fig-alt=\"A screenshot of an exemplary R script with a plot automatically saved and isplayed in correct aspect ratio thanks to the camcorder package.\" fig-width=\"120%\"}\n\n\n## Setting Plot Sizes via {camcorder}\n\n\n::: {.cell hash='01_fundamentals_cache/revealjs/camcorder-record_af262c876aba49baa6b771c9596ecafb'}\n\n```{.r .cell-code  code-line-numbers=\"1,2,3,4,5,6,7|9,10,11,12,13,15\"}\ncamcorder::gg_record(\n  dir = here::here(\"temp\"),  ## path for plot files\n  device = \"png\",            ## device to use\n  width = 10,                ## figure width\n  height = 5,                ## figure height\n  dpi = 600                  ## plot resolution\n)\n\ng <- ggplot(bikes, aes(x = temp, y = count, color = day_night)) +\n  geom_point(alpha = .3, size = 2) +\n  scale_color_manual(values = c(day = \"#FFA200\", night = \"#757BC7\")) +\n  theme_minimal(base_size = 18, base_family = \"Asap SemiCondensed\") +\n  theme(panel.grid.minor = element_blank())\n\ng\n```\n:::\n\n\n\n## Setting Plot Sizes via {camcorder}\n\n\n::: {.cell hash='01_fundamentals_cache/revealjs/camcorder-resize_e1bb4cd1eba93e9be629ed61a988c18a'}\n\n```{.r .cell-code  code-line-numbers=\"17,19\"}\ncamcorder::gg_record(\n  dir = here::here(\"temp\"),  ## path for plot files\n  device = \"png\",            ## device to use\n  width = 10,                ## figure width\n  height = 5,                ## figure height\n  dpi = 600                  ## plot resolution\n)\n\ng <- ggplot(bikes, aes(x = temp, y = count, color = day_night)) +\n  geom_point(alpha = .3, size = 2) +\n  scale_color_manual(values = c(day = \"#FFA200\", night = \"#757BC7\")) +\n  theme_minimal(base_size = 18, base_family = \"Asap SemiCondensed\") +\n  theme(panel.grid.minor = element_blank())\n\ng\n\ncamcorder::gg_resize_film(width = 20) ## update figure width\n\ng\n```\n:::\n\n\n\n\n## Your Turn\n\n::: question\n-   **Explore the TfL bike share data visually:**\n    -  Create a *time series* of counts per day and night.\n    -  Draw *box and whisker plots* of average temperatures per season.\n    -  Visualize bike counts per weather type and period as *bar chart*.\n-   **Polish the charts and export them in a format of your choice.**\n:::\n\n\n## Your Turn\n\n::: question\n-   **Explore the TfL bike share data visually:**\n    -  Create a *time series* of counts per day and night.\n    -  Draw *box and whisker plots* of average temperatures per season.\n    -  Visualize bike counts per weather type and period as *bar chart*.\n-   **Polish the charts and export them in a format of your choice.**\n-   **Discuss / investigate with your neighbor:**\n    -  What are the differences between `geom_line()` and `geom_path()`?\n    -  Why can you use `geom_smooth()` and `stat_smooth()` interchangeably?\n    -  What are the three ways to *remove a legend* from a ggplot?\n    -  Which is your favorite theme? \n    -  What is your favorite ggplot2 extension package?\n:::\n\n##  {background-image=\"img/exercises/exercise-what-now.png\" background-position=\"center\" background-size=\"75%\"}\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../site_libs/kePrint-0.0.1/kePrint.js\"></script>\n<link href=\"../site_libs/lightable-0.0.1/lightable.css\" rel=\"stylesheet\" />\n"
      ],
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}